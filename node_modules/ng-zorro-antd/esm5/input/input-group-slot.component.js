/**
 * @fileoverview added by tsickle
 * Generated from: input-group-slot.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';
var NzInputGroupSlotComponent = /** @class */ (function () {
    function NzInputGroupSlotComponent() {
        this.icon = null;
        this.type = null;
        this.template = null;
    }
    NzInputGroupSlotComponent.decorators = [
        { type: Component, args: [{
                    selector: '[nz-input-group-slot]',
                    preserveWhitespaces: false,
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: "\n    <i nz-icon [nzType]=\"icon\" *ngIf=\"icon\"></i>\n    <ng-container *nzStringTemplateOutlet=\"template\">{{ template }}</ng-container>\n  ",
                    host: {
                        '[class.ant-input-group-addon]': "type === 'addon'",
                        '[class.ant-input-prefix]': "type === 'prefix'",
                        '[class.ant-input-suffix]': "type === 'suffix'"
                    }
                }] }
    ];
    NzInputGroupSlotComponent.propDecorators = {
        icon: [{ type: Input }],
        type: [{ type: Input }],
        template: [{ type: Input }]
    };
    return NzInputGroupSlotComponent;
}());
export { NzInputGroupSlotComponent };
if (false) {
    /** @type {?} */
    NzInputGroupSlotComponent.prototype.icon;
    /** @type {?} */
    NzInputGroupSlotComponent.prototype.type;
    /** @type {?} */
    NzInputGroupSlotComponent.prototype.template;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtZ3JvdXAtc2xvdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkL2lucHV0LyIsInNvdXJjZXMiOlsiaW5wdXQtZ3JvdXAtc2xvdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBUUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUc7SUFBQTtRQWdCVyxTQUFJLEdBQWtCLElBQUksQ0FBQztRQUMzQixTQUFJLEdBQXlDLElBQUksQ0FBQztRQUNsRCxhQUFRLEdBQXNDLElBQUksQ0FBQztJQUM5RCxDQUFDOztnQkFuQkEsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLG1CQUFtQixFQUFFLEtBQUs7b0JBQzFCLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUNyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsUUFBUSxFQUFFLGtKQUdUO29CQUNELElBQUksRUFBRTt3QkFDSiwrQkFBK0IsRUFBRSxrQkFBa0I7d0JBQ25ELDBCQUEwQixFQUFFLG1CQUFtQjt3QkFDL0MsMEJBQTBCLEVBQUUsbUJBQW1CO3FCQUNoRDtpQkFDRjs7O3VCQUVFLEtBQUs7dUJBQ0wsS0FBSzsyQkFDTCxLQUFLOztJQUNSLGdDQUFDO0NBQUEsQUFuQkQsSUFtQkM7U0FKWSx5QkFBeUI7OztJQUNwQyx5Q0FBb0M7O0lBQ3BDLHlDQUEyRDs7SUFDM0QsNkNBQTREIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0LCBUZW1wbGF0ZVJlZiwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnW256LWlucHV0LWdyb3VwLXNsb3RdJyxcbiAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxpIG56LWljb24gW256VHlwZV09XCJpY29uXCIgKm5nSWY9XCJpY29uXCI+PC9pPlxuICAgIDxuZy1jb250YWluZXIgKm56U3RyaW5nVGVtcGxhdGVPdXRsZXQ9XCJ0ZW1wbGF0ZVwiPnt7IHRlbXBsYXRlIH19PC9uZy1jb250YWluZXI+XG4gIGAsXG4gIGhvc3Q6IHtcbiAgICAnW2NsYXNzLmFudC1pbnB1dC1ncm91cC1hZGRvbl0nOiBgdHlwZSA9PT0gJ2FkZG9uJ2AsXG4gICAgJ1tjbGFzcy5hbnQtaW5wdXQtcHJlZml4XSc6IGB0eXBlID09PSAncHJlZml4J2AsXG4gICAgJ1tjbGFzcy5hbnQtaW5wdXQtc3VmZml4XSc6IGB0eXBlID09PSAnc3VmZml4J2BcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOeklucHV0R3JvdXBTbG90Q29tcG9uZW50IHtcbiAgQElucHV0KCkgaWNvbjogc3RyaW5nIHwgbnVsbCA9IG51bGw7XG4gIEBJbnB1dCgpIHR5cGU6ICdhZGRvbicgfCAncHJlZml4JyB8ICdzdWZmaXgnIHwgbnVsbCA9IG51bGw7XG4gIEBJbnB1dCgpIHRlbXBsYXRlOiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjx2b2lkPiB8IG51bGwgPSBudWxsO1xufVxuIl19