/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange, ConnectionPositionPair, HorizontalConnectionPos, VerticalConnectionPos } from '@angular/cdk/overlay';
import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges } from '@angular/core';
import { CandyDate, CompatibleValue } from 'ng-zorro-antd/core/time';
import { NzSafeAny } from 'ng-zorro-antd/core/types';
import { DateHelperService } from 'ng-zorro-antd/i18n';
import { Subject } from 'rxjs';
import { DatePickerService } from './date-picker.service';
import { DateRangePopupComponent } from './date-range-popup.component';
import { RangePartType } from './standard-types';
import * as ɵngcc0 from '@angular/core';
export declare class NzPickerComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {
    private elementRef;
    private dateHelper;
    private changeDetector;
    datePickerService: DatePickerService;
    noAnimation: boolean;
    isRange: boolean;
    open: boolean | undefined;
    disabled: boolean;
    placeholder: string | string[];
    allowClear: boolean;
    autoFocus: boolean;
    format: string;
    separator: string;
    popupStyle: object;
    dropdownClassName: string;
    readonly focusChange: EventEmitter<boolean>;
    readonly valueChange: EventEmitter<CandyDate | CandyDate[] | null>;
    readonly openChange: EventEmitter<boolean>;
    cdkConnectedOverlay: CdkConnectedOverlay;
    separatorElement: ElementRef;
    pickerInput: ElementRef<HTMLInputElement>;
    rangePickerInputs: QueryList<ElementRef<HTMLInputElement>>;
    panel: DateRangePopupComponent;
    origin: CdkOverlayOrigin;
    document: Document;
    inputSize: number;
    inputWidth: number;
    arrowLeft: number;
    destroy$: Subject<unknown>;
    prefixCls: string;
    inputValue: NzSafeAny;
    activeBarStyle: object;
    animationOpenState: boolean;
    overlayOpen: boolean;
    overlayPositions: ConnectionPositionPair[];
    currentPositionX: HorizontalConnectionPos;
    currentPositionY: VerticalConnectionPos;
    get realOpenState(): boolean;
    constructor(elementRef: ElementRef, dateHelper: DateHelperService, changeDetector: ChangeDetectorRef, datePickerService: DatePickerService, doc: NzSafeAny);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    resetInputWidthAndArrowLeft(): void;
    getInput(partType?: RangePartType): HTMLInputElement;
    focus(): void;
    onFocus(partType?: RangePartType): void;
    onBlur(): void;
    showOverlay(): void;
    hideOverlay(): void;
    showClear(): boolean;
    onClickInputBox(partType?: RangePartType): void;
    onClickBackdrop(): void;
    onOverlayDetach(): void;
    onOverlayKeydown(event: KeyboardEvent): void;
    onPositionChange(position: ConnectedOverlayPositionChange): void;
    onClickClear(event: MouseEvent): void;
    updateInputValue(): void;
    formatValue(value: CandyDate): string;
    onInputKeyup(event: Event, isEnter?: boolean): void;
    private checkValidInputDate;
    getPlaceholder(partType?: RangePartType): string;
    isEmptyValue(value: CompatibleValue): boolean;
    isOpenHandledByUser(): boolean;
    animationStart(): void;
    animationDone(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzPickerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzPickerComponent, "[nz-picker]", ["nzPicker"], { "noAnimation": "noAnimation"; "isRange": "isRange"; "open": "open"; "disabled": "disabled"; "placeholder": "placeholder"; "allowClear": "allowClear"; "autoFocus": "autoFocus"; "format": "format"; "separator": "separator"; "popupStyle": "popupStyle"; "dropdownClassName": "dropdownClassName"; }, { "focusChange": "focusChange"; "valueChange": "valueChange"; "openChange": "openChange"; }, ["panel"], ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGlja2VyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwaWNrZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBDZGtDb25uZWN0ZWRPdmVybGF5LCBDZGtPdmVybGF5T3JpZ2luLCBDb25uZWN0ZWRPdmVybGF5UG9zaXRpb25DaGFuZ2UsIENvbm5lY3Rpb25Qb3NpdGlvblBhaXIsIEhvcml6b250YWxDb25uZWN0aW9uUG9zLCBWZXJ0aWNhbENvbm5lY3Rpb25Qb3MgfSBmcm9tICdAYW5ndWxhci9jZGsvb3ZlcmxheSc7XG5pbXBvcnQgeyBBZnRlclZpZXdJbml0LCBDaGFuZ2VEZXRlY3RvclJlZiwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBRdWVyeUxpc3QsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENhbmR5RGF0ZSwgQ29tcGF0aWJsZVZhbHVlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3RpbWUnO1xuaW1wb3J0IHsgTnpTYWZlQW55IH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcbmltcG9ydCB7IERhdGVIZWxwZXJTZXJ2aWNlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9pMThuJztcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IERhdGVQaWNrZXJTZXJ2aWNlIH0gZnJvbSAnLi9kYXRlLXBpY2tlci5zZXJ2aWNlJztcbmltcG9ydCB7IERhdGVSYW5nZVBvcHVwQ29tcG9uZW50IH0gZnJvbSAnLi9kYXRlLXJhbmdlLXBvcHVwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSYW5nZVBhcnRUeXBlIH0gZnJvbSAnLi9zdGFuZGFyZC10eXBlcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOelBpY2tlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgZWxlbWVudFJlZjtcbiAgICBwcml2YXRlIGRhdGVIZWxwZXI7XG4gICAgcHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjtcbiAgICBkYXRlUGlja2VyU2VydmljZTogRGF0ZVBpY2tlclNlcnZpY2U7XG4gICAgbm9BbmltYXRpb246IGJvb2xlYW47XG4gICAgaXNSYW5nZTogYm9vbGVhbjtcbiAgICBvcGVuOiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIHBsYWNlaG9sZGVyOiBzdHJpbmcgfCBzdHJpbmdbXTtcbiAgICBhbGxvd0NsZWFyOiBib29sZWFuO1xuICAgIGF1dG9Gb2N1czogYm9vbGVhbjtcbiAgICBmb3JtYXQ6IHN0cmluZztcbiAgICBzZXBhcmF0b3I6IHN0cmluZztcbiAgICBwb3B1cFN0eWxlOiBvYmplY3Q7XG4gICAgZHJvcGRvd25DbGFzc05hbWU6IHN0cmluZztcbiAgICByZWFkb25seSBmb2N1c0NoYW5nZTogRXZlbnRFbWl0dGVyPGJvb2xlYW4+O1xuICAgIHJlYWRvbmx5IHZhbHVlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Q2FuZHlEYXRlIHwgQ2FuZHlEYXRlW10gfCBudWxsPjtcbiAgICByZWFkb25seSBvcGVuQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj47XG4gICAgY2RrQ29ubmVjdGVkT3ZlcmxheTogQ2RrQ29ubmVjdGVkT3ZlcmxheTtcbiAgICBzZXBhcmF0b3JFbGVtZW50OiBFbGVtZW50UmVmO1xuICAgIHBpY2tlcklucHV0OiBFbGVtZW50UmVmPEhUTUxJbnB1dEVsZW1lbnQ+O1xuICAgIHJhbmdlUGlja2VySW5wdXRzOiBRdWVyeUxpc3Q8RWxlbWVudFJlZjxIVE1MSW5wdXRFbGVtZW50Pj47XG4gICAgcGFuZWw6IERhdGVSYW5nZVBvcHVwQ29tcG9uZW50O1xuICAgIG9yaWdpbjogQ2RrT3ZlcmxheU9yaWdpbjtcbiAgICBkb2N1bWVudDogRG9jdW1lbnQ7XG4gICAgaW5wdXRTaXplOiBudW1iZXI7XG4gICAgaW5wdXRXaWR0aDogbnVtYmVyO1xuICAgIGFycm93TGVmdDogbnVtYmVyO1xuICAgIGRlc3Ryb3kkOiBTdWJqZWN0PHVua25vd24+O1xuICAgIHByZWZpeENsczogc3RyaW5nO1xuICAgIGlucHV0VmFsdWU6IE56U2FmZUFueTtcbiAgICBhY3RpdmVCYXJTdHlsZTogb2JqZWN0O1xuICAgIGFuaW1hdGlvbk9wZW5TdGF0ZTogYm9vbGVhbjtcbiAgICBvdmVybGF5T3BlbjogYm9vbGVhbjtcbiAgICBvdmVybGF5UG9zaXRpb25zOiBDb25uZWN0aW9uUG9zaXRpb25QYWlyW107XG4gICAgY3VycmVudFBvc2l0aW9uWDogSG9yaXpvbnRhbENvbm5lY3Rpb25Qb3M7XG4gICAgY3VycmVudFBvc2l0aW9uWTogVmVydGljYWxDb25uZWN0aW9uUG9zO1xuICAgIGdldCByZWFsT3BlblN0YXRlKCk6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoZWxlbWVudFJlZjogRWxlbWVudFJlZiwgZGF0ZUhlbHBlcjogRGF0ZUhlbHBlclNlcnZpY2UsIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZiwgZGF0ZVBpY2tlclNlcnZpY2U6IERhdGVQaWNrZXJTZXJ2aWNlLCBkb2M6IE56U2FmZUFueSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIHJlc2V0SW5wdXRXaWR0aEFuZEFycm93TGVmdCgpOiB2b2lkO1xuICAgIGdldElucHV0KHBhcnRUeXBlPzogUmFuZ2VQYXJ0VHlwZSk6IEhUTUxJbnB1dEVsZW1lbnQ7XG4gICAgZm9jdXMoKTogdm9pZDtcbiAgICBvbkZvY3VzKHBhcnRUeXBlPzogUmFuZ2VQYXJ0VHlwZSk6IHZvaWQ7XG4gICAgb25CbHVyKCk6IHZvaWQ7XG4gICAgc2hvd092ZXJsYXkoKTogdm9pZDtcbiAgICBoaWRlT3ZlcmxheSgpOiB2b2lkO1xuICAgIHNob3dDbGVhcigpOiBib29sZWFuO1xuICAgIG9uQ2xpY2tJbnB1dEJveChwYXJ0VHlwZT86IFJhbmdlUGFydFR5cGUpOiB2b2lkO1xuICAgIG9uQ2xpY2tCYWNrZHJvcCgpOiB2b2lkO1xuICAgIG9uT3ZlcmxheURldGFjaCgpOiB2b2lkO1xuICAgIG9uT3ZlcmxheUtleWRvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkO1xuICAgIG9uUG9zaXRpb25DaGFuZ2UocG9zaXRpb246IENvbm5lY3RlZE92ZXJsYXlQb3NpdGlvbkNoYW5nZSk6IHZvaWQ7XG4gICAgb25DbGlja0NsZWFyKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZDtcbiAgICB1cGRhdGVJbnB1dFZhbHVlKCk6IHZvaWQ7XG4gICAgZm9ybWF0VmFsdWUodmFsdWU6IENhbmR5RGF0ZSk6IHN0cmluZztcbiAgICBvbklucHV0S2V5dXAoZXZlbnQ6IEV2ZW50LCBpc0VudGVyPzogYm9vbGVhbik6IHZvaWQ7XG4gICAgcHJpdmF0ZSBjaGVja1ZhbGlkSW5wdXREYXRlO1xuICAgIGdldFBsYWNlaG9sZGVyKHBhcnRUeXBlPzogUmFuZ2VQYXJ0VHlwZSk6IHN0cmluZztcbiAgICBpc0VtcHR5VmFsdWUodmFsdWU6IENvbXBhdGlibGVWYWx1ZSk6IGJvb2xlYW47XG4gICAgaXNPcGVuSGFuZGxlZEJ5VXNlcigpOiBib29sZWFuO1xuICAgIGFuaW1hdGlvblN0YXJ0KCk6IHZvaWQ7XG4gICAgYW5pbWF0aW9uRG9uZSgpOiB2b2lkO1xufVxuIl19