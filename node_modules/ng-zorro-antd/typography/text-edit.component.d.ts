/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { NzSafeAny } from 'ng-zorro-antd/core/types';
import { NzI18nService } from 'ng-zorro-antd/i18n';
import { NzAutosizeDirective } from 'ng-zorro-antd/input';
import * as ɵngcc0 from '@angular/core';
export declare class NzTextEditComponent implements OnInit, OnDestroy {
    private host;
    private cdr;
    private i18n;
    editing: boolean;
    locale: NzSafeAny;
    private destroy$;
    text: string;
    readonly startEditing: EventEmitter<void>;
    readonly endEditing: EventEmitter<string>;
    textarea: ElementRef<HTMLTextAreaElement>;
    autosizeDirective: NzAutosizeDirective;
    beforeText: string;
    currentText: string;
    nativeElement: any;
    constructor(host: ElementRef, cdr: ChangeDetectorRef, i18n: NzI18nService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    onClick(): void;
    confirm(): void;
    onInput(event: Event): void;
    onEnter(event: KeyboardEvent): void;
    onCancel(): void;
    focusAndSetValue(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzTextEditComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzTextEditComponent, "nz-text-edit", ["nzTextEdit"], { "text": "text"; }, { "startEditing": "startEditing"; "endEditing": "endEditing"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC1lZGl0LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJ0ZXh0LWVkaXQuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTnpTYWZlQW55IH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcbmltcG9ydCB7IE56STE4blNlcnZpY2UgfSBmcm9tICduZy16b3Jyby1hbnRkL2kxOG4nO1xuaW1wb3J0IHsgTnpBdXRvc2l6ZURpcmVjdGl2ZSB9IGZyb20gJ25nLXpvcnJvLWFudGQvaW5wdXQnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpUZXh0RWRpdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIGhvc3Q7XG4gICAgcHJpdmF0ZSBjZHI7XG4gICAgcHJpdmF0ZSBpMThuO1xuICAgIGVkaXRpbmc6IGJvb2xlYW47XG4gICAgbG9jYWxlOiBOelNhZmVBbnk7XG4gICAgcHJpdmF0ZSBkZXN0cm95JDtcbiAgICB0ZXh0OiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgc3RhcnRFZGl0aW5nOiBFdmVudEVtaXR0ZXI8dm9pZD47XG4gICAgcmVhZG9ubHkgZW5kRWRpdGluZzogRXZlbnRFbWl0dGVyPHN0cmluZz47XG4gICAgdGV4dGFyZWE6IEVsZW1lbnRSZWY8SFRNTFRleHRBcmVhRWxlbWVudD47XG4gICAgYXV0b3NpemVEaXJlY3RpdmU6IE56QXV0b3NpemVEaXJlY3RpdmU7XG4gICAgYmVmb3JlVGV4dDogc3RyaW5nO1xuICAgIGN1cnJlbnRUZXh0OiBzdHJpbmc7XG4gICAgbmF0aXZlRWxlbWVudDogYW55O1xuICAgIGNvbnN0cnVjdG9yKGhvc3Q6IEVsZW1lbnRSZWYsIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIGkxOG46IE56STE4blNlcnZpY2UpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBvbkNsaWNrKCk6IHZvaWQ7XG4gICAgY29uZmlybSgpOiB2b2lkO1xuICAgIG9uSW5wdXQoZXZlbnQ6IEV2ZW50KTogdm9pZDtcbiAgICBvbkVudGVyKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBvbkNhbmNlbCgpOiB2b2lkO1xuICAgIGZvY3VzQW5kU2V0VmFsdWUoKTogdm9pZDtcbn1cbiJdfQ==