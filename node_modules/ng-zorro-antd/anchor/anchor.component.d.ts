/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Platform } from '@angular/cdk/platform';
import { AfterViewInit, ChangeDetectorRef, EventEmitter, NgZone, OnChanges, OnDestroy, Renderer2, SimpleChanges } from '@angular/core';
import { NzConfigService } from 'ng-zorro-antd/core/config';
import { NzScrollService } from 'ng-zorro-antd/core/services';
import { BooleanInput, NgStyleInterface, NumberInput, NzSafeAny } from 'ng-zorro-antd/core/types';
import { NzAnchorLinkComponent } from './anchor-link.component';
import * as ɵngcc0 from '@angular/core';
export declare class NzAnchorComponent implements OnDestroy, AfterViewInit, OnChanges {
    private doc;
    nzConfigService: NzConfigService;
    private scrollSrv;
    private cdr;
    private platform;
    private zone;
    private renderer;
    static ngAcceptInputType_nzAffix: BooleanInput;
    static ngAcceptInputType_nzShowInkInFixed: BooleanInput;
    static ngAcceptInputType_nzBounds: NumberInput;
    static ngAcceptInputType_nzOffsetTop: NumberInput;
    private ink;
    nzAffix: boolean;
    nzShowInkInFixed: boolean;
    nzBounds: number;
    nzOffsetTop: number;
    nzContainer: string | HTMLElement;
    nzTarget: string | HTMLElement;
    readonly nzClick: EventEmitter<string>;
    readonly nzScroll: EventEmitter<NzAnchorLinkComponent>;
    visible: boolean;
    wrapperStyle: NgStyleInterface;
    container: HTMLElement | Window;
    private links;
    private animating;
    private destroy$;
    private handleScrollTimeoutID;
    constructor(doc: NzSafeAny, nzConfigService: NzConfigService, scrollSrv: NzScrollService, cdr: ChangeDetectorRef, platform: Platform, zone: NgZone, renderer: Renderer2);
    registerLink(link: NzAnchorLinkComponent): void;
    unregisterLink(link: NzAnchorLinkComponent): void;
    private getContainer;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private registerScrollEvent;
    handleScroll(): void;
    private clearActive;
    private handleActive;
    private setVisible;
    handleScrollTo(linkComp: NzAnchorLinkComponent): void;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzAnchorComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzAnchorComponent, "nz-anchor", ["nzAnchor"], { "nzAffix": "nzAffix"; "nzShowInkInFixed": "nzShowInkInFixed"; "nzBounds": "nzBounds"; "nzOffsetTop": "nzOffsetTop"; "nzContainer": "nzContainer"; "nzTarget": "nzTarget"; }, { "nzClick": "nzClick"; "nzScroll": "nzScroll"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5jaG9yLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJhbmNob3IuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWxpYmFiYS5jb20gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IFBsYXRmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3BsYXRmb3JtJztcbmltcG9ydCB7IEFmdGVyVmlld0luaXQsIENoYW5nZURldGVjdG9yUmVmLCBFdmVudEVtaXR0ZXIsIE5nWm9uZSwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIFJlbmRlcmVyMiwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTnpDb25maWdTZXJ2aWNlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL2NvbmZpZyc7XG5pbXBvcnQgeyBOelNjcm9sbFNlcnZpY2UgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvc2VydmljZXMnO1xuaW1wb3J0IHsgQm9vbGVhbklucHV0LCBOZ1N0eWxlSW50ZXJmYWNlLCBOdW1iZXJJbnB1dCwgTnpTYWZlQW55IH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcbmltcG9ydCB7IE56QW5jaG9yTGlua0NvbXBvbmVudCB9IGZyb20gJy4vYW5jaG9yLWxpbmsuY29tcG9uZW50JztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE56QW5jaG9yQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95LCBBZnRlclZpZXdJbml0LCBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgZG9jO1xuICAgIG56Q29uZmlnU2VydmljZTogTnpDb25maWdTZXJ2aWNlO1xuICAgIHByaXZhdGUgc2Nyb2xsU3J2O1xuICAgIHByaXZhdGUgY2RyO1xuICAgIHByaXZhdGUgcGxhdGZvcm07XG4gICAgcHJpdmF0ZSB6b25lO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX256QWZmaXg6IEJvb2xlYW5JbnB1dDtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpTaG93SW5rSW5GaXhlZDogQm9vbGVhbklucHV0O1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9uekJvdW5kczogTnVtYmVySW5wdXQ7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX256T2Zmc2V0VG9wOiBOdW1iZXJJbnB1dDtcbiAgICBwcml2YXRlIGluaztcbiAgICBuekFmZml4OiBib29sZWFuO1xuICAgIG56U2hvd0lua0luRml4ZWQ6IGJvb2xlYW47XG4gICAgbnpCb3VuZHM6IG51bWJlcjtcbiAgICBuek9mZnNldFRvcDogbnVtYmVyO1xuICAgIG56Q29udGFpbmVyOiBzdHJpbmcgfCBIVE1MRWxlbWVudDtcbiAgICBuelRhcmdldDogc3RyaW5nIHwgSFRNTEVsZW1lbnQ7XG4gICAgcmVhZG9ubHkgbnpDbGljazogRXZlbnRFbWl0dGVyPHN0cmluZz47XG4gICAgcmVhZG9ubHkgbnpTY3JvbGw6IEV2ZW50RW1pdHRlcjxOekFuY2hvckxpbmtDb21wb25lbnQ+O1xuICAgIHZpc2libGU6IGJvb2xlYW47XG4gICAgd3JhcHBlclN0eWxlOiBOZ1N0eWxlSW50ZXJmYWNlO1xuICAgIGNvbnRhaW5lcjogSFRNTEVsZW1lbnQgfCBXaW5kb3c7XG4gICAgcHJpdmF0ZSBsaW5rcztcbiAgICBwcml2YXRlIGFuaW1hdGluZztcbiAgICBwcml2YXRlIGRlc3Ryb3kkO1xuICAgIHByaXZhdGUgaGFuZGxlU2Nyb2xsVGltZW91dElEO1xuICAgIGNvbnN0cnVjdG9yKGRvYzogTnpTYWZlQW55LCBuekNvbmZpZ1NlcnZpY2U6IE56Q29uZmlnU2VydmljZSwgc2Nyb2xsU3J2OiBOelNjcm9sbFNlcnZpY2UsIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIHBsYXRmb3JtOiBQbGF0Zm9ybSwgem9uZTogTmdab25lLCByZW5kZXJlcjogUmVuZGVyZXIyKTtcbiAgICByZWdpc3RlckxpbmsobGluazogTnpBbmNob3JMaW5rQ29tcG9uZW50KTogdm9pZDtcbiAgICB1bnJlZ2lzdGVyTGluayhsaW5rOiBOekFuY2hvckxpbmtDb21wb25lbnQpOiB2b2lkO1xuICAgIHByaXZhdGUgZ2V0Q29udGFpbmVyO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSByZWdpc3RlclNjcm9sbEV2ZW50O1xuICAgIGhhbmRsZVNjcm9sbCgpOiB2b2lkO1xuICAgIHByaXZhdGUgY2xlYXJBY3RpdmU7XG4gICAgcHJpdmF0ZSBoYW5kbGVBY3RpdmU7XG4gICAgcHJpdmF0ZSBzZXRWaXNpYmxlO1xuICAgIGhhbmRsZVNjcm9sbFRvKGxpbmtDb21wOiBOekFuY2hvckxpbmtDb21wb25lbnQpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xufVxuIl19