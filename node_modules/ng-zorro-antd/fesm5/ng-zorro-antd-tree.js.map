{"version":3,"file":"ng-zorro-antd-tree.js","sources":["ng://ng-zorro-antd/tree/tree-indent.component.ts","ng://ng-zorro-antd/tree/tree-node-checkbox.component.ts","ng://ng-zorro-antd/tree/tree-node-switcher.component.ts","ng://ng-zorro-antd/tree/tree-node-title.component.ts","ng://ng-zorro-antd/tree/tree-node.component.ts","ng://ng-zorro-antd/tree/tree.service.ts","ng://ng-zorro-antd/tree/tree.component.ts","ng://ng-zorro-antd/tree/tree.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'nz-tree-indent',\n  exportAs: 'nzTreeIndent',\n  template: ` <span *ngFor=\"let i of listOfUnit; let index = index\" [ngClass]=\"unitMapOfClass(index)\"></span> `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[attr.aria-hidden]': 'true',\n    '[class.ant-tree-indent]': '!nzSelectMode',\n    '[class.ant-select-tree-indent]': 'nzSelectMode'\n  }\n})\nexport class NzTreeIndentComponent implements OnInit, OnChanges {\n  @Input() nzTreeLevel: number;\n  @Input() nzIsStart: boolean[];\n  @Input() nzIsEnd: boolean[];\n  @Input() nzSelectMode = false;\n\n  listOfUnit: number[] = [];\n\n  unitMapOfClass(index: number): { [key: string]: boolean } {\n    return {\n      [`ant-tree-indent-unit`]: !this.nzSelectMode,\n      [`ant-tree-indent-unit-start`]: !this.nzSelectMode && this.nzIsStart[index + 1],\n      [`ant-tree-indent-unit-end`]: !this.nzSelectMode && this.nzIsEnd[index + 1],\n      [`ant-select-tree-indent-unit`]: this.nzSelectMode,\n      [`ant-select-tree-indent-unit-start`]: this.nzSelectMode && this.nzIsStart[index + 1],\n      [`ant-select-tree-indent-unit-end`]: this.nzSelectMode && this.nzIsEnd[index + 1]\n    };\n  }\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzTreeLevel } = changes;\n    if (nzTreeLevel) {\n      this.listOfUnit = [...new Array(nzTreeLevel.currentValue || 0)];\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'nz-tree-node-checkbox',\n  template: ` <span [class.ant-tree-checkbox-inner]=\"!nzSelectMode\" [class.ant-select-tree-checkbox-inner]=\"nzSelectMode\"></span> `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-select-tree-checkbox]': `nzSelectMode`,\n    '[class.ant-select-tree-checkbox-checked]': `nzSelectMode && isChecked`,\n    '[class.ant-select-tree-checkbox-indeterminate]': `nzSelectMode && isHalfChecked`,\n    '[class.ant-select-tree-checkbox-disabled]': `nzSelectMode && (isDisabled || isDisableCheckbox)`,\n    '[class.ant-tree-checkbox]': `!nzSelectMode`,\n    '[class.ant-tree-checkbox-checked]': `!nzSelectMode && isChecked`,\n    '[class.ant-tree-checkbox-indeterminate]': `!nzSelectMode && isHalfChecked`,\n    '[class.ant-tree-checkbox-disabled]': `!nzSelectMode && (isDisabled || isDisableCheckbox)`\n  }\n})\nexport class NzTreeNodeCheckboxComponent {\n  @Input() nzSelectMode = false;\n  @Input() isChecked: boolean;\n  @Input() isHalfChecked: boolean;\n  @Input() isDisabled: boolean;\n  @Input() isDisableCheckbox: boolean;\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\nimport { NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\n\n@Component({\n  selector: 'nz-tree-node-switcher',\n  template: `\n    <ng-container *ngIf=\"isShowSwitchIcon\">\n      <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; context: { $implicit: context, origin: context.origin }\">\n          <i\n            nz-icon\n            nzType=\"caret-down\"\n            [class.ant-select-tree-switcher-icon]=\"nzSelectMode\"\n            [class.ant-tree-switcher-icon]=\"!nzSelectMode\"\n          ></i>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"nzShowLine\">\n      <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; context: { $implicit: context, origin: context.origin }\">\n          <i\n            *ngIf=\"isShowLineIcon\"\n            nz-icon\n            [nzType]=\"isSwitcherOpen ? 'minus-square' : 'plus-square'\"\n            class=\"ant-tree-switcher-line-icon\"\n          ></i>\n          <i *ngIf=\"!isShowLineIcon\" nz-icon nzType=\"file\" class=\"ant-tree-switcher-line-icon\"></i>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    <ng-template #loadingTemplate>\n      <i nz-icon nzType=\"loading\" [nzSpin]=\"true\" class=\"ant-tree-switcher-loading-icon\"></i>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-select-tree-switcher]': 'nzSelectMode',\n    '[class.ant-select-tree-switcher-noop]': 'nzSelectMode && isLeaf',\n    '[class.ant-select-tree-switcher_open]': 'nzSelectMode && isSwitcherOpen',\n    '[class.ant-select-tree-switcher_close]': 'nzSelectMode && isSwitcherClose',\n    '[class.ant-tree-switcher]': '!nzSelectMode',\n    '[class.ant-tree-switcher-noop]': '!nzSelectMode && isLeaf',\n    '[class.ant-tree-switcher_open]': '!nzSelectMode && isSwitcherOpen',\n    '[class.ant-tree-switcher_close]': '!nzSelectMode && isSwitcherClose'\n  }\n})\nexport class NzTreeNodeSwitcherComponent {\n  @Input() nzShowExpand: boolean;\n  @Input() nzShowLine: boolean;\n  @Input() nzExpandedIcon: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzSelectMode = false;\n  @Input() context: NzTreeNode;\n  @Input() isLeaf: boolean;\n  @Input() isLoading: boolean;\n  @Input() isExpanded: boolean;\n\n  get isShowLineIcon(): boolean {\n    return !this.isLeaf && this.nzShowLine;\n  }\n\n  get isShowSwitchIcon(): boolean {\n    return !this.isLeaf && !this.nzShowLine;\n  }\n\n  get isSwitcherOpen(): boolean {\n    return this.isExpanded && !this.isLeaf;\n  }\n\n  get isSwitcherClose(): boolean {\n    return !this.isExpanded && !this.isLeaf;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\nimport { NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\n\n@Component({\n  selector: 'nz-tree-node-title',\n  template: ` <ng-template [ngTemplateOutlet]=\"treeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: context, origin: context.origin }\">\n    </ng-template>\n    <ng-container *ngIf=\"!treeTemplate\">\n      <span\n        *ngIf=\"icon && showIcon\"\n        [class.ant-tree-icon__open]=\"isSwitcherOpen\"\n        [class.ant-tree-icon__close]=\"isSwitcherClose\"\n        [class.ant-tree-icon_loading]=\"isLoading\"\n        [class.ant-select-tree-iconEle]=\"selectMode\"\n        [class.ant-tree-iconEle]=\"!selectMode\"\n      >\n        <span\n          [class.ant-select-tree-iconEle]=\"selectMode\"\n          [class.ant-select-tree-icon__customize]=\"selectMode\"\n          [class.ant-tree-iconEle]=\"!selectMode\"\n          [class.ant-tree-icon__customize]=\"!selectMode\"\n        >\n          <i nz-icon *ngIf=\"icon\" [nzType]=\"icon\"></i>\n        </span>\n      </span>\n      <span class=\"ant-tree-title\" [innerHTML]=\"title | nzHighlight: matchedValue:'i':'font-highlight'\"> </span>\n    </ng-container>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[attr.title]': 'title',\n    '[attr.draggable]': 'canDraggable',\n    '[attr.aria-grabbed]': 'canDraggable',\n    '[class.draggable]': 'canDraggable',\n    '[class.ant-select-tree-node-content-wrapper]': `selectMode`,\n    '[class.ant-select-tree-node-content-wrapper-open]': `selectMode && isSwitcherOpen`,\n    '[class.ant-select-tree-node-content-wrapper-close]': `selectMode && isSwitcherClose`,\n    '[class.ant-select-tree-node-selected]': `selectMode && isSelected`,\n    '[class.ant-tree-node-content-wrapper]': `!selectMode`,\n    '[class.ant-tree-node-content-wrapper-open]': `!selectMode && isSwitcherOpen`,\n    '[class.ant-tree-node-content-wrapper-close]': `!selectMode && isSwitcherClose`,\n    '[class.ant-tree-node-selected]': `!selectMode && isSelected`\n  }\n})\nexport class NzTreeNodeTitleComponent {\n  @Input() searchValue: string;\n  @Input() treeTemplate: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() draggable: boolean;\n  @Input() showIcon: boolean;\n  @Input() selectMode = false;\n  @Input() context: NzTreeNode;\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() isLoading: boolean;\n  @Input() isSelected: boolean;\n  @Input() isDisabled: boolean;\n  @Input() isMatched: boolean;\n  @Input() isExpanded: boolean;\n  @Input() isLeaf: boolean;\n\n  get canDraggable(): boolean | null {\n    return this.draggable && !this.isDisabled ? true : null;\n  }\n\n  get matchedValue(): string {\n    return this.isMatched ? this.searchValue : '';\n  }\n\n  get isSwitcherOpen(): boolean {\n    return this.isExpanded && !this.isLeaf;\n  }\n\n  get isSwitcherClose(): boolean {\n    return !this.isExpanded && !this.isLeaf;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  SimpleChange,\n  TemplateRef\n} from '@angular/core';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\n\nimport { NzFormatBeforeDropEvent, NzFormatEmitEvent, NzTreeBaseService, NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'nz-tree-node',\n  exportAs: 'nzTreeNode',\n  template: `\n    <nz-tree-indent [nzTreeLevel]=\"nzTreeNode.level\" [nzSelectMode]=\"nzSelectMode\" [nzIsStart]=\"isStart\" [nzIsEnd]=\"isEnd\"></nz-tree-indent>\n    <nz-tree-node-switcher\n      *ngIf=\"nzShowExpand\"\n      [nzShowExpand]=\"nzShowExpand\"\n      [nzShowLine]=\"nzShowLine\"\n      [nzExpandedIcon]=\"nzExpandedIcon\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [context]=\"nzTreeNode\"\n      [isLeaf]=\"isLeaf\"\n      [isExpanded]=\"isExpanded\"\n      [isLoading]=\"isLoading\"\n      (click)=\"clickExpand($event)\"\n    ></nz-tree-node-switcher>\n    <nz-tree-node-checkbox\n      *ngIf=\"nzCheckable\"\n      (click)=\"clickCheckBox($event)\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [isChecked]=\"isChecked\"\n      [isHalfChecked]=\"isHalfChecked\"\n      [isDisabled]=\"isDisabled\"\n      [isDisableCheckbox]=\"isDisableCheckbox\"\n    ></nz-tree-node-checkbox>\n    <nz-tree-node-title\n      [icon]=\"icon\"\n      [title]=\"title\"\n      [isLoading]=\"isLoading\"\n      [isSelected]=\"isSelected\"\n      [isDisabled]=\"isDisabled\"\n      [isMatched]=\"isMatched\"\n      [isExpanded]=\"isExpanded\"\n      [isLeaf]=\"isLeaf\"\n      [searchValue]=\"nzSearchValue\"\n      [treeTemplate]=\"nzTreeTemplate\"\n      [draggable]=\"nzDraggable\"\n      [showIcon]=\"nzShowIcon\"\n      [selectMode]=\"nzSelectMode\"\n      [context]=\"nzTreeNode\"\n      (dblclick)=\"dblClick($event)\"\n      (click)=\"clickSelect($event)\"\n      (contextmenu)=\"contextMenu($event)\"\n    ></nz-tree-node-title>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-select-tree-treenode]': `nzSelectMode`,\n    '[class.ant-select-tree-treenode-disabled]': `nzSelectMode && isDisabled`,\n    '[class.ant-select-tree-treenode-switcher-open]': `nzSelectMode && isSwitcherOpen`,\n    '[class.ant-select-tree-treenode-switcher-close]': `nzSelectMode && isSwitcherClose`,\n    '[class.ant-select-tree-treenode-checkbox-checked]': `nzSelectMode && isChecked`,\n    '[class.ant-select-tree-treenode-checkbox-indeterminate]': `nzSelectMode && isHalfChecked`,\n    '[class.ant-select-tree-treenode-selected]': `nzSelectMode && isSelected`,\n    '[class.ant-select-tree-treenode-loading]': `nzSelectMode && isLoading`,\n    '[class.ant-tree-treenode]': `!nzSelectMode`,\n    '[class.ant-tree-treenode-disabled]': `!nzSelectMode && isDisabled`,\n    '[class.ant-tree-treenode-switcher-open]': `!nzSelectMode && isSwitcherOpen`,\n    '[class.ant-tree-treenode-switcher-close]': `!nzSelectMode && isSwitcherClose`,\n    '[class.ant-tree-treenode-checkbox-checked]': `!nzSelectMode && isChecked`,\n    '[class.ant-tree-treenode-checkbox-indeterminate]': `!nzSelectMode && isHalfChecked`,\n    '[class.ant-tree-treenode-selected]': `!nzSelectMode && isSelected`,\n    '[class.ant-tree-treenode-loading]': `!nzSelectMode && isLoading`,\n    '[style.display]': 'displayStyle',\n    '(mousedown)': 'onMousedown($event)'\n  }\n})\nexport class NzTreeNodeComponent implements OnInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_nzShowLine: BooleanInput;\n  static ngAcceptInputType_nzShowExpand: BooleanInput;\n  static ngAcceptInputType_nzCheckable: BooleanInput;\n  static ngAcceptInputType_nzAsyncData: BooleanInput;\n  static ngAcceptInputType_nzHideUnMatched: BooleanInput;\n  static ngAcceptInputType_nzNoAnimation: BooleanInput;\n  static ngAcceptInputType_nzSelectMode: BooleanInput;\n  static ngAcceptInputType_nzShowIcon: BooleanInput;\n\n  /**\n   * for global property\n   */\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() isLoading: boolean;\n  @Input() isSelected: boolean;\n  @Input() isDisabled: boolean;\n  @Input() isMatched: boolean;\n  @Input() isExpanded: boolean;\n  @Input() isLeaf: boolean;\n  @Input() isChecked: boolean;\n  @Input() isHalfChecked: boolean;\n  @Input() isDisableCheckbox: boolean;\n  @Input() isSelectable: boolean;\n  @Input() canHide: boolean;\n  @Input() isStart: boolean[];\n  @Input() isEnd: boolean[];\n  @Input() nzTreeNode: NzTreeNode;\n  @Input() @InputBoolean() nzShowLine: boolean;\n  @Input() @InputBoolean() nzShowExpand: boolean;\n  @Input() @InputBoolean() nzCheckable: boolean;\n  @Input() @InputBoolean() nzAsyncData: boolean;\n  @Input() @InputBoolean() nzHideUnMatched = false;\n  @Input() @InputBoolean() nzNoAnimation = false;\n  @Input() @InputBoolean() nzSelectMode = false;\n  @Input() @InputBoolean() nzShowIcon = false;\n  @Input() nzExpandedIcon: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzTreeTemplate: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzBeforeDrop: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\n  @Input() nzSearchValue = '';\n  @Input() nzDraggable: boolean;\n  @Output() readonly nzClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzDblClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzContextMenu = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzExpandChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragStart = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnter = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragOver = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragLeave = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDrop = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnd = new EventEmitter<NzFormatEmitEvent>();\n\n  /**\n   * drag var\n   */\n  destroy$ = new Subject();\n  dragPos = 2;\n  dragPosClass: { [key: string]: string } = {\n    '0': 'drag-over',\n    '1': 'drag-over-gap-bottom',\n    '-1': 'drag-over-gap-top'\n  };\n\n  /**\n   * default set\n   */\n  get displayStyle(): string {\n    // to hide unmatched nodes\n    return this.nzSearchValue && this.nzHideUnMatched && !this.isMatched && !this.isExpanded && this.canHide ? 'none' : '';\n  }\n\n  get isSwitcherOpen(): boolean {\n    return this.isExpanded && !this.isLeaf;\n  }\n\n  get isSwitcherClose(): boolean {\n    return !this.isExpanded && !this.isLeaf;\n  }\n\n  onMousedown(event: MouseEvent): void {\n    if (this.nzSelectMode) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * collapse node\n   * @param event\n   */\n  clickExpand(event: MouseEvent): void {\n    event.preventDefault();\n    if (!this.isLoading && !this.isLeaf) {\n      // set async state\n      if (this.nzAsyncData && this.nzTreeNode.children.length === 0 && !this.isExpanded) {\n        this.nzTreeNode.isLoading = true;\n      }\n      this.nzTreeNode.setExpanded(!this.isExpanded);\n    }\n    this.nzTreeService.setExpandedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('expand', this.nzTreeNode, event);\n    this.nzExpandChange.emit(eventNext);\n  }\n\n  clickSelect(event: MouseEvent): void {\n    event.preventDefault();\n    if (this.isSelectable && !this.isDisabled) {\n      this.nzTreeNode.isSelected = !this.nzTreeNode.isSelected;\n    }\n    this.nzTreeService.setSelectedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('click', this.nzTreeNode, event);\n    this.nzClick.emit(eventNext);\n  }\n\n  dblClick(event: MouseEvent): void {\n    event.preventDefault();\n    const eventNext = this.nzTreeService.formatEvent('dblclick', this.nzTreeNode, event);\n    this.nzDblClick.emit(eventNext);\n  }\n\n  contextMenu(event: MouseEvent): void {\n    event.preventDefault();\n    const eventNext = this.nzTreeService.formatEvent('contextmenu', this.nzTreeNode, event);\n    this.nzContextMenu.emit(eventNext);\n  }\n\n  /**\n   * check node\n   * @param event\n   */\n  clickCheckBox(event: MouseEvent): void {\n    event.preventDefault();\n    // return if node is disabled\n    if (this.isDisabled || this.isDisableCheckbox) {\n      return;\n    }\n    this.nzTreeNode.isChecked = !this.nzTreeNode.isChecked;\n    this.nzTreeNode.isHalfChecked = false;\n    this.nzTreeService.setCheckedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('check', this.nzTreeNode, event);\n    this.nzCheckBoxChange.emit(eventNext);\n  }\n\n  clearDragClass(): void {\n    const dragClass = ['drag-over-gap-top', 'drag-over-gap-bottom', 'drag-over'];\n    dragClass.forEach(e => {\n      this.renderer.removeClass(this.elementRef.nativeElement, e);\n    });\n  }\n\n  /**\n   * drag event\n   * @param e\n   */\n  handleDragStart(e: DragEvent): void {\n    try {\n      // ie throw error\n      // firefox-need-it\n      e.dataTransfer!.setData('text/plain', this.nzTreeNode.key!);\n    } catch (error) {\n      // empty\n    }\n    this.nzTreeService.setSelectedNode(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('dragstart', this.nzTreeNode, e);\n    this.nzOnDragStart.emit(eventNext);\n  }\n\n  handleDragEnter(e: DragEvent): void {\n    e.preventDefault();\n    // reset position\n    this.dragPos = 2;\n    this.ngZone.run(() => {\n      const eventNext = this.nzTreeService.formatEvent('dragenter', this.nzTreeNode, e);\n      this.nzOnDragEnter.emit(eventNext);\n    });\n  }\n\n  handleDragOver(e: DragEvent): void {\n    e.preventDefault();\n    const dropPosition = this.nzTreeService.calcDropPosition(e);\n    if (this.dragPos !== dropPosition) {\n      this.clearDragClass();\n      this.dragPos = dropPosition;\n      // leaf node will pass\n      if (!(this.dragPos === 0 && this.isLeaf)) {\n        this.renderer.addClass(this.elementRef.nativeElement, this.dragPosClass[this.dragPos]);\n      }\n    }\n    const eventNext = this.nzTreeService.formatEvent('dragover', this.nzTreeNode, e);\n    this.nzOnDragOver.emit(eventNext);\n  }\n\n  handleDragLeave(e: DragEvent): void {\n    e.preventDefault();\n    this.clearDragClass();\n    const eventNext = this.nzTreeService.formatEvent('dragleave', this.nzTreeNode, e);\n    this.nzOnDragLeave.emit(eventNext);\n  }\n\n  handleDragDrop(e: DragEvent): void {\n    this.ngZone.run(() => {\n      this.clearDragClass();\n      const node = this.nzTreeService.getSelectedNode();\n      if (!node || (node && node.key === this.nzTreeNode.key) || (this.dragPos === 0 && this.isLeaf)) {\n        return;\n      }\n      // pass if node is leafNo\n      const dropEvent = this.nzTreeService.formatEvent('drop', this.nzTreeNode, e);\n      const dragEndEvent = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n      if (this.nzBeforeDrop) {\n        this.nzBeforeDrop({\n          dragNode: this.nzTreeService.getSelectedNode()!,\n          node: this.nzTreeNode,\n          pos: this.dragPos\n        }).subscribe((canDrop: boolean) => {\n          if (canDrop) {\n            this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n          }\n          this.nzOnDrop.emit(dropEvent);\n          this.nzOnDragEnd.emit(dragEndEvent);\n        });\n      } else if (this.nzTreeNode) {\n        this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n        this.nzOnDrop.emit(dropEvent);\n      }\n    });\n  }\n\n  handleDragEnd(e: DragEvent): void {\n    e.preventDefault();\n    this.ngZone.run(() => {\n      // if user do not custom beforeDrop\n      if (!this.nzBeforeDrop) {\n        const eventNext = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n        this.nzOnDragEnd.emit(eventNext);\n      }\n    });\n  }\n\n  /**\n   * Listening to dragging events.\n   */\n  handDragEvent(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.nzDraggable) {\n        const nativeElement = this.elementRef.nativeElement;\n        this.destroy$ = new Subject();\n        fromEvent<DragEvent>(nativeElement, 'dragstart')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragStart(e));\n        fromEvent<DragEvent>(nativeElement, 'dragenter')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragEnter(e));\n        fromEvent<DragEvent>(nativeElement, 'dragover')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragOver(e));\n        fromEvent<DragEvent>(nativeElement, 'dragleave')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragLeave(e));\n        fromEvent<DragEvent>(nativeElement, 'drop')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragDrop(e));\n        fromEvent<DragEvent>(nativeElement, 'dragend')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragEnd(e));\n      } else {\n        this.destroy$.next();\n        this.destroy$.complete();\n      }\n    });\n  }\n\n  markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n\n  constructor(\n    public nzTreeService: NzTreeBaseService,\n    private ngZone: NgZone,\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {}\n\n  ngOnInit(): void {\n    this.nzTreeNode.component = this;\n  }\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n    const { nzDraggable } = changes;\n    if (nzDraggable) {\n      this.handDragEvent();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\nimport { NzTreeBaseService } from 'ng-zorro-antd/core/tree';\n\n@Injectable()\nexport class NzTreeService extends NzTreeBaseService {\n  constructor() {\n    super();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SkipSelf,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { treeCollapseMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport {\n  flattenTreeData,\n  NzFormatBeforeDropEvent,\n  NzFormatEmitEvent,\n  NzTreeBase,\n  NzTreeBaseService,\n  NzTreeHigherOrderServiceToken,\n  NzTreeNode,\n  NzTreeNodeKey,\n  NzTreeNodeOptions\n} from 'ng-zorro-antd/core/tree';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzTreeService } from './tree.service';\n\nexport function NzTreeServiceFactory(higherOrderService: NzTreeBaseService, treeService: NzTreeService): NzTreeBaseService {\n  return higherOrderService ? higherOrderService : treeService;\n}\n\nconst NZ_CONFIG_COMPONENT_NAME = 'tree';\n\n@Component({\n  selector: 'nz-tree',\n  exportAs: 'nzTree',\n  animations: [treeCollapseMotion],\n  template: `\n    <div role=\"tree\">\n      <input [ngStyle]=\"HIDDEN_STYLE\" />\n    </div>\n    <div [class.ant-select-tree-list]=\"nzSelectMode\" [class.ant-tree-list]=\"nzSelectMode\">\n      <div>\n        <cdk-virtual-scroll-viewport\n          *ngIf=\"nzVirtualHeight\"\n          [class.ant-select-tree-list-holder-inner]=\"nzSelectMode\"\n          [class.ant-tree-list-holder-inner]=\"nzSelectMode\"\n          [itemSize]=\"nzVirtualItemSize\"\n          [minBufferPx]=\"nzVirtualMinBufferPx\"\n          [maxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [style.height]=\"nzVirtualHeight\"\n        >\n          <ng-container *cdkVirtualFor=\"let node of nzFlattenNodes; trackBy: trackByFlattenNode\">\n            <ng-template [ngTemplateOutlet]=\"nodeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: node }\"></ng-template>\n          </ng-container>\n        </cdk-virtual-scroll-viewport>\n\n        <div\n          *ngIf=\"!nzVirtualHeight\"\n          [class.ant-select-tree-list-holder-inner]=\"nzSelectMode\"\n          [class.ant-tree-list-holder-inner]=\"nzSelectMode\"\n          [@.disabled]=\"beforeInit || noAnimation?.nzNoAnimation\"\n          [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n          [@treeCollapseMotion]=\"nzFlattenNodes.length\"\n        >\n          <ng-container *ngFor=\"let node of nzFlattenNodes; trackBy: trackByFlattenNode\">\n            <ng-template [ngTemplateOutlet]=\"nodeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: node }\"></ng-template>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n    <ng-template #nodeTemplate let-treeNode>\n      <nz-tree-node\n        [icon]=\"treeNode.icon\"\n        [title]=\"treeNode.title\"\n        [isLoading]=\"treeNode.isLoading\"\n        [isSelected]=\"treeNode.isSelected\"\n        [isDisabled]=\"treeNode.isDisabled\"\n        [isMatched]=\"treeNode.isMatched\"\n        [isExpanded]=\"treeNode.isExpanded\"\n        [isLeaf]=\"treeNode.isLeaf\"\n        [isStart]=\"treeNode.isStart\"\n        [isEnd]=\"treeNode.isEnd\"\n        [isChecked]=\"treeNode.isChecked\"\n        [isHalfChecked]=\"treeNode.isHalfChecked\"\n        [isDisableCheckbox]=\"treeNode.isDisableCheckbox\"\n        [isSelectable]=\"treeNode.isSelectable\"\n        [canHide]=\"treeNode.canHide\"\n        [nzTreeNode]=\"treeNode\"\n        [nzSelectMode]=\"nzSelectMode\"\n        [nzShowLine]=\"nzShowLine\"\n        [nzExpandedIcon]=\"nzExpandedIcon\"\n        [nzDraggable]=\"nzDraggable\"\n        [nzCheckable]=\"nzCheckable\"\n        [nzShowExpand]=\"nzShowExpand\"\n        [nzAsyncData]=\"nzAsyncData\"\n        [nzSearchValue]=\"nzSearchValue\"\n        [nzHideUnMatched]=\"nzHideUnMatched\"\n        [nzBeforeDrop]=\"nzBeforeDrop\"\n        [nzShowIcon]=\"nzShowIcon\"\n        [nzTreeTemplate]=\"nzTreeTemplate || nzTreeTemplateChild\"\n        (nzExpandChange)=\"eventTriggerChanged($event)\"\n        (nzClick)=\"eventTriggerChanged($event)\"\n        (nzDblClick)=\"eventTriggerChanged($event)\"\n        (nzContextMenu)=\"eventTriggerChanged($event)\"\n        (nzCheckBoxChange)=\"eventTriggerChanged($event)\"\n        (nzOnDragStart)=\"eventTriggerChanged($event)\"\n        (nzOnDragEnter)=\"eventTriggerChanged($event)\"\n        (nzOnDragOver)=\"eventTriggerChanged($event)\"\n        (nzOnDragLeave)=\"eventTriggerChanged($event)\"\n        (nzOnDragEnd)=\"eventTriggerChanged($event)\"\n        (nzOnDrop)=\"eventTriggerChanged($event)\"\n      >\n      </nz-tree-node>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NzTreeService,\n    {\n      provide: NzTreeBaseService,\n      useFactory: NzTreeServiceFactory,\n      deps: [[new SkipSelf(), new Optional(), NzTreeHigherOrderServiceToken], NzTreeService]\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzTreeComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-select-tree]': `nzSelectMode`,\n    '[class.ant-select-tree-show-line]': `nzSelectMode && nzShowLine`,\n    '[class.ant-select-tree-icon-hide]': `nzSelectMode && !nzShowIcon`,\n    '[class.ant-select-tree-block-node]': `nzSelectMode && nzBlockNode`,\n    '[class.ant-tree]': `!nzSelectMode`,\n    '[class.ant-tree-show-line]': `!nzSelectMode && nzShowLine`,\n    '[class.ant-tree-icon-hide]': `!nzSelectMode && !nzShowIcon`,\n    '[class.ant-tree-block-node]': `!nzSelectMode && nzBlockNode`,\n    '[class.draggable-tree]': `nzDraggable`\n  }\n})\nexport class NzTreeComponent extends NzTreeBase implements OnInit, OnDestroy, ControlValueAccessor, OnChanges, AfterViewInit {\n  static ngAcceptInputType_nzShowIcon: BooleanInput;\n  static ngAcceptInputType_nzHideUnMatched: BooleanInput;\n  static ngAcceptInputType_nzBlockNode: BooleanInput;\n  static ngAcceptInputType_nzExpandAll: BooleanInput;\n  static ngAcceptInputType_nzSelectMode: BooleanInput;\n  static ngAcceptInputType_nzCheckStrictly: BooleanInput;\n  static ngAcceptInputType_nzShowExpand: BooleanInput;\n  static ngAcceptInputType_nzShowLine: BooleanInput;\n  static ngAcceptInputType_nzCheckable: BooleanInput;\n  static ngAcceptInputType_nzAsyncData: BooleanInput;\n  static ngAcceptInputType_nzDraggable: BooleanInput;\n  static ngAcceptInputType_nzMultiple: BooleanInput;\n\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) nzShowIcon: boolean;\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) nzHideUnMatched: boolean;\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) nzBlockNode: boolean;\n  @Input() @InputBoolean() nzExpandAll = false;\n  @Input() @InputBoolean() nzSelectMode = false;\n  @Input() @InputBoolean() nzCheckStrictly = false;\n  @Input() @InputBoolean() nzShowExpand: boolean = true;\n  @Input() @InputBoolean() nzShowLine = false;\n  @Input() @InputBoolean() nzCheckable = false;\n  @Input() @InputBoolean() nzAsyncData = false;\n  @Input() @InputBoolean() nzDraggable: boolean = false;\n  @Input() @InputBoolean() nzMultiple = false;\n  @Input() nzExpandedIcon: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzVirtualItemSize = 28;\n  @Input() nzVirtualMaxBufferPx = 500;\n  @Input() nzVirtualMinBufferPx = 28;\n  @Input() nzVirtualHeight: number | boolean = false;\n  @Input() nzTreeTemplate: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzBeforeDrop: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\n  @Input() nzData: NzTreeNodeOptions[] | NzTreeNode[] = [];\n  @Input() nzExpandedKeys: NzTreeNodeKey[] = [];\n  @Input() nzSelectedKeys: NzTreeNodeKey[] = [];\n  @Input() nzCheckedKeys: NzTreeNodeKey[] = [];\n  @Input() nzSearchValue: string;\n  @Input() nzSearchFunc: (node: NzTreeNodeOptions) => boolean;\n  @ContentChild('nzTreeTemplate', { static: true }) nzTreeTemplateChild: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @ViewChild(CdkVirtualScrollViewport, { read: CdkVirtualScrollViewport }) cdkVirtualScrollViewport: CdkVirtualScrollViewport;\n  nzFlattenNodes: NzTreeNode[] = [];\n  beforeInit = true;\n\n  @Output() readonly nzExpandedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzSelectedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzCheckedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzSearchValueChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzDblClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzContextMenu = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzExpandChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragStart = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnter = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragOver = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragLeave = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDrop = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnd = new EventEmitter<NzFormatEmitEvent>();\n\n  HIDDEN_STYLE = {\n    width: 0,\n    height: 0,\n    display: 'flex',\n    overflow: 'hidden',\n    opacity: 0,\n    border: 0,\n    padding: 0,\n    margin: 0\n  };\n\n  destroy$ = new Subject();\n\n  onChange: (value: NzTreeNode[]) => void = () => null;\n  onTouched: () => void = () => null;\n\n  writeValue(value: NzTreeNode[]): void {\n    this.handleNzData(value);\n  }\n\n  registerOnChange(fn: (_: NzTreeNode[]) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Render all properties of nzTree\n   * @param changes: all changes from @Input\n   */\n  renderTreeProperties(changes: { [propertyName: string]: SimpleChange }): void {\n    let useDefaultExpandedKeys = false;\n    let expandAll = false;\n    const { nzData, nzExpandedKeys, nzSelectedKeys, nzCheckedKeys, nzCheckStrictly, nzExpandAll, nzMultiple, nzSearchValue } = changes;\n\n    if (nzExpandAll) {\n      useDefaultExpandedKeys = true;\n      expandAll = this.nzExpandAll;\n    }\n\n    if (nzMultiple) {\n      this.nzTreeService.isMultiple = this.nzMultiple;\n    }\n\n    if (nzCheckStrictly) {\n      this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n    }\n\n    if (nzData) {\n      this.handleNzData(this.nzData);\n    }\n\n    if (nzCheckedKeys || nzCheckStrictly) {\n      this.handleCheckedKeys(this.nzCheckedKeys);\n    }\n\n    if (nzExpandedKeys || nzExpandAll) {\n      useDefaultExpandedKeys = true;\n      this.handleExpandedKeys(expandAll || this.nzExpandedKeys);\n    }\n\n    if (nzSelectedKeys) {\n      this.handleSelectedKeys(this.nzSelectedKeys, this.nzMultiple);\n    }\n\n    if (nzSearchValue) {\n      if (!(nzSearchValue.firstChange && !this.nzSearchValue)) {\n        useDefaultExpandedKeys = false;\n        this.handleSearchValue(this.nzSearchValue, this.nzSearchFunc);\n        this.nzSearchValueChange.emit(this.nzTreeService.formatEvent('search', null, null));\n      }\n    }\n\n    // flatten data\n    const currentExpandedKeys = this.getExpandedNodeList().map(v => v.key);\n    const newExpandedKeys = useDefaultExpandedKeys ? expandAll || this.nzExpandedKeys : currentExpandedKeys;\n    this.handleFlattenNodes(this.nzTreeService.rootNodes, newExpandedKeys);\n  }\n\n  trackByFlattenNode(_: number, node: NzTreeNode): string {\n    return node.key;\n  }\n  // Deal with properties\n  /**\n   * nzData\n   * @param value\n   */\n  handleNzData(value: NzSafeAny[]): void {\n    if (Array.isArray(value)) {\n      const data = this.coerceTreeNodes(value);\n      this.nzTreeService.initTree(data);\n    }\n  }\n\n  handleFlattenNodes(data: NzTreeNode[], expandKeys: NzTreeNodeKey[] | true = []): void {\n    this.nzTreeService.flattenTreeData(data, expandKeys);\n  }\n\n  handleCheckedKeys(keys: NzTreeNodeKey[]): void {\n    this.nzTreeService.conductCheck(keys, this.nzCheckStrictly);\n  }\n\n  handleExpandedKeys(keys: NzTreeNodeKey[] | true = []): void {\n    this.nzTreeService.conductExpandedKeys(keys);\n  }\n\n  handleSelectedKeys(keys: NzTreeNodeKey[], isMulti: boolean): void {\n    this.nzTreeService.conductSelectedKeys(keys, isMulti);\n  }\n\n  handleSearchValue(value: string, searchFunc?: (node: NzTreeNodeOptions) => boolean): void {\n    const dataList = flattenTreeData(this.nzTreeService.rootNodes, true).map(v => v.data);\n    const checkIfMatched = (node: NzTreeNode): boolean => {\n      if (searchFunc) {\n        return searchFunc(node.origin);\n      }\n      return !value || !node.title.toLowerCase().includes(value.toLowerCase()) ? false : true;\n    };\n    dataList.forEach(v => {\n      v.isMatched = checkIfMatched(v);\n      v.canHide = !v.isMatched;\n      if (!v.isMatched) {\n        v.setExpanded(false);\n        this.nzTreeService.setExpandedNodeList(v);\n      } else {\n        // expand\n        this.nzTreeService.expandNodeAllParentBySearch(v);\n      }\n      this.nzTreeService.setMatchedNodeList(v);\n    });\n  }\n\n  /**\n   * Handle emit event\n   * @param event\n   * handle each event\n   */\n  eventTriggerChanged(event: NzFormatEmitEvent): void {\n    const node = event.node!;\n    switch (event.eventName) {\n      case 'expand':\n        this.renderTree();\n        this.nzExpandChange.emit(event);\n        break;\n      case 'click':\n        this.nzClick.emit(event);\n        break;\n      case 'dblclick':\n        this.nzDblClick.emit(event);\n        break;\n      case 'contextmenu':\n        this.nzContextMenu.emit(event);\n        break;\n      case 'check':\n        // Render checked state with nodes' property `isChecked`\n        this.nzTreeService.setCheckedNodeList(node);\n        if (!this.nzCheckStrictly) {\n          this.nzTreeService.conduct(node);\n        }\n        // Cause check method will rerender list, so we need recover it and next the new event to user\n        const eventNext = this.nzTreeService.formatEvent('check', node, event.event!);\n        this.nzCheckBoxChange.emit(eventNext);\n        break;\n      case 'dragstart':\n        // if node is expanded\n        if (node.isExpanded) {\n          node.setExpanded(!node.isExpanded);\n          this.renderTree();\n        }\n        this.nzOnDragStart.emit(event);\n        break;\n      case 'dragenter':\n        const selectedNode = this.nzTreeService.getSelectedNode();\n        if (selectedNode && selectedNode.key !== node.key && !node.isExpanded && !node.isLeaf) {\n          node.setExpanded(true);\n          this.renderTree();\n        }\n        this.nzOnDragEnter.emit(event);\n        break;\n      case 'dragover':\n        this.nzOnDragOver.emit(event);\n        break;\n      case 'dragleave':\n        this.nzOnDragLeave.emit(event);\n        break;\n      case 'dragend':\n        this.nzOnDragEnd.emit(event);\n        break;\n      case 'drop':\n        this.renderTree();\n        this.nzOnDrop.emit(event);\n        break;\n    }\n  }\n\n  /**\n   * Click expand icon\n   */\n  renderTree(): void {\n    this.handleFlattenNodes(\n      this.nzTreeService.rootNodes,\n      this.getExpandedNodeList().map(v => v.key)\n    );\n    this.cdr.markForCheck();\n  }\n  // Handle emit event end\n\n  constructor(\n    nzTreeService: NzTreeBaseService,\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {\n    super(nzTreeService);\n  }\n\n  ngOnInit(): void {\n    this.nzTreeService.flattenNodes$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n      this.nzFlattenNodes = data;\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n    this.renderTreeProperties(changes);\n  }\n\n  ngAfterViewInit(): void {\n    this.beforeInit = false;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzHighlightModule } from 'ng-zorro-antd/core/highlight';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzTreeIndentComponent } from './tree-indent.component';\nimport { NzTreeNodeCheckboxComponent } from './tree-node-checkbox.component';\nimport { NzTreeNodeSwitcherComponent } from './tree-node-switcher.component';\nimport { NzTreeNodeTitleComponent } from './tree-node-title.component';\nimport { NzTreeNodeComponent } from './tree-node.component';\nimport { NzTreeComponent } from './tree.component';\n\n@NgModule({\n  imports: [CommonModule, NzOutletModule, NzIconModule, NzNoAnimationModule, NzHighlightModule, ScrollingModule],\n  declarations: [\n    NzTreeComponent,\n    NzTreeNodeComponent,\n    NzTreeIndentComponent,\n    NzTreeNodeSwitcherComponent,\n    NzTreeNodeCheckboxComponent,\n    NzTreeNodeTitleComponent\n  ],\n  exports: [NzTreeComponent, NzTreeNodeComponent, NzTreeIndentComponent]\n})\nexport class NzTreeModule {}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;IAUA;QAgBW,iBAAY,GAAG,KAAK,CAAC;QAE9B,eAAU,GAAa,EAAE,CAAC;KAqB3B;;;;;IAnBC,8CAAc;;;;IAAd,UAAe,KAAa;;QAC1B;YACE,GAAC,sBAAsB,IAAG,CAAC,IAAI,CAAC,YAAY;YAC5C,GAAC,4BAA4B,IAAG,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;YAC/E,GAAC,0BAA0B,IAAG,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;YAC3E,GAAC,6BAA6B,IAAG,IAAI,CAAC,YAAY;YAClD,GAAC,mCAAmC,IAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;YACrF,GAAC,iCAAiC,IAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;eACjF;KACH;;;;IAED,wCAAQ;;;IAAR,eAAmB;;;;;IAEnB,2CAAW;;;;IAAX,UAAY,OAAsB;QACxB,IAAA,iCAAW;QACnB,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,UAAU,YAAO,IAAI,KAAK,CAAC,WAAW,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC;SACjE;KACF;;gBAtCF,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,uGAAmG;oBAC7G,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,mBAAmB,EAAE,KAAK;oBAC1B,IAAI,EAAE;wBACJ,oBAAoB,EAAE,MAAM;wBAC5B,yBAAyB,EAAE,eAAe;wBAC1C,gCAAgC,EAAE,cAAc;qBACjD;iBACF;;;8BAEE,KAAK;4BACL,KAAK;0BACL,KAAK;+BACL,KAAK;;IAuBR,4BAAC;CAvCD,IAuCC;;;IA1BC,4CAA6B;;IAC7B,0CAA8B;;IAC9B,wCAA4B;;IAC5B,6CAA8B;;IAE9B,2CAA0B;;;;;;;;;IClB5B;QAiBW,iBAAY,GAAG,KAAK,CAAC;KAK/B;;gBAtBA,SAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,QAAQ,EAAE,2HAAuH;oBACjI,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,mBAAmB,EAAE,KAAK;oBAC1B,IAAI,EAAE;wBACJ,kCAAkC,EAAE,cAAc;wBAClD,0CAA0C,EAAE,2BAA2B;wBACvE,gDAAgD,EAAE,+BAA+B;wBACjF,2CAA2C,EAAE,mDAAmD;wBAChG,2BAA2B,EAAE,eAAe;wBAC5C,mCAAmC,EAAE,4BAA4B;wBACjE,yCAAyC,EAAE,gCAAgC;wBAC3E,oCAAoC,EAAE,oDAAoD;qBAC3F;iBACF;;;+BAEE,KAAK;4BACL,KAAK;gCACL,KAAK;6BACL,KAAK;oCACL,KAAK;;IACR,kCAAC;CAtBD,IAsBC;;;IALC,mDAA8B;;IAC9B,gDAA4B;;IAC5B,oDAAgC;;IAChC,iDAA6B;;IAC7B,wDAAoC;;;;;;;;;ICpBtC;QAiDW,iBAAY,GAAG,KAAK,CAAC;KAqB/B;IAfC,sBAAI,uDAAc;;;;QAAlB;YACE,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC;SACxC;;;OAAA;IAED,sBAAI,yDAAgB;;;;QAApB;YACE,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;SACzC;;;OAAA;IAED,sBAAI,uDAAc;;;;QAAlB;YACE,OAAO,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;SACxC;;;OAAA;IAED,sBAAI,wDAAe;;;;QAAnB;YACE,OAAO,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;SACzC;;;OAAA;;gBArEF,SAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,QAAQ,EAAE,0xCA6BT;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,mBAAmB,EAAE,KAAK;oBAC1B,IAAI,EAAE;wBACJ,kCAAkC,EAAE,cAAc;wBAClD,uCAAuC,EAAE,wBAAwB;wBACjE,uCAAuC,EAAE,gCAAgC;wBACzE,wCAAwC,EAAE,iCAAiC;wBAC3E,2BAA2B,EAAE,eAAe;wBAC5C,gCAAgC,EAAE,yBAAyB;wBAC3D,gCAAgC,EAAE,iCAAiC;wBACnE,iCAAiC,EAAE,kCAAkC;qBACtE;iBACF;;;+BAEE,KAAK;6BACL,KAAK;iCACL,KAAK;+BACL,KAAK;0BACL,KAAK;yBACL,KAAK;4BACL,KAAK;6BACL,KAAK;;IAiBR,kCAAC;CAtED,IAsEC;;;IAxBC,mDAA+B;;IAC/B,iDAA6B;;IAC7B,qDAA2F;;IAC3F,mDAA8B;;IAC9B,8CAA6B;;IAC7B,6CAAyB;;IACzB,gDAA4B;;IAC5B,iDAA6B;;;;;;;;;ICrD/B;QA8CW,eAAU,GAAG,KAAK,CAAC;KA0B7B;IAfC,sBAAI,kDAAY;;;;QAAhB;YACE,OAAO,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,IAAI,CAAC;SACzD;;;OAAA;IAED,sBAAI,kDAAY;;;;QAAhB;YACE,OAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;SAC/C;;;OAAA;IAED,sBAAI,oDAAc;;;;QAAlB;YACE,OAAO,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;SACxC;;;OAAA;IAED,sBAAI,qDAAe;;;;QAAnB;YACE,OAAO,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;SACzC;;;OAAA;;gBAvEF,SAAS,SAAC;oBACT,QAAQ,EAAE,oBAAoB;oBAC9B,QAAQ,EAAE,y/BAqBQ;oBAClB,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,mBAAmB,EAAE,KAAK;oBAC1B,IAAI,EAAE;wBACJ,cAAc,EAAE,OAAO;wBACvB,kBAAkB,EAAE,cAAc;wBAClC,qBAAqB,EAAE,cAAc;wBACrC,mBAAmB,EAAE,cAAc;wBACnC,8CAA8C,EAAE,YAAY;wBAC5D,mDAAmD,EAAE,8BAA8B;wBACnF,oDAAoD,EAAE,+BAA+B;wBACrF,uCAAuC,EAAE,0BAA0B;wBACnE,uCAAuC,EAAE,aAAa;wBACtD,4CAA4C,EAAE,+BAA+B;wBAC7E,6CAA6C,EAAE,gCAAgC;wBAC/E,gCAAgC,EAAE,2BAA2B;qBAC9D;iBACF;;;8BAEE,KAAK;+BACL,KAAK;4BACL,KAAK;2BACL,KAAK;6BACL,KAAK;0BACL,KAAK;uBACL,KAAK;wBACL,KAAK;4BACL,KAAK;6BACL,KAAK;6BACL,KAAK;4BACL,KAAK;6BACL,KAAK;yBACL,KAAK;;IAiBR,+BAAC;CAxED,IAwEC;;;IA9BC,+CAA6B;;IAC7B,gDAAyF;;IACzF,6CAA4B;;IAC5B,4CAA2B;;IAC3B,8CAA4B;;IAC5B,2CAA6B;;IAC7B,wCAAsB;;IACtB,yCAAuB;;IACvB,6CAA4B;;IAC5B,8CAA6B;;IAC7B,8CAA6B;;IAC7B,6CAA4B;;IAC5B,8CAA6B;;IAC7B,0CAAyB;;;;;;;;;IC0TzB,6BACS,aAAgC,EAC/B,MAAc,EACd,QAAmB,EACnB,UAAsB,EACtB,GAAsB,EACH,WAAoC;QALxD,kBAAa,GAAb,aAAa,CAAmB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAW;QACnB,eAAU,GAAV,UAAU,CAAY;QACtB,QAAG,GAAH,GAAG,CAAmB;QACH,gBAAW,GAAX,WAAW,CAAyB;QA1PxC,oBAAe,GAAG,KAAK,CAAC;QACxB,kBAAa,GAAG,KAAK,CAAC;QACtB,iBAAY,GAAG,KAAK,CAAC;QACrB,eAAU,GAAG,KAAK,CAAC;QAInC,kBAAa,GAAG,EAAE,CAAC;QAET,YAAO,GAAG,IAAI,YAAY,EAAqB,CAAC;QAChD,eAAU,GAAG,IAAI,YAAY,EAAqB,CAAC;QACnD,kBAAa,GAAG,IAAI,YAAY,EAAqB,CAAC;QACtD,qBAAgB,GAAG,IAAI,YAAY,EAAqB,CAAC;QACzD,mBAAc,GAAG,IAAI,YAAY,EAAqB,CAAC;QACvD,kBAAa,GAAG,IAAI,YAAY,EAAqB,CAAC;QACtD,kBAAa,GAAG,IAAI,YAAY,EAAqB,CAAC;QACtD,iBAAY,GAAG,IAAI,YAAY,EAAqB,CAAC;QACrD,kBAAa,GAAG,IAAI,YAAY,EAAqB,CAAC;QACtD,aAAQ,GAAG,IAAI,YAAY,EAAqB,CAAC;QACjD,gBAAW,GAAG,IAAI,YAAY,EAAqB,CAAC;;;;QAKvE,aAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;QACzB,YAAO,GAAG,CAAC,CAAC;QACZ,iBAAY,GAA8B;YACxC,GAAG,EAAE,WAAW;YAChB,GAAG,EAAE,sBAAsB;YAC3B,IAAI,EAAE,mBAAmB;SAC1B,CAAC;KA6NE;IAxNJ,sBAAI,6CAAY;;;;;;;;QAAhB;;YAEE,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,EAAE,CAAC;SACxH;;;OAAA;IAED,sBAAI,+CAAc;;;;QAAlB;YACE,OAAO,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;SACxC;;;OAAA;IAED,sBAAI,gDAAe;;;;QAAnB;YACE,OAAO,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;SACzC;;;OAAA;;;;;IAED,yCAAW;;;;IAAX,UAAY,KAAiB;QAC3B,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;KACF;;;;;;;;;;IAMD,yCAAW;;;;;IAAX,UAAY,KAAiB;QAC3B,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;;YAEnC,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACjF,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;aAClC;YACD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC/C;QACD,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;YAClD,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC;QAClF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACrC;;;;;IAED,yCAAW;;;;IAAX,UAAY,KAAiB;QAC3B,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACzC,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;SAC1D;QACD,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;YAClD,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC;QACjF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC9B;;;;;IAED,sCAAQ;;;;IAAR,UAAS,KAAiB;QACxB,KAAK,CAAC,cAAc,EAAE,CAAC;;YACjB,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC;QACpF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACjC;;;;;IAED,yCAAW;;;;IAAX,UAAY,KAAiB;QAC3B,KAAK,CAAC,cAAc,EAAE,CAAC;;YACjB,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC;QACvF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACpC;;;;;;;;;;IAMD,2CAAa;;;;;IAAb,UAAc,KAAiB;QAC7B,KAAK,CAAC,cAAc,EAAE,CAAC;;QAEvB,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC7C,OAAO;SACR;QACD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;QACvD,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,KAAK,CAAC;QACtC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;YACjD,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC;QACjF,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACvC;;;;IAED,4CAAc;;;IAAd;QAAA,iBAKC;;YAJO,SAAS,GAAG,CAAC,mBAAmB,EAAE,sBAAsB,EAAE,WAAW,CAAC;QAC5E,SAAS,CAAC,OAAO;;;;QAAC,UAAA,CAAC;YACjB,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;SAC7D,EAAC,CAAC;KACJ;;;;;;;;;;IAMD,6CAAe;;;;;IAAf,UAAgB,CAAY;QAC1B,IAAI;;;YAGF,mBAAA,CAAC,CAAC,YAAY,GAAE,OAAO,CAAC,YAAY,qBAAE,IAAI,CAAC,UAAU,CAAC,GAAG,GAAE,CAAC;SAC7D;QAAC,OAAO,KAAK,EAAE;;SAEf;QACD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;YAC9C,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACpC;;;;;IAED,6CAAe;;;;IAAf,UAAgB,CAAY;QAA5B,iBAQC;QAPC,CAAC,CAAC,cAAc,EAAE,CAAC;;QAEnB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,MAAM,CAAC,GAAG;;;QAAC;;gBACR,SAAS,GAAG,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,WAAW,EAAE,KAAI,CAAC,UAAU,EAAE,CAAC,CAAC;YACjF,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACpC,EAAC,CAAC;KACJ;;;;;IAED,4CAAc;;;;IAAd,UAAe,CAAY;QACzB,CAAC,CAAC,cAAc,EAAE,CAAC;;YACb,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAC3D,IAAI,IAAI,CAAC,OAAO,KAAK,YAAY,EAAE;YACjC,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;;YAE5B,IAAI,EAAE,IAAI,CAAC,OAAO,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;gBACxC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;aACxF;SACF;;YACK,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QAChF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACnC;;;;;IAED,6CAAe;;;;IAAf,UAAgB,CAAY;QAC1B,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,IAAI,CAAC,cAAc,EAAE,CAAC;;YAChB,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACpC;;;;;IAED,4CAAc;;;;IAAd,UAAe,CAAY;QAA3B,iBA2BC;QA1BC,IAAI,CAAC,MAAM,CAAC,GAAG;;;QAAC;YACd,KAAI,CAAC,cAAc,EAAE,CAAC;;gBAChB,IAAI,GAAG,KAAI,CAAC,aAAa,CAAC,eAAe,EAAE;YACjD,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,KAAI,CAAC,OAAO,KAAK,CAAC,IAAI,KAAI,CAAC,MAAM,CAAC,EAAE;gBAC9F,OAAO;aACR;;;gBAEK,SAAS,GAAG,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,EAAE,KAAI,CAAC,UAAU,EAAE,CAAC,CAAC;;gBACtE,YAAY,GAAG,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,EAAE,KAAI,CAAC,UAAU,EAAE,CAAC,CAAC;YAClF,IAAI,KAAI,CAAC,YAAY,EAAE;gBACrB,KAAI,CAAC,YAAY,CAAC;oBAChB,QAAQ,qBAAE,KAAI,CAAC,aAAa,CAAC,eAAe,EAAE,EAAC;oBAC/C,IAAI,EAAE,KAAI,CAAC,UAAU;oBACrB,GAAG,EAAE,KAAI,CAAC,OAAO;iBAClB,CAAC,CAAC,SAAS;;;;gBAAC,UAAC,OAAgB;oBAC5B,IAAI,OAAO,EAAE;wBACX,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAI,CAAC,UAAU,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;qBAChE;oBACD,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAC9B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACrC,EAAC,CAAC;aACJ;iBAAM,IAAI,KAAI,CAAC,UAAU,EAAE;gBAC1B,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAI,CAAC,UAAU,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;gBAC/D,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC/B;SACF,EAAC,CAAC;KACJ;;;;;IAED,2CAAa;;;;IAAb,UAAc,CAAY;QAA1B,iBASC;QARC,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,GAAG;;;QAAC;;YAEd,IAAI,CAAC,KAAI,CAAC,YAAY,EAAE;;oBAChB,SAAS,GAAG,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,EAAE,KAAI,CAAC,UAAU,EAAE,CAAC,CAAC;gBAC/E,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAClC;SACF,EAAC,CAAC;KACJ;;;;;;;;IAKD,2CAAa;;;;IAAb;QAAA,iBA4BC;QA3BC,IAAI,CAAC,MAAM,CAAC,iBAAiB;;;QAAC;YAC5B,IAAI,KAAI,CAAC,WAAW,EAAE;;oBACd,aAAa,GAAG,KAAI,CAAC,UAAU,CAAC,aAAa;gBACnD,KAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;gBAC9B,SAAS,CAAY,aAAa,EAAE,WAAW,CAAC;qBAC7C,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS;;;;gBAAC,UAAC,CAAY,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,GAAA,EAAC,CAAC;gBACxD,SAAS,CAAY,aAAa,EAAE,WAAW,CAAC;qBAC7C,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS;;;;gBAAC,UAAC,CAAY,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,GAAA,EAAC,CAAC;gBACxD,SAAS,CAAY,aAAa,EAAE,UAAU,CAAC;qBAC5C,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS;;;;gBAAC,UAAC,CAAY,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAA,EAAC,CAAC;gBACvD,SAAS,CAAY,aAAa,EAAE,WAAW,CAAC;qBAC7C,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS;;;;gBAAC,UAAC,CAAY,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,GAAA,EAAC,CAAC;gBACxD,SAAS,CAAY,aAAa,EAAE,MAAM,CAAC;qBACxC,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS;;;;gBAAC,UAAC,CAAY,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAA,EAAC,CAAC;gBACvD,SAAS,CAAY,aAAa,EAAE,SAAS,CAAC;qBAC3C,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS;;;;gBAAC,UAAC,CAAY,IAAK,OAAA,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAA,EAAC,CAAC;aACvD;iBAAM;gBACL,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACrB,KAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;aAC1B;SACF,EAAC,CAAC;KACJ;;;;IAED,0CAAY;;;IAAZ;QACE,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;KACzB;;;;IAWD,sCAAQ;;;IAAR;QACE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;KAClC;;;;;IAED,yCAAW;;;;IAAX,UAAY,OAAiD;QACnD,IAAA,iCAAW;QACnB,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;;;;IAED,yCAAW;;;IAAX;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC1B;;gBAjXF,SAAS,SAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,YAAY;oBACtB,QAAQ,EAAE,4/CA0CT;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,mBAAmB,EAAE,KAAK;oBAC1B,IAAI,EAAE;wBACJ,kCAAkC,EAAE,cAAc;wBAClD,2CAA2C,EAAE,4BAA4B;wBACzE,gDAAgD,EAAE,gCAAgC;wBAClF,iDAAiD,EAAE,iCAAiC;wBACpF,mDAAmD,EAAE,2BAA2B;wBAChF,yDAAyD,EAAE,+BAA+B;wBAC1F,2CAA2C,EAAE,4BAA4B;wBACzE,0CAA0C,EAAE,2BAA2B;wBACvE,2BAA2B,EAAE,eAAe;wBAC5C,oCAAoC,EAAE,6BAA6B;wBACnE,yCAAyC,EAAE,iCAAiC;wBAC5E,0CAA0C,EAAE,kCAAkC;wBAC9E,4CAA4C,EAAE,4BAA4B;wBAC1E,kDAAkD,EAAE,gCAAgC;wBACpF,oCAAoC,EAAE,6BAA6B;wBACnE,mCAAmC,EAAE,4BAA4B;wBACjE,iBAAiB,EAAE,cAAc;wBACjC,aAAa,EAAE,qBAAqB;qBACrC;iBACF;;;;gBA1EoD,iBAAiB;gBAZpE,MAAM;gBAMN,SAAS;gBAVT,UAAU;gBAFV,iBAAiB;gBAgBV,sBAAsB,uBAwW1B,IAAI,YAAI,QAAQ;;;uBA9QlB,KAAK;wBACL,KAAK;4BACL,KAAK;6BACL,KAAK;6BACL,KAAK;4BACL,KAAK;6BACL,KAAK;yBACL,KAAK;4BACL,KAAK;gCACL,KAAK;oCACL,KAAK;+BACL,KAAK;0BACL,KAAK;0BACL,KAAK;wBACL,KAAK;6BACL,KAAK;6BACL,KAAK;+BACL,KAAK;8BACL,KAAK;8BACL,KAAK;kCACL,KAAK;gCACL,KAAK;+BACL,KAAK;6BACL,KAAK;iCACL,KAAK;iCACL,KAAK;+BACL,KAAK;gCACL,KAAK;8BACL,KAAK;0BACL,MAAM;6BACN,MAAM;gCACN,MAAM;mCACN,MAAM;iCACN,MAAM;gCACN,MAAM;gCACN,MAAM;+BACN,MAAM;gCACN,MAAM;2BACN,MAAM;8BACN,MAAM;;IAvBkB;QAAf,YAAY,EAAE;;2DAAqB;IACpB;QAAf,YAAY,EAAE;;6DAAuB;IACtB;QAAf,YAAY,EAAE;;4DAAsB;IACrB;QAAf,YAAY,EAAE;;4DAAsB;IACrB;QAAf,YAAY,EAAE;;gEAAyB;IACxB;QAAf,YAAY,EAAE;;8DAAuB;IACtB;QAAf,YAAY,EAAE;;6DAAsB;IACrB;QAAf,YAAY,EAAE;;2DAAoB;IAyQ9C,0BAAC;CAlXD,IAkXC;;;IA5SC,iDAAkD;;IAClD,mDAAoD;;IACpD,kDAAmD;;IACnD,kDAAmD;;IACnD,sDAAuD;;IACvD,oDAAqD;;IACrD,mDAAoD;;IACpD,iDAAkD;;;;;IAKlD,mCAAsB;;IACtB,oCAAuB;;IACvB,wCAA4B;;IAC5B,yCAA6B;;IAC7B,yCAA6B;;IAC7B,wCAA4B;;IAC5B,yCAA6B;;IAC7B,qCAAyB;;IACzB,wCAA4B;;IAC5B,4CAAgC;;IAChC,gDAAoC;;IACpC,2CAA+B;;IAC/B,sCAA0B;;IAC1B,sCAA4B;;IAC5B,oCAA0B;;IAC1B,yCAAgC;;IAChC,yCAA6C;;IAC7C,2CAA+C;;IAC/C,0CAA8C;;IAC9C,0CAA8C;;IAC9C,8CAAiD;;IACjD,4CAA+C;;IAC/C,2CAA8C;;IAC9C,yCAA4C;;IAC5C,6CAA2F;;IAC3F,6CAA2F;;IAC3F,2CAAiF;;IACjF,4CAA4B;;IAC5B,0CAA8B;;IAC9B,sCAAmE;;IACnE,yCAAsE;;IACtE,4CAAyE;;IACzE,+CAA4E;;IAC5E,6CAA0E;;IAC1E,4CAAyE;;IACzE,4CAAyE;;IACzE,2CAAwE;;IACxE,4CAAyE;;IACzE,uCAAoE;;IACpE,0CAAuE;;;;;IAKvE,uCAAyB;;IACzB,sCAAY;;IACZ,2CAIE;;IAuNA,4CAAuC;;;;;IACvC,qCAAsB;;;;;IACtB,uCAA2B;;;;;IAC3B,yCAA8B;;;;;IAC9B,kCAA8B;;IAC9B,0CAA+D;;;;;;;;;ICtXhC,iCAAiB;IAClD;eACE,iBAAO;KACR;;gBAJF,UAAU;;;;IAKX,oBAAC;CAAA,CAJkC,iBAAiB;;;;;;;;;;;;SCsCpC,oBAAoB,CAAC,kBAAqC,EAAE,WAA0B;IACpG,OAAO,kBAAkB,GAAG,kBAAkB,GAAG,WAAW,CAAC;AAC/D,CAAC;;IAEK,wBAAwB,GAAG,MAAM;;IA+GF,mCAAU;;IA6Q7C,yBACE,aAAgC,EACzB,eAAgC,EAC/B,GAAsB,EACH,WAAoC;QAJjE,YAME,kBAAM,aAAa,CAAC,SACrB;QALQ,qBAAe,GAAf,eAAe,CAAiB;QAC/B,SAAG,GAAH,GAAG,CAAmB;QACH,iBAAW,GAAX,WAAW,CAAyB;QAhQxC,iBAAW,GAAG,KAAK,CAAC;QACpB,kBAAY,GAAG,KAAK,CAAC;QACrB,qBAAe,GAAG,KAAK,CAAC;QACxB,kBAAY,GAAY,IAAI,CAAC;QAC7B,gBAAU,GAAG,KAAK,CAAC;QACnB,iBAAW,GAAG,KAAK,CAAC;QACpB,iBAAW,GAAG,KAAK,CAAC;QACpB,iBAAW,GAAY,KAAK,CAAC;QAC7B,gBAAU,GAAG,KAAK,CAAC;QAEnC,uBAAiB,GAAG,EAAE,CAAC;QACvB,0BAAoB,GAAG,GAAG,CAAC;QAC3B,0BAAoB,GAAG,EAAE,CAAC;QAC1B,qBAAe,GAAqB,KAAK,CAAC;QAG1C,YAAM,GAAuC,EAAE,CAAC;QAChD,oBAAc,GAAoB,EAAE,CAAC;QACrC,oBAAc,GAAoB,EAAE,CAAC;QACrC,mBAAa,GAAoB,EAAE,CAAC;QAK7C,oBAAc,GAAiB,EAAE,CAAC;QAClC,gBAAU,GAAG,IAAI,CAAC;QAEC,0BAAoB,GAA2B,IAAI,YAAY,EAAY,CAAC;QAC5E,0BAAoB,GAA2B,IAAI,YAAY,EAAY,CAAC;QAC5E,yBAAmB,GAA2B,IAAI,YAAY,EAAY,CAAC;QAC3E,yBAAmB,GAAG,IAAI,YAAY,EAAqB,CAAC;QAC5D,aAAO,GAAG,IAAI,YAAY,EAAqB,CAAC;QAChD,gBAAU,GAAG,IAAI,YAAY,EAAqB,CAAC;QACnD,mBAAa,GAAG,IAAI,YAAY,EAAqB,CAAC;QACtD,sBAAgB,GAAG,IAAI,YAAY,EAAqB,CAAC;QACzD,oBAAc,GAAG,IAAI,YAAY,EAAqB,CAAC;QACvD,mBAAa,GAAG,IAAI,YAAY,EAAqB,CAAC;QACtD,mBAAa,GAAG,IAAI,YAAY,EAAqB,CAAC;QACtD,kBAAY,GAAG,IAAI,YAAY,EAAqB,CAAC;QACrD,mBAAa,GAAG,IAAI,YAAY,EAAqB,CAAC;QACtD,cAAQ,GAAG,IAAI,YAAY,EAAqB,CAAC;QACjD,iBAAW,GAAG,IAAI,YAAY,EAAqB,CAAC;QAEvE,kBAAY,GAAG;YACb,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;YACT,OAAO,EAAE,MAAM;YACf,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,CAAC;YACV,MAAM,EAAE,CAAC;YACT,OAAO,EAAE,CAAC;YACV,MAAM,EAAE,CAAC;SACV,CAAC;QAEF,cAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;QAEzB,cAAQ;;;QAAkC,cAAM,OAAA,IAAI,GAAA,EAAC;QACrD,eAAS;;;QAAe,cAAM,OAAA,IAAI,GAAA,EAAC;;KA0MlC;;;;;IAxMD,oCAAU;;;;IAAV,UAAW,KAAmB;QAC5B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;KAC1B;;;;;IAED,0CAAgB;;;;IAAhB,UAAiB,EAA6B;QAC5C,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;;;;;IAED,2CAAiB;;;;IAAjB,UAAkB,EAAc;QAC9B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;;;;;;;;;;IAMD,8CAAoB;;;;;IAApB,UAAqB,OAAiD;;YAChE,sBAAsB,GAAG,KAAK;;YAC9B,SAAS,GAAG,KAAK;QACb,IAAA,uBAAM,EAAE,uCAAc,EAAE,uCAAc,EAAE,qCAAa,EAAE,yCAAe,EAAE,iCAAW,EAAE,+BAAU,EAAE,qCAAa;QAEtH,IAAI,WAAW,EAAE;YACf,sBAAsB,GAAG,IAAI,CAAC;YAC9B,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;SAC9B;QAED,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SACjD;QAED,IAAI,eAAe,EAAE;YACnB,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;SAC3D;QAED,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAChC;QAED,IAAI,aAAa,IAAI,eAAe,EAAE;YACpC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC5C;QAED,IAAI,cAAc,IAAI,WAAW,EAAE;YACjC,sBAAsB,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,kBAAkB,CAAC,SAAS,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC;SAC3D;QAED,IAAI,cAAc,EAAE;YAClB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SAC/D;QAED,IAAI,aAAa,EAAE;YACjB,IAAI,EAAE,aAAa,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;gBACvD,sBAAsB,GAAG,KAAK,CAAC;gBAC/B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC9D,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;aACrF;SACF;;;YAGK,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC,GAAG;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,GAAA,EAAC;;YAChE,eAAe,GAAG,sBAAsB,GAAG,SAAS,IAAI,IAAI,CAAC,cAAc,GAAG,mBAAmB;QACvG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;KACxE;;;;;;IAED,4CAAkB;;;;;IAAlB,UAAmB,CAAS,EAAE,IAAgB;QAC5C,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;;;;;;;;;;;;IAMD,sCAAY;;;;;;;IAAZ,UAAa,KAAkB;QAC7B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;;gBAClB,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;YACxC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACnC;KACF;;;;;;IAED,4CAAkB;;;;;IAAlB,UAAmB,IAAkB,EAAE,UAAuC;QAAvC,2BAAA,EAAA,eAAuC;QAC5E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;KACtD;;;;;IAED,2CAAiB;;;;IAAjB,UAAkB,IAAqB;QACrC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;KAC7D;;;;;IAED,4CAAkB;;;;IAAlB,UAAmB,IAAiC;QAAjC,qBAAA,EAAA,SAAiC;QAClD,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;KAC9C;;;;;;IAED,4CAAkB;;;;;IAAlB,UAAmB,IAAqB,EAAE,OAAgB;QACxD,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;KACvD;;;;;;IAED,2CAAiB;;;;;IAAjB,UAAkB,KAAa,EAAE,UAAiD;QAAlF,iBAoBC;;YAnBO,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,GAAG;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,GAAA,EAAC;;YAC/E,cAAc;;;;QAAG,UAAC,IAAgB;YACtC,IAAI,UAAU,EAAE;gBACd,OAAO,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAChC;YACD,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;SACzF,CAAA;QACD,QAAQ,CAAC,OAAO;;;;QAAC,UAAA,CAAC;YAChB,CAAC,CAAC,SAAS,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;YAChC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;YACzB,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE;gBAChB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACrB,KAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;aAC3C;iBAAM;;gBAEL,KAAI,CAAC,aAAa,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC;aACnD;YACD,KAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;SAC1C,EAAC,CAAC;KACJ;;;;;;;;;;;;IAOD,6CAAmB;;;;;;IAAnB,UAAoB,KAAwB;;YACpC,IAAI,sBAAG,KAAK,CAAC,IAAI,EAAC;QACxB,QAAQ,KAAK,CAAC,SAAS;YACrB,KAAK,QAAQ;gBACX,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChC,MAAM;YACR,KAAK,OAAO;gBACV,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACzB,MAAM;YACR,KAAK,UAAU;gBACb,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5B,MAAM;YACR,KAAK,aAAa;gBAChB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/B,MAAM;YACR,KAAK,OAAO;;gBAEV,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBAC5C,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;oBACzB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBAClC;;;oBAEK,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,qBAAE,KAAK,CAAC,KAAK,GAAE;gBAC7E,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACtC,MAAM;YACR,KAAK,WAAW;;gBAEd,IAAI,IAAI,CAAC,UAAU,EAAE;oBACnB,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACnC,IAAI,CAAC,UAAU,EAAE,CAAC;iBACnB;gBACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/B,MAAM;YACR,KAAK,WAAW;;oBACR,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE;gBACzD,IAAI,YAAY,IAAI,YAAY,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBACrF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oBACvB,IAAI,CAAC,UAAU,EAAE,CAAC;iBACnB;gBACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/B,MAAM;YACR,KAAK,UAAU;gBACb,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC9B,MAAM;YACR,KAAK,WAAW;gBACd,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/B,MAAM;YACR,KAAK,SAAS;gBACZ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC7B,MAAM;YACR,KAAK,MAAM;gBACT,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1B,MAAM;SACT;KACF;;;;;;;;IAKD,oCAAU;;;;IAAV;QACE,IAAI,CAAC,kBAAkB,CACrB,IAAI,CAAC,aAAa,CAAC,SAAS,EAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC,GAAG;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,GAAA,EAAC,CAC3C,CAAC;QACF,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;KACzB;;;;IAYD,kCAAQ;;;IAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;;;;QAAC,UAAA,IAAI;YAC5E,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,KAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;SACzB,EAAC,CAAC;KACJ;;;;;IAED,qCAAW;;;;IAAX,UAAY,OAAiD;QAC3D,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;KACpC;;;;IAED,yCAAe;;;IAAf;QACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KACzB;;;;IAED,qCAAW;;;IAAX;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC1B;;gBArZF,SAAS,SAAC;oBACT,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,QAAQ;oBAClB,UAAU,EAAE,CAAC,kBAAkB,CAAC;oBAChC,QAAQ,EAAE,07GA8ET;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,SAAS,EAAE;wBACT,aAAa;wBACb;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,UAAU,EAAE,oBAAoB;4BAChC,IAAI,EAAE,CAAC,CAAC,IAAI,QAAQ,EAAE,EAAE,IAAI,QAAQ,EAAE,EAAE,6BAA6B,CAAC,EAAE,aAAa,CAAC;yBACvF;wBACD;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,EAAE,UAAU;;;4BAAC,cAAM,OAAA,eAAe,GAAA,EAAC;4BAC9C,KAAK,EAAE,IAAI;yBACZ;qBACF;oBACD,IAAI,EAAE;wBACJ,yBAAyB,EAAE,cAAc;wBACzC,mCAAmC,EAAE,4BAA4B;wBACjE,mCAAmC,EAAE,6BAA6B;wBAClE,oCAAoC,EAAE,6BAA6B;wBACnE,kBAAkB,EAAE,eAAe;wBACnC,4BAA4B,EAAE,6BAA6B;wBAC3D,4BAA4B,EAAE,8BAA8B;wBAC5D,6BAA6B,EAAE,8BAA8B;wBAC7D,wBAAwB,EAAE,aAAa;qBACxC;iBACF;;;;gBA9HC,iBAAiB;gBAPV,eAAe;gBAnBtB,iBAAiB;gBAoBV,sBAAsB,uBAsZ1B,IAAI,YAAI,QAAQ;;;6BAnQlB,KAAK;kCACL,KAAK;8BACL,KAAK;8BACL,KAAK;+BACL,KAAK;kCACL,KAAK;+BACL,KAAK;6BACL,KAAK;8BACL,KAAK;8BACL,KAAK;8BACL,KAAK;6BACL,KAAK;iCACL,KAAK;oCACL,KAAK;uCACL,KAAK;uCACL,KAAK;kCACL,KAAK;iCACL,KAAK;+BACL,KAAK;yBACL,KAAK;iCACL,KAAK;iCACL,KAAK;gCACL,KAAK;gCACL,KAAK;+BACL,KAAK;sCACL,YAAY,SAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;2CAC/C,SAAS,SAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,wBAAwB,EAAE;uCAItE,MAAM;uCACN,MAAM;sCACN,MAAM;sCACN,MAAM;0BACN,MAAM;6BACN,MAAM;gCACN,MAAM;mCACN,MAAM;iCACN,MAAM;gCACN,MAAM;gCACN,MAAM;+BACN,MAAM;gCACN,MAAM;2BACN,MAAM;8BACN,MAAM;;IA5C+D;QAA5D,YAAY,EAAE,EAAE,UAAU,CAAC,wBAAwB,EAAE,KAAK,CAAC;;uDAAqB;IACpB;QAA5D,YAAY,EAAE,EAAE,UAAU,CAAC,wBAAwB,EAAE,KAAK,CAAC;;4DAA0B;IACzB;QAA5D,YAAY,EAAE,EAAE,UAAU,CAAC,wBAAwB,EAAE,KAAK,CAAC;;wDAAsB;IAClE;QAAf,YAAY,EAAE;;wDAAqB;IACpB;QAAf,YAAY,EAAE;;yDAAsB;IACrB;QAAf,YAAY,EAAE;;4DAAyB;IACxB;QAAf,YAAY,EAAE;;yDAA8B;IAC7B;QAAf,YAAY,EAAE;;uDAAoB;IACnB;QAAf,YAAY,EAAE;;wDAAqB;IACpB;QAAf,YAAY,EAAE;;wDAAqB;IACpB;QAAf,YAAY,EAAE;;wDAA8B;IAC7B;QAAf,YAAY,EAAE;;uDAAoB;IAgR9C,sBAAC;CAAA,CAzSoC,UAAU,GAyS9C;;;IAxSC,6CAAkD;;IAClD,kDAAuD;;IACvD,8CAAmD;;IACnD,8CAAmD;;IACnD,+CAAoD;;IACpD,kDAAuD;;IACvD,+CAAoD;;IACpD,6CAAkD;;IAClD,8CAAmD;;IACnD,8CAAmD;;IACnD,8CAAmD;;IACnD,6CAAkD;;IAElD,qCAA0F;;IAC1F,0CAA+F;;IAC/F,sCAA2F;;IAC3F,sCAA6C;;IAC7C,uCAA8C;;IAC9C,0CAAiD;;IACjD,uCAAsD;;IACtD,qCAA4C;;IAC5C,sCAA6C;;IAC7C,sCAA6C;;IAC7C,sCAAsD;;IACtD,qCAA4C;;IAC5C,yCAA2F;;IAC3F,4CAAgC;;IAChC,+CAAoC;;IACpC,+CAAmC;;IACnC,0CAAmD;;IACnD,yCAA2F;;IAC3F,uCAAiF;;IACjF,iCAAyD;;IACzD,yCAA8C;;IAC9C,yCAA8C;;IAC9C,wCAA6C;;IAC7C,wCAA+B;;IAC/B,uCAA4D;;IAC5D,8CAAyI;;IACzI,mDAA4H;;IAC5H,yCAAkC;;IAClC,qCAAkB;;IAElB,+CAA+F;;IAC/F,+CAA+F;;IAC/F,8CAA8F;;IAC9F,8CAA+E;;IAC/E,kCAAmE;;IACnE,qCAAsE;;IACtE,wCAAyE;;IACzE,2CAA4E;;IAC5E,yCAA0E;;IAC1E,wCAAyE;;IACzE,wCAAyE;;IACzE,uCAAwE;;IACxE,wCAAyE;;IACzE,mCAAoE;;IACpE,sCAAuE;;IAEvE,uCASE;;IAEF,mCAAyB;;IAEzB,mCAAqD;;IACrD,oCAAmC;;IAqMjC,0CAAuC;;;;;IACvC,8BAA8B;;IAC9B,sCAA+D;;;;;;;;;IChanE;KAY4B;;gBAZ3B,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,cAAc,EAAE,YAAY,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,eAAe,CAAC;oBAC9G,YAAY,EAAE;wBACZ,eAAe;wBACf,mBAAmB;wBACnB,qBAAqB;wBACrB,2BAA2B;wBAC3B,2BAA2B;wBAC3B,wBAAwB;qBACzB;oBACD,OAAO,EAAE,CAAC,eAAe,EAAE,mBAAmB,EAAE,qBAAqB,CAAC;iBACvE;;IAC0B,mBAAC;CAZ5B;;;;;;;;;;;;;;;;"}