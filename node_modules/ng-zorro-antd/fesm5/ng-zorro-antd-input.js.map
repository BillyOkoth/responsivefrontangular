{"version":3,"file":"ng-zorro-antd-input.js","sources":["ng://ng-zorro-antd/input/input.directive.ts","ng://ng-zorro-antd/input/input-group.component.ts","ng://ng-zorro-antd/input/autosize.directive.ts","ng://ng-zorro-antd/input/input-group-slot.component.ts","ng://ng-zorro-antd/input/input.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, ElementRef, Input, OnChanges, Renderer2, SimpleChanges } from '@angular/core';\nimport { BooleanInput, NzSizeLDSType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\n\n@Directive({\n  selector: 'input[nz-input],textarea[nz-input]',\n  exportAs: 'nzInput',\n  host: {\n    '[class.ant-input-disabled]': 'disabled',\n    '[class.ant-input-lg]': `nzSize === 'large'`,\n    '[class.ant-input-sm]': `nzSize === 'small'`\n  }\n})\nexport class NzInputDirective implements OnChanges {\n  static ngAcceptInputType_disabled: BooleanInput;\n\n  @Input() nzSize: NzSizeLDSType = 'default';\n  @Input() @InputBoolean() disabled = false;\n  disabled$ = new Subject<boolean>();\n\n  constructor(renderer: Renderer2, elementRef: ElementRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-input');\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    const { disabled } = changes;\n    if (disabled) {\n      this.disabled$.next(this.disabled);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput, NgClassType, NzSizeLDSType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { merge, Subject } from 'rxjs';\nimport { flatMap, map, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzInputDirective } from './input.directive';\n\n@Component({\n  selector: 'nz-input-group',\n  exportAs: 'nzInputGroup',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <span class=\"ant-input-wrapper ant-input-group\" *ngIf=\"isAddOn; else noAddOnTemplate\">\n      <span\n        *ngIf=\"nzAddOnBefore || nzAddOnBeforeIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnBeforeIcon\"\n        [template]=\"nzAddOnBefore\"\n      >\n      </span>\n      <span\n        *ngIf=\"isAffix; else contentTemplate\"\n        class=\"ant-input-affix-wrapper\"\n        [class.ant-input-affix-wrapper-sm]=\"isSmall\"\n        [class.ant-input-affix-wrapper-lg]=\"isLarge\"\n      >\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </span>\n      <span\n        *ngIf=\"nzAddOnAfter || nzAddOnAfterIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnAfterIcon\"\n        [template]=\"nzAddOnAfter\"\n      ></span>\n    </span>\n    <ng-template #noAddOnTemplate>\n      <ng-template [ngIf]=\"isAffix\" [ngIfElse]=\"contentTemplate\">\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </ng-template>\n    </ng-template>\n    <ng-template #affixTemplate>\n      <span *ngIf=\"nzPrefix || nzPrefixIcon\" nz-input-group-slot type=\"prefix\" [icon]=\"nzPrefixIcon\" [template]=\"nzPrefix\"></span>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      <span *ngIf=\"nzSuffix || nzSuffixIcon\" nz-input-group-slot type=\"suffix\" [icon]=\"nzSuffixIcon\" [template]=\"nzSuffix\"></span>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n  host: {\n    '[class.ant-input-group-compact]': `nzCompact`,\n    '[class.ant-input-search-enter-button]': `nzSearch`,\n    '[class.ant-input-search]': `nzSearch`,\n    '[class.ant-input-search-sm]': `nzSearch && isSmall`,\n    '[class.ant-input-search-large]': `nzSearch && isLarge`,\n    '[class.ant-input-group-wrapper]': `isAddOn`,\n    '[class.ant-input-group-wrapper-lg]': `isAddOn && isLarge`,\n    '[class.ant-input-group-wrapper-sm]': `isAddOn && isSmall`,\n    '[class.ant-input-affix-wrapper]': `isAffix && !isAddOn`,\n    '[class.ant-input-affix-wrapper-focused]': `isAffix && focused`,\n    '[class.ant-input-affix-wrapper-disabled]': `isAffix && disabled`,\n    '[class.ant-input-affix-wrapper-lg]': `isAffix && !isAddOn && isLarge`,\n    '[class.ant-input-affix-wrapper-sm]': `isAffix && !isAddOn && isSmall`,\n    '[class.ant-input-group]': `!isAffix && !isAddOn`,\n    '[class.ant-input-group-lg]': `!isAffix && !isAddOn && isLarge`,\n    '[class.ant-input-group-sm]': `!isAffix && !isAddOn && isSmall`\n  }\n})\nexport class NzInputGroupComponent implements AfterContentInit, OnChanges, OnInit, OnDestroy {\n  static ngAcceptInputType_nzSearch: BooleanInput;\n  static ngAcceptInputType_nzCompact: BooleanInput;\n\n  @ContentChildren(NzInputDirective) listOfNzInputDirective: QueryList<NzInputDirective>;\n  @Input() nzAddOnBeforeIcon: NgClassType;\n  @Input() nzAddOnAfterIcon: NgClassType;\n  @Input() nzPrefixIcon: NgClassType;\n  @Input() nzSuffixIcon: NgClassType;\n  @Input() nzAddOnBefore: string | TemplateRef<void>;\n  @Input() nzAddOnAfter: string | TemplateRef<void>;\n  @Input() nzPrefix: string | TemplateRef<void>;\n  @Input() nzSuffix: string | TemplateRef<void>;\n  @Input() nzSize: NzSizeLDSType;\n  @Input() @InputBoolean() nzSearch = false;\n  @Input() @InputBoolean() nzCompact = false;\n  isLarge = false;\n  isSmall = false;\n  isAffix = false;\n  isAddOn = false;\n  focused = false;\n  disabled = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(private focusMonitor: FocusMonitor, private elementRef: ElementRef, private cdr: ChangeDetectorRef) {}\n\n  updateChildrenInputSize(): void {\n    if (this.listOfNzInputDirective) {\n      this.listOfNzInputDirective.forEach(item => (item.nzSize = this.nzSize));\n    }\n  }\n\n  ngOnInit(): void {\n    this.focusMonitor\n      .monitor(this.elementRef, true)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(focusOrigin => {\n        this.focused = !!focusOrigin;\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngAfterContentInit(): void {\n    this.updateChildrenInputSize();\n    const listOfInputChange$ = this.listOfNzInputDirective.changes.pipe(startWith(this.listOfNzInputDirective));\n    listOfInputChange$\n      .pipe(\n        switchMap(list => {\n          return merge(...[listOfInputChange$, ...list.map((input: NzInputDirective) => input.disabled$)]);\n        }),\n        flatMap(() => listOfInputChange$),\n        map(list => list.some((input: NzInputDirective) => input.disabled)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(disabled => {\n        this.disabled = disabled;\n        this.cdr.markForCheck();\n      });\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    const {\n      nzSize,\n      nzSuffix,\n      nzPrefix,\n      nzPrefixIcon,\n      nzSuffixIcon,\n      nzAddOnAfter,\n      nzAddOnBefore,\n      nzAddOnAfterIcon,\n      nzAddOnBeforeIcon\n    } = changes;\n    if (nzSize) {\n      this.updateChildrenInputSize();\n      this.isLarge = this.nzSize === 'large';\n      this.isSmall = this.nzSize === 'small';\n    }\n    if (nzSuffix || nzPrefix || nzPrefixIcon || nzSuffixIcon) {\n      this.isAffix = !!(this.nzSuffix || this.nzPrefix || this.nzPrefixIcon || this.nzSuffixIcon);\n    }\n    if (nzAddOnAfter || nzAddOnBefore || nzAddOnAfterIcon || nzAddOnBeforeIcon) {\n      this.isAddOn = !!(this.nzAddOnAfter || this.nzAddOnBefore || this.nzAddOnAfterIcon || this.nzAddOnBeforeIcon);\n    }\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport { AfterViewInit, Directive, DoCheck, ElementRef, Input, NgZone, OnDestroy } from '@angular/core';\nimport { NzResizeService } from 'ng-zorro-antd/core/services';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport interface AutoSizeType {\n  minRows?: number;\n  maxRows?: number;\n}\n\n@Directive({\n  selector: 'textarea[nzAutosize]',\n  exportAs: 'nzAutosize',\n  host: {\n    // Textarea elements that have the directive applied should have a single row by default.\n    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n    rows: '1',\n    '(input)': 'noopInputHandler()'\n  }\n})\nexport class NzAutosizeDirective implements AfterViewInit, OnDestroy, DoCheck {\n  private autosize: boolean | AutoSizeType = false;\n  private el: HTMLTextAreaElement | HTMLInputElement = this.elementRef.nativeElement;\n  private cachedLineHeight: number;\n  private previousValue: string;\n  private previousMinRows: number | undefined;\n  private minRows: number | undefined;\n  private maxRows: number | undefined;\n  private maxHeight: number | null = null;\n  private minHeight: number | null = null;\n  private destroy$ = new Subject();\n  private inputGap = 10;\n\n  @Input()\n  set nzAutosize(value: string | boolean | AutoSizeType) {\n    const isAutoSizeType = (data: string | boolean | AutoSizeType): data is AutoSizeType => {\n      return typeof data !== 'string' && typeof data !== 'boolean' && (!!data.maxRows || !!data.minRows);\n    };\n    if (typeof value === 'string') {\n      this.autosize = true;\n    } else if (isAutoSizeType(value)) {\n      this.autosize = value;\n      this.minRows = value.minRows;\n      this.maxRows = value.maxRows;\n      this.maxHeight = this.setMaxHeight();\n      this.minHeight = this.setMinHeight();\n    }\n  }\n\n  resizeToFitContent(force: boolean = false): void {\n    this.cacheTextareaLineHeight();\n\n    // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n    // in checking the height of the textarea.\n    if (!this.cachedLineHeight) {\n      return;\n    }\n\n    const textarea = this.el as HTMLTextAreaElement;\n    const value = textarea.value;\n\n    // Only resize if the value or minRows have changed since these calculations can be expensive.\n    if (!force && this.minRows === this.previousMinRows && value === this.previousValue) {\n      return;\n    }\n    const placeholderText = textarea.placeholder;\n\n    // Reset the textarea height to auto in order to shrink back to its default size.\n    // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n    // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n    // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n    // need to be removed temporarily.\n    textarea.classList.add('nz-textarea-autosize-measuring');\n    textarea.placeholder = '';\n    let height = Math.round((textarea.scrollHeight - this.inputGap) / this.cachedLineHeight) * this.cachedLineHeight + this.inputGap;\n    if (this.maxHeight !== null && height > this.maxHeight) {\n      height = this.maxHeight!;\n    }\n    if (this.minHeight !== null && height < this.minHeight) {\n      height = this.minHeight!;\n    }\n    // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n    textarea.style.height = `${height}px`;\n    textarea.classList.remove('nz-textarea-autosize-measuring');\n    textarea.placeholder = placeholderText;\n\n    // On Firefox resizing the textarea will prevent it from scrolling to the caret position.\n    // We need to re-set the selection in order for it to scroll to the proper position.\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this.ngZone.runOutsideAngular(() =>\n        requestAnimationFrame(() => {\n          const { selectionStart, selectionEnd } = textarea;\n\n          // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n          // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n          // between the time we requested the animation frame and when it was executed.\n          // Also note that we have to assert that the textarea is focused before we set the\n          // selection range. Setting the selection range on a non-focused textarea will cause\n          // it to receive focus on IE and Edge.\n          if (!this.destroy$.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n          }\n        })\n      );\n    }\n\n    this.previousValue = value;\n    this.previousMinRows = this.minRows;\n  }\n\n  private cacheTextareaLineHeight(): void {\n    if (this.cachedLineHeight >= 0 || !this.el.parentNode) {\n      return;\n    }\n\n    // Use a clone element because we have to override some styles.\n    const textareaClone = this.el.cloneNode(false) as HTMLTextAreaElement;\n    textareaClone.rows = 1;\n\n    // Use `position: absolute` so that this doesn't cause a browser layout and use\n    // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n    // would affect the height.\n    textareaClone.style.position = 'absolute';\n    textareaClone.style.visibility = 'hidden';\n    textareaClone.style.border = 'none';\n    textareaClone.style.padding = '0';\n    textareaClone.style.height = '';\n    textareaClone.style.minHeight = '';\n    textareaClone.style.maxHeight = '';\n\n    // In Firefox it happens that textarea elements are always bigger than the specified amount\n    // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n    // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n    // to hidden. This ensures that there is no invalid calculation of the line height.\n    // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n    textareaClone.style.overflow = 'hidden';\n\n    this.el.parentNode!.appendChild(textareaClone);\n    this.cachedLineHeight = textareaClone.clientHeight - this.inputGap;\n    this.el.parentNode!.removeChild(textareaClone);\n\n    // Min and max heights have to be re-calculated if the cached line height changes\n    this.maxHeight = this.setMaxHeight();\n    this.minHeight = this.setMinHeight();\n  }\n\n  setMinHeight(): number | null {\n    const minHeight = this.minRows && this.cachedLineHeight ? this.minRows * this.cachedLineHeight + this.inputGap : null;\n\n    if (minHeight !== null) {\n      this.el.style.minHeight = `${minHeight}px`;\n    }\n    return minHeight;\n  }\n\n  setMaxHeight(): number | null {\n    const maxHeight = this.maxRows && this.cachedLineHeight ? this.maxRows * this.cachedLineHeight + this.inputGap : null;\n    if (maxHeight !== null) {\n      this.el.style.maxHeight = `${maxHeight}px`;\n    }\n    return maxHeight;\n  }\n\n  noopInputHandler(): void {\n    // no-op handler that ensures we're running change detection on input events.\n  }\n\n  constructor(private elementRef: ElementRef, private ngZone: NgZone, private platform: Platform, private resizeService: NzResizeService) {}\n\n  ngAfterViewInit(): void {\n    if (this.autosize && this.platform.isBrowser) {\n      this.resizeToFitContent();\n      this.resizeService\n        .subscribe()\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => this.resizeToFitContent(true));\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngDoCheck(): void {\n    if (this.autosize && this.platform.isBrowser) {\n      this.resizeToFitContent();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: '[nz-input-group-slot]',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <i nz-icon [nzType]=\"icon\" *ngIf=\"icon\"></i>\n    <ng-container *nzStringTemplateOutlet=\"template\">{{ template }}</ng-container>\n  `,\n  host: {\n    '[class.ant-input-group-addon]': `type === 'addon'`,\n    '[class.ant-input-prefix]': `type === 'prefix'`,\n    '[class.ant-input-suffix]': `type === 'suffix'`\n  }\n})\nexport class NzInputGroupSlotComponent {\n  @Input() icon: string | null = null;\n  @Input() type: 'addon' | 'prefix' | 'suffix' | null = null;\n  @Input() template: string | TemplateRef<void> | null = null;\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzAutosizeDirective } from './autosize.directive';\nimport { NzInputGroupSlotComponent } from './input-group-slot.component';\nimport { NzInputGroupComponent } from './input-group.component';\nimport { NzInputDirective } from './input.directive';\n\n@NgModule({\n  declarations: [NzInputDirective, NzInputGroupComponent, NzAutosizeDirective, NzInputGroupSlotComponent],\n  exports: [NzInputDirective, NzInputGroupComponent, NzAutosizeDirective],\n  imports: [CommonModule, NzIconModule, PlatformModule, NzOutletModule]\n})\nexport class NzInputModule {}\n"],"names":[],"mappings":"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"}