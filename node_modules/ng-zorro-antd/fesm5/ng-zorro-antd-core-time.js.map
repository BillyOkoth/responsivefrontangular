{"version":3,"file":"ng-zorro-antd-core-time.js","sources":["ng://ng-zorro-antd/core/time/candy-date.ts","ng://ng-zorro-antd/core/time/time.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport addMonths from 'date-fns/addMonths';\nimport addYears from 'date-fns/addYears';\nimport differenceInCalendarDays from 'date-fns/differenceInCalendarDays';\nimport differenceInCalendarMonths from 'date-fns/differenceInCalendarMonths';\nimport differenceInCalendarYears from 'date-fns/differenceInCalendarYears';\nimport differenceInHours from 'date-fns/differenceInHours';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\nimport differenceInSeconds from 'date-fns/differenceInSeconds';\nimport isFirstDayOfMonth from 'date-fns/isFirstDayOfMonth';\nimport isLastDayOfMonth from 'date-fns/isLastDayOfMonth';\nimport isSameDay from 'date-fns/isSameDay';\nimport isSameHour from 'date-fns/isSameHour';\nimport isSameMinute from 'date-fns/isSameMinute';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport isSameSecond from 'date-fns/isSameSecond';\nimport isSameYear from 'date-fns/isSameYear';\nimport isToday from 'date-fns/isToday';\nimport isValid from 'date-fns/isValid';\nimport setDay from 'date-fns/setDay';\nimport setMonth from 'date-fns/setMonth';\nimport setYear from 'date-fns/setYear';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { IndexableObject, NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport type WeekDayIndex = 0 | 1 | 2 | 3 | 4 | 5 | 6;\nexport type CandyDateCompareGrain = 'year' | 'month' | 'day' | 'hour' | 'minute' | 'second';\nexport type CandyDateType = CandyDate | Date | null;\nexport type SingleValue = CandyDate | null;\nexport type CompatibleValue = SingleValue | SingleValue[];\n\nexport function sortRangeValue(rangeValue: SingleValue[]): SingleValue[] {\n  if (Array.isArray(rangeValue)) {\n    const [start, end] = rangeValue;\n    return start && end && start.isAfterSecond(end) ? [end, start] : [start, end];\n  }\n  return rangeValue;\n}\n\nexport function normalizeRangeValue(value: SingleValue[]): CandyDate[] {\n  const [start, end] = value || [];\n  const newStart = start || new CandyDate();\n  const newEnd = end?.isSameMonth(newStart) ? end.addMonths(1) : end || newStart.addMonths(1);\n  return [newStart, newEnd];\n}\n\nexport function cloneDate(value: CompatibleValue): CompatibleValue {\n  if (Array.isArray(value)) {\n    return value.map(v => (v instanceof CandyDate ? v.clone() : null));\n  } else {\n    return value instanceof CandyDate ? value.clone() : null;\n  }\n}\n\n/**\n * Wrapping kind APIs for date operating and unify\n * NOTE: every new API return new CandyDate object without side effects to the former Date object\n * NOTE: most APIs are based on local time other than customized locale id (this needs tobe support in future)\n * TODO: support format() against to angular's core API\n */\nexport class CandyDate implements IndexableObject {\n  nativeDate: Date;\n  // locale: string; // Custom specified locale ID\n\n  constructor(date?: Date | string | number) {\n    if (date) {\n      if (date instanceof Date) {\n        this.nativeDate = date;\n      } else if (typeof date === 'string' || typeof date === 'number') {\n        warn('The string type is not recommended for date-picker, use \"Date\" type');\n        this.nativeDate = new Date(date);\n      } else {\n        throw new Error('The input date type is not supported (\"Date\" is now recommended)');\n      }\n    } else {\n      this.nativeDate = new Date();\n    }\n  }\n\n  // getLocale(): string {\n  //   return this.locale;\n  // }\n\n  // setLocale(locale: string): CandyDate {\n  //   this.locale = locale;\n  //   return this;\n  // }\n\n  calendarStart(options?: { weekStartsOn: WeekDayIndex | undefined }): CandyDate {\n    return new CandyDate(startOfWeek(startOfMonth(this.nativeDate), options));\n  }\n\n  // ---------------------------------------------------------------------\n  // | Native shortcuts\n  // -----------------------------------------------------------------------------\\\n\n  getYear(): number {\n    return this.nativeDate.getFullYear();\n  }\n\n  getMonth(): number {\n    return this.nativeDate.getMonth();\n  }\n\n  getDay(): number {\n    return this.nativeDate.getDay();\n  }\n\n  getTime(): number {\n    return this.nativeDate.getTime();\n  }\n\n  getDate(): number {\n    return this.nativeDate.getDate();\n  }\n\n  getHours(): number {\n    return this.nativeDate.getHours();\n  }\n\n  getMinutes(): number {\n    return this.nativeDate.getMinutes();\n  }\n\n  getSeconds(): number {\n    return this.nativeDate.getSeconds();\n  }\n\n  getMilliseconds(): number {\n    return this.nativeDate.getMilliseconds();\n  }\n\n  // ---------------------------------------------------------------------\n  // | New implementing APIs\n  // ---------------------------------------------------------------------\n\n  clone(): CandyDate {\n    return new CandyDate(new Date(this.nativeDate));\n  }\n\n  setHms(hour: number, minute: number, second: number): CandyDate {\n    return new CandyDate(this.nativeDate.setHours(hour, minute, second));\n  }\n\n  setYear(year: number): CandyDate {\n    return new CandyDate(setYear(this.nativeDate, year));\n  }\n\n  addYears(amount: number): CandyDate {\n    return new CandyDate(addYears(this.nativeDate, amount));\n  }\n\n  // NOTE: month starts from 0\n  // NOTE: Don't use the native API for month manipulation as it not restrict the date when it overflows, eg. (new Date('2018-7-31')).setMonth(1) will be date of 2018-3-03 instead of 2018-2-28\n  setMonth(month: number): CandyDate {\n    return new CandyDate(setMonth(this.nativeDate, month));\n  }\n\n  addMonths(amount: number): CandyDate {\n    return new CandyDate(addMonths(this.nativeDate, amount));\n  }\n\n  setDay(day: number, options?: { weekStartsOn: WeekDayIndex }): CandyDate {\n    return new CandyDate(setDay(this.nativeDate, day, options));\n  }\n\n  setDate(amount: number): CandyDate {\n    const date = new Date(this.nativeDate);\n    date.setDate(amount);\n    return new CandyDate(date);\n  }\n\n  addDays(amount: number): CandyDate {\n    return this.setDate(this.getDate() + amount);\n  }\n\n  isSame(date: CandyDateType, grain: CandyDateCompareGrain = 'day'): boolean {\n    let fn;\n    switch (grain) {\n      case 'year':\n        fn = isSameYear;\n        break;\n      case 'month':\n        fn = isSameMonth;\n        break;\n      case 'day':\n        fn = isSameDay;\n        break;\n      case 'hour':\n        fn = isSameHour;\n        break;\n      case 'minute':\n        fn = isSameMinute;\n        break;\n      case 'second':\n        fn = isSameSecond;\n        break;\n      default:\n        fn = isSameDay;\n        break;\n    }\n    return fn(this.nativeDate, this.toNativeDate(date));\n  }\n\n  isSameYear(date: CandyDateType): boolean {\n    return this.isSame(date, 'year');\n  }\n\n  isSameMonth(date: CandyDateType): boolean {\n    return this.isSame(date, 'month');\n  }\n\n  isSameDay(date: CandyDateType): boolean {\n    return this.isSame(date, 'day');\n  }\n\n  isSameHour(date: CandyDateType): boolean {\n    return this.isSame(date, 'hour');\n  }\n\n  isSameMinute(date: CandyDateType): boolean {\n    return this.isSame(date, 'minute');\n  }\n\n  isSameSecond(date: CandyDateType): boolean {\n    return this.isSame(date, 'second');\n  }\n\n  compare(date: CandyDateType, grain: CandyDateCompareGrain = 'day', isBefore: boolean = true): boolean {\n    if (date === null) {\n      return false;\n    }\n    let fn;\n    switch (grain) {\n      case 'year':\n        fn = differenceInCalendarYears;\n        break;\n      case 'month':\n        fn = differenceInCalendarMonths;\n        break;\n      case 'day':\n        fn = differenceInCalendarDays;\n        break;\n      case 'hour':\n        fn = differenceInHours;\n        break;\n      case 'minute':\n        fn = differenceInMinutes;\n        break;\n      case 'second':\n        fn = differenceInSeconds;\n        break;\n      default:\n        fn = differenceInCalendarDays;\n        break;\n    }\n    return isBefore ? fn(this.nativeDate, this.toNativeDate(date)) < 0 : fn(this.nativeDate, this.toNativeDate(date)) > 0;\n  }\n\n  isBeforeYear(date: CandyDateType): boolean {\n    return this.compare(date, 'year');\n  }\n\n  isBeforeMonth(date: CandyDateType): boolean {\n    return this.compare(date, 'month');\n  }\n\n  isBeforeDay(date: CandyDateType): boolean {\n    return this.compare(date, 'day');\n  }\n\n  isBeforeHour(date: CandyDateType): boolean {\n    return this.compare(date, 'hour');\n  }\n\n  isBeforeMinute(date: CandyDateType): boolean {\n    return this.compare(date, 'minute');\n  }\n\n  isBeforeSecond(date: CandyDateType): boolean {\n    return this.compare(date, 'second');\n  }\n\n  // TODO: isBefore\n  isAfterYear(date: CandyDateType): boolean {\n    return this.compare(date, 'year', false);\n  }\n\n  isAfterMonth(date: CandyDateType): boolean {\n    return this.compare(date, 'month', false);\n  }\n\n  isAfterDay(date: CandyDateType): boolean {\n    return this.compare(date, 'day', false);\n  }\n\n  isAfterHour(date: CandyDateType): boolean {\n    return this.compare(date, 'hour', false);\n  }\n\n  isAfterMinute(date: CandyDateType): boolean {\n    return this.compare(date, 'minute', false);\n  }\n\n  isAfterSecond(date: CandyDateType): boolean {\n    return this.compare(date, 'second', false);\n  }\n\n  // Equal to today accurate to \"day\"\n  isToday(): boolean {\n    return isToday(this.nativeDate);\n  }\n\n  isValid(): boolean {\n    return isValid(this.nativeDate);\n  }\n\n  isFirstDayOfMonth(): boolean {\n    return isFirstDayOfMonth(this.nativeDate);\n  }\n\n  isLastDayOfMonth(): boolean {\n    return isLastDayOfMonth(this.nativeDate);\n  }\n\n  private toNativeDate(date: NzSafeAny): Date {\n    return date instanceof CandyDate ? date.nativeDate : date;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport const timeUnits: Array<[string, number]> = [\n  ['Y', 1000 * 60 * 60 * 24 * 365], // years\n  ['M', 1000 * 60 * 60 * 24 * 30], // months\n  ['D', 1000 * 60 * 60 * 24], // days\n  ['H', 1000 * 60 * 60], // hours\n  ['m', 1000 * 60], // minutes\n  ['s', 1000], // seconds\n  ['S', 1] // million seconds\n];\n"],"names":[],"mappings":"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"}