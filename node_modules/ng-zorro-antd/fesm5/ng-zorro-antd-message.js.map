{"version":3,"file":"ng-zorro-antd-message.js","sources":["ng://ng-zorro-antd/message/base.ts","ng://ng-zorro-antd/message/message-container.component.ts","ng://ng-zorro-antd/message/message.service.module.ts","ng://ng-zorro-antd/message/message.service.ts","ng://ng-zorro-antd/message/message.component.ts","ng://ng-zorro-antd/message/message.module.ts","ng://ng-zorro-antd/message/typings.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ComponentType, Overlay } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ChangeDetectorRef, EventEmitter, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { MessageConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\nimport { Subject } from 'rxjs';\n\nimport { NzMessageData, NzMessageDataOptions } from './typings';\n\nlet globalCounter = 0;\n\nexport abstract class NzMNService {\n  protected abstract componentPrefix: string;\n  protected container: NzMNContainerComponent;\n\n  constructor(protected nzSingletonService: NzSingletonService, protected overlay: Overlay, private injector: Injector) {}\n\n  remove(id?: string): void {\n    if (id) {\n      this.container.remove(id);\n    } else {\n      this.container.removeAll();\n    }\n  }\n\n  protected getInstanceId(): string {\n    return `${this.componentPrefix}-${globalCounter++}`;\n  }\n\n  protected withContainer<T extends NzMNContainerComponent>(ctor: ComponentType<T>): T {\n    let containerInstance = this.nzSingletonService.getSingletonWithKey(this.componentPrefix);\n    if (containerInstance) {\n      return containerInstance as T;\n    }\n\n    const overlayRef = this.overlay.create({\n      hasBackdrop: false,\n      scrollStrategy: this.overlay.scrollStrategies.noop(),\n      positionStrategy: this.overlay.position().global()\n    });\n    const componentPortal = new ComponentPortal(ctor, null, this.injector);\n    const componentRef = overlayRef.attach(componentPortal);\n    const overlayPane = overlayRef.overlayElement;\n    overlayPane.style.zIndex = '1010';\n\n    if (!containerInstance) {\n      this.container = containerInstance = componentRef.instance;\n      this.nzSingletonService.registerSingletonWithKey(this.componentPrefix, containerInstance);\n    }\n\n    return containerInstance as T;\n  }\n}\n\nexport abstract class NzMNContainerComponent implements OnInit, OnDestroy {\n  config: Required<MessageConfig>;\n  instances: Array<Required<NzMessageData>> = [];\n\n  protected readonly destroy$ = new Subject<void>();\n\n  constructor(protected cdr: ChangeDetectorRef, protected nzConfigService: NzConfigService) {\n    this.updateConfig();\n  }\n\n  ngOnInit(): void {\n    this.subscribeConfigChange();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  create(data: NzMessageData): Required<NzMessageData> {\n    const instance = this.onCreate(data);\n\n    if (this.instances.length >= this.config.nzMaxStack) {\n      this.instances = this.instances.slice(1);\n    }\n\n    this.instances = [...this.instances, instance];\n\n    this.readyInstances();\n\n    return instance;\n  }\n\n  remove(id: string, userAction: boolean = false): void {\n    this.instances.some((instance, index) => {\n      if (instance.messageId === id) {\n        this.instances.splice(index, 1);\n        this.instances = [...this.instances];\n        this.onRemove(instance, userAction);\n        this.readyInstances();\n        return true;\n      }\n      return false;\n    });\n  }\n\n  removeAll(): void {\n    this.instances.forEach(i => this.onRemove(i, false));\n    this.instances = [];\n\n    this.readyInstances();\n  }\n\n  protected onCreate(instance: NzMessageData): Required<NzMessageData> {\n    instance.options = this.mergeOptions(instance.options);\n    instance.onClose = new Subject<boolean>();\n    return instance as Required<NzMessageData>;\n  }\n\n  protected onRemove(instance: Required<NzMessageData>, userAction: boolean): void {\n    instance.onClose.next(userAction);\n    instance.onClose.complete();\n  }\n\n  protected readyInstances(): void {\n    this.cdr.detectChanges();\n  }\n\n  protected abstract updateConfig(): void;\n\n  protected abstract subscribeConfigChange(): void;\n\n  protected mergeOptions(options?: NzMessageDataOptions): NzMessageDataOptions {\n    const { nzDuration, nzAnimate, nzPauseOnHover } = this.config;\n    return { nzDuration, nzAnimate, nzPauseOnHover, ...options };\n  }\n}\n\nexport abstract class NzMNComponent implements OnInit, OnDestroy {\n  instance: Required<NzMessageData>;\n  index: number;\n\n  readonly destroyed = new EventEmitter<{ id: string; userAction: boolean }>();\n\n  protected options: Required<NzMessageDataOptions>;\n  protected autoClose: boolean;\n  protected eraseTimer: number | null = null;\n  protected eraseTimingStart: number;\n  protected eraseTTL: number;\n\n  constructor(protected cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.options = this.instance.options as Required<NzMessageDataOptions>;\n\n    if (this.options.nzAnimate) {\n      this.instance.state = 'enter';\n    }\n\n    this.autoClose = this.options.nzDuration > 0;\n\n    if (this.autoClose) {\n      this.initErase();\n      this.startEraseTimeout();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.autoClose) {\n      this.clearEraseTimeout();\n    }\n  }\n\n  onEnter(): void {\n    if (this.autoClose && this.options.nzPauseOnHover) {\n      this.clearEraseTimeout();\n      this.updateTTL();\n    }\n  }\n\n  onLeave(): void {\n    if (this.autoClose && this.options.nzPauseOnHover) {\n      this.startEraseTimeout();\n    }\n  }\n\n  protected destroy(userAction: boolean = false): void {\n    if (this.options.nzAnimate) {\n      this.instance.state = 'leave';\n      this.cdr.detectChanges();\n      setTimeout(() => {\n        this.destroyed.next({ id: this.instance.messageId, userAction: userAction });\n      }, 200);\n    } else {\n      this.destroyed.next({ id: this.instance.messageId, userAction: userAction });\n    }\n  }\n\n  private initErase(): void {\n    this.eraseTTL = this.options.nzDuration;\n    this.eraseTimingStart = Date.now();\n  }\n\n  private updateTTL(): void {\n    if (this.autoClose) {\n      this.eraseTTL -= Date.now() - this.eraseTimingStart;\n    }\n  }\n\n  private startEraseTimeout(): void {\n    if (this.eraseTTL > 0) {\n      this.clearEraseTimeout();\n      this.eraseTimer = setTimeout(() => this.destroy(), this.eraseTTL);\n      this.eraseTimingStart = Date.now();\n    } else {\n      this.destroy();\n    }\n  }\n\n  private clearEraseTimeout(): void {\n    if (this.eraseTimer !== null) {\n      clearTimeout(this.eraseTimer);\n      this.eraseTimer = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { MessageConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\n\nimport { takeUntil } from 'rxjs/operators';\nimport { NzMNContainerComponent } from './base';\nimport { NzMessageData } from './typings';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'message';\n\nconst NZ_MESSAGE_DEFAULT_CONFIG: Required<MessageConfig> = {\n  nzAnimate: true,\n  nzDuration: 3000,\n  nzMaxStack: 7,\n  nzPauseOnHover: true,\n  nzTop: 24\n};\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-message-container',\n  exportAs: 'nzMessageContainer',\n  preserveWhitespaces: false,\n  template: `\n    <div class=\"ant-message\" [style.top]=\"top\">\n      <nz-message *ngFor=\"let instance of instances\" [instance]=\"instance\" (destroyed)=\"remove($event.id, $event.userAction)\"></nz-message>\n    </div>\n  `\n})\nexport class NzMessageContainerComponent extends NzMNContainerComponent {\n  readonly destroy$ = new Subject<void>();\n  instances: Array<Required<NzMessageData>> = [];\n  top: string | null;\n\n  constructor(cdr: ChangeDetectorRef, nzConfigService: NzConfigService) {\n    super(cdr, nzConfigService);\n  }\n\n  protected subscribeConfigChange(): void {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.updateConfig());\n  }\n\n  protected updateConfig(): void {\n    this.config = {\n      ...NZ_MESSAGE_DEFAULT_CONFIG,\n      ...this.config,\n      ...this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME)\n    };\n\n    this.top = toCssPixel(this.config.nzTop);\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzMessageServiceModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay } from '@angular/cdk/overlay';\nimport { Injectable, Injector, TemplateRef } from '@angular/core';\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\n\nimport { NzMNService } from './base';\nimport { NzMessageContainerComponent } from './message-container.component';\nimport { NzMessageServiceModule } from './message.service.module';\nimport { NzMessageData, NzMessageDataOptions, NzMessageRef } from './typings';\n\n@Injectable({\n  providedIn: NzMessageServiceModule\n})\nexport class NzMessageService extends NzMNService {\n  protected container: NzMessageContainerComponent;\n  protected componentPrefix = 'message-';\n\n  constructor(nzSingletonService: NzSingletonService, overlay: Overlay, injector: Injector) {\n    super(nzSingletonService, overlay, injector);\n  }\n\n  success(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'success', content }, options);\n  }\n\n  error(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'error', content }, options);\n  }\n\n  info(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'info', content }, options);\n  }\n\n  warning(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'warning', content }, options);\n  }\n\n  loading(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'loading', content }, options);\n  }\n\n  create(\n    type: 'success' | 'info' | 'warning' | 'error' | 'loading' | string,\n    content: string | TemplateRef<void>,\n    options?: NzMessageDataOptions\n  ): NzMessageRef {\n    return this.createInstance({ type, content }, options);\n  }\n\n  private createInstance(message: NzMessageData, options?: NzMessageDataOptions): NzMessageRef {\n    this.container = this.withContainer(NzMessageContainerComponent);\n\n    return this.container.create({\n      ...message,\n      ...{\n        createdAt: new Date(),\n        messageId: this.getInstanceId(),\n        options\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\nimport { moveUpMotion } from 'ng-zorro-antd/core/animation';\n\nimport { NzMNComponent } from './base';\nimport { NzMessageData } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-message',\n  exportAs: 'nzMessage',\n  preserveWhitespaces: false,\n  animations: [moveUpMotion],\n  template: `\n    <div class=\"ant-message-notice\" [@moveUpMotion]=\"instance.state\" (mouseenter)=\"onEnter()\" (mouseleave)=\"onLeave()\">\n      <div class=\"ant-message-notice-content\">\n        <div class=\"ant-message-custom-content\" [ngClass]=\"'ant-message-' + instance.type\">\n          <ng-container [ngSwitch]=\"instance.type\">\n            <i *ngSwitchCase=\"'success'\" nz-icon nzType=\"check-circle\"></i>\n            <i *ngSwitchCase=\"'info'\" nz-icon nzType=\"info-circle\"></i>\n            <i *ngSwitchCase=\"'warning'\" nz-icon nzType=\"exclamation-circle\"></i>\n            <i *ngSwitchCase=\"'error'\" nz-icon nzType=\"close-circle\"></i>\n            <i *ngSwitchCase=\"'loading'\" nz-icon nzType=\"loading\"></i>\n          </ng-container>\n          <ng-container *nzStringTemplateOutlet=\"instance.content\">\n            <span [innerHTML]=\"instance.content\"></span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class NzMessageComponent extends NzMNComponent implements OnInit, OnDestroy {\n  @Input() instance: Required<NzMessageData>;\n  @Output() readonly destroyed = new EventEmitter<{ id: string; userAction: boolean }>();\n\n  constructor(cdr: ChangeDetectorRef) {\n    super(cdr);\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzMessageContainerComponent } from './message-container.component';\nimport { NzMessageComponent } from './message.component';\nimport { NzMessageServiceModule } from './message.service.module';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule],\n  declarations: [NzMessageContainerComponent, NzMessageComponent],\n  entryComponents: [NzMessageContainerComponent]\n})\nexport class NzMessageModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport type NzMessageType = 'success' | 'info' | 'warning' | 'error' | 'loading';\n\nexport interface NzMessageDataOptions {\n  nzDuration?: number;\n  nzAnimate?: boolean;\n  nzPauseOnHover?: boolean;\n}\n\nexport interface NzMessageData {\n  type?: NzMessageType | string;\n  content?: string | TemplateRef<void>;\n  messageId?: string;\n  createdAt?: Date;\n  options?: NzMessageDataOptions;\n  state?: 'enter' | 'leave';\n\n  onClose?: Subject<boolean>;\n}\n\nexport type NzMessageRef = Pick<Required<NzMessageData>, 'onClose' | 'messageId'>;\n\n/**\n * @deprecated use `NzMessageRef` instead\n * @breaking-change 10.0.0\n */\nexport type NzMessageDataFilled = NzMessageRef;\n"],"names":[],"mappings":"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"}