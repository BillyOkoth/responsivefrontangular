{"version":3,"file":"ng-zorro-antd-typography.js","sources":["ng://ng-zorro-antd/typography/text-copy.component.ts","ng://ng-zorro-antd/typography/text-edit.component.ts","ng://ng-zorro-antd/typography/typography.component.ts","ng://ng-zorro-antd/typography/typography.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'nz-text-copy',\n  exportAs: 'nzTextCopy',\n  template: `\n    <button\n      nz-tooltip\n      nz-trans-button\n      [nzTooltipTitle]=\"copied ? locale?.copied : locale?.copy\"\n      class=\"ant-typography-copy\"\n      [class.ant-typography-copy-success]=\"copied\"\n      (click)=\"onClick()\"\n    >\n      <i nz-icon [nzType]=\"copied ? 'check' : 'copy'\"></i>\n    </button>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false\n})\nexport class NzTextCopyComponent implements OnInit, OnDestroy {\n  copied = false;\n  copyId: number;\n  locale: NzSafeAny = {};\n  nativeElement = this.host.nativeElement;\n  private destroy$ = new Subject();\n\n  @Input() text: string;\n  @Output() readonly textCopy = new EventEmitter<string>();\n\n  constructor(private host: ElementRef, private cdr: ChangeDetectorRef, private clipboard: Clipboard, private i18n: NzI18nService) {}\n\n  ngOnInit(): void {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Text');\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnDestroy(): void {\n    clearTimeout(this.copyId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  onClick(): void {\n    if (this.copied) {\n      return;\n    }\n    this.copied = true;\n    this.cdr.detectChanges();\n    const text = this.text;\n    this.textCopy.emit(text);\n    this.clipboard.copy(text);\n    this.onCopied();\n  }\n\n  onCopied(): void {\n    clearTimeout(this.copyId);\n    this.copyId = setTimeout(() => {\n      this.copied = false;\n      this.cdr.detectChanges();\n    }, 3000);\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { NzAutosizeDirective } from 'ng-zorro-antd/input';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'nz-text-edit',\n  exportAs: 'nzTextEdit',\n  template: `\n    <button *ngIf=\"!editing\" [nzTooltipTitle]=\"locale?.edit\" nz-tooltip nz-trans-button class=\"ant-typography-edit\" (click)=\"onClick()\">\n      <i nz-icon nzType=\"edit\"></i>\n    </button>\n    <ng-container *ngIf=\"editing\">\n      <textarea\n        #textarea\n        nz-input\n        nzAutosize\n        (input)=\"onInput($event)\"\n        (blur)=\"confirm()\"\n        (keydown.esc)=\"onCancel()\"\n        (keydown.enter)=\"onEnter($event)\"\n      >\n      </textarea>\n      <button nz-trans-button class=\"ant-typography-edit-content-confirm\" (click)=\"confirm()\">\n        <i nz-icon nzType=\"enter\"></i>\n      </button>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false\n})\nexport class NzTextEditComponent implements OnInit, OnDestroy {\n  editing = false;\n  locale: NzSafeAny = {};\n  private destroy$ = new Subject();\n\n  @Input() text: string;\n  @Output() readonly startEditing = new EventEmitter<void>();\n  @Output() readonly endEditing = new EventEmitter<string>();\n  @ViewChild('textarea', { static: false }) textarea: ElementRef<HTMLTextAreaElement>;\n  @ViewChild(NzAutosizeDirective, { static: false }) autosizeDirective: NzAutosizeDirective;\n\n  beforeText: string;\n  currentText: string;\n  nativeElement = this.host.nativeElement;\n  constructor(private host: ElementRef, private cdr: ChangeDetectorRef, private i18n: NzI18nService) {}\n\n  ngOnInit(): void {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Text');\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  onClick(): void {\n    this.beforeText = this.text;\n    this.currentText = this.beforeText;\n    this.editing = true;\n    this.startEditing.emit();\n    this.focusAndSetValue();\n  }\n\n  confirm(): void {\n    this.editing = false;\n    this.endEditing.emit(this.currentText);\n  }\n\n  onInput(event: Event): void {\n    const target = event.target as HTMLTextAreaElement;\n    this.currentText = target.value;\n  }\n\n  onEnter(event: KeyboardEvent): void {\n    event.stopPropagation();\n    event.preventDefault();\n    this.confirm();\n  }\n\n  onCancel(): void {\n    this.currentText = this.beforeText;\n    this.confirm();\n  }\n\n  focusAndSetValue(): void {\n    setTimeout(() => {\n      if (this.textarea?.nativeElement) {\n        this.textarea.nativeElement.focus();\n        this.textarea.nativeElement.value = this.currentText;\n        this.autosizeDirective.resizeToFitContent();\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { cancelRequestAnimationFrame, reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { NzResizeService } from 'ng-zorro-antd/core/services';\nimport { BooleanInput, NumberInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, InputNumber, isStyleSupport, measure } from 'ng-zorro-antd/core/util';\n\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\n\nimport { NzTextCopyComponent } from './text-copy.component';\nimport { NzTextEditComponent } from './text-edit.component';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'typography';\nconst EXPAND_ELEMENT_CLASSNAME = 'ant-typography-expand';\n\n@Component({\n  selector: `\n  nz-typography,\n  [nz-typography],\n  p[nz-paragraph],\n  span[nz-text],\n  h1[nz-title], h2[nz-title], h3[nz-title], h4[nz-title]\n  `,\n  exportAs: 'nzTypography',\n  template: `\n    <ng-template #contentTemplate let-content=\"content\">\n      <ng-content *ngIf=\"!content\"></ng-content>\n      {{ content }}\n    </ng-template>\n\n    <ng-container *ngIf=\"!editing\">\n      <ng-container *ngIf=\"expanded || (!nzExpandable && !nzSuffix && nzEllipsisRows === 1) || canCssEllipsis\">\n        <ng-template [ngTemplateOutlet]=\"contentTemplate\" [ngTemplateOutletContext]=\"{ content: nzContent }\"></ng-template>\n      </ng-container>\n      <ng-container *ngIf=\"(nzEllipsis && !expanded && (nzEllipsisRows > 1 || nzExpandable)) || nzSuffix\">\n        <span #ellipsisContainer *ngIf=\"!expanded\"></span>\n        <ng-container *ngIf=\"isEllipsis\">{{ ellipsisStr }}</ng-container>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        <a #expandable *ngIf=\"nzExpandable && isEllipsis\" class=\"ant-typography-expand\" (click)=\"onExpand()\">{{ locale?.expand }}</a>\n      </ng-container>\n    </ng-container>\n\n    <nz-text-edit *ngIf=\"nzEditable\" [text]=\"nzContent\" (endEditing)=\"onEndEditing($event)\" (startEditing)=\"onStartEditing()\">\n    </nz-text-edit>\n\n    <nz-text-copy *ngIf=\"nzCopyable && !editing\" [text]=\"copyText\" (textCopy)=\"onTextCopy($event)\"></nz-text-copy>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-typography]': '!editing',\n    '[class.ant-typography-edit-content]': 'editing',\n    '[class.ant-typography-secondary]': 'nzType === \"secondary\"',\n    '[class.ant-typography-warning]': 'nzType === \"warning\"',\n    '[class.ant-typography-danger]': 'nzType === \"danger\"',\n    '[class.ant-typography-disabled]': 'nzDisabled',\n    '[class.ant-typography-ellipsis]': 'nzEllipsis && !expanded',\n    '[class.ant-typography-ellipsis-single-line]': 'canCssEllipsis && nzEllipsisRows === 1',\n    '[class.ant-typography-ellipsis-multiple-line]': 'canCssEllipsis && nzEllipsisRows > 1',\n    '[style.-webkit-line-clamp]': '(canCssEllipsis && nzEllipsisRows > 1) ? nzEllipsisRows : null'\n  }\n})\nexport class NzTypographyComponent implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n  static ngAcceptInputType_nzCopyable: BooleanInput;\n  static ngAcceptInputType_nzEditable: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzExpandable: BooleanInput;\n  static ngAcceptInputType_nzEllipsis: BooleanInput;\n  static ngAcceptInputType_nzEllipsisRows: NumberInput;\n\n  @Input() @InputBoolean() nzCopyable = false;\n  @Input() @InputBoolean() nzEditable = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzExpandable = false;\n  @Input() @InputBoolean() nzEllipsis = false;\n  @Input() nzContent: string;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 1) @InputNumber() nzEllipsisRows: number;\n  @Input() nzType: 'secondary' | 'warning' | 'danger' | undefined;\n  @Input() nzCopyText: string | undefined;\n  @Input() nzSuffix: string | undefined;\n  @Output() readonly nzContentChange = new EventEmitter<string>();\n  @Output() readonly nzCopy = new EventEmitter<string>();\n  @Output() readonly nzExpandChange = new EventEmitter<void>();\n\n  @ViewChild(NzTextEditComponent, { static: false }) textEditRef: NzTextEditComponent;\n  @ViewChild(NzTextCopyComponent, { static: false }) textCopyRef: NzTextCopyComponent;\n  @ViewChild('ellipsisContainer', { static: false }) ellipsisContainer: ElementRef<HTMLSpanElement>;\n  @ViewChild('expandable', { static: false }) expandableBtn: ElementRef<HTMLSpanElement>;\n  @ViewChild('contentTemplate', { static: false }) contentTemplate: TemplateRef<{ content: string }>;\n\n  locale: NzSafeAny = {};\n  document: Document;\n  expandableBtnElementCache: HTMLElement | null = null;\n  editing = false;\n  ellipsisText: string | undefined;\n  cssEllipsis: boolean = false;\n  isEllipsis: boolean = true;\n  expanded: boolean = false;\n  ellipsisStr = '...';\n\n  get canCssEllipsis(): boolean {\n    return this.nzEllipsis && this.cssEllipsis && !this.expanded;\n  }\n\n  private viewInit = false;\n  private rfaId: number = -1;\n  private destroy$ = new Subject();\n  private windowResizeSubscription = Subscription.EMPTY;\n  get copyText(): string {\n    return typeof this.nzCopyText === 'string' ? this.nzCopyText : this.nzContent;\n  }\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private host: ElementRef<HTMLElement>,\n    private cdr: ChangeDetectorRef,\n    private viewContainerRef: ViewContainerRef,\n    private renderer: Renderer2,\n    private platform: Platform,\n    private i18n: NzI18nService,\n    @Inject(DOCUMENT) document: NzSafeAny,\n    private resizeService: NzResizeService\n  ) {\n    this.document = document;\n  }\n\n  onTextCopy(text: string): void {\n    this.nzCopy.emit(text);\n  }\n\n  onStartEditing(): void {\n    this.editing = true;\n  }\n\n  onEndEditing(text: string): void {\n    this.editing = false;\n    this.nzContentChange.emit(text);\n    if (this.nzContent === text) {\n      this.renderOnNextFrame();\n    }\n  }\n\n  onExpand(): void {\n    this.isEllipsis = false;\n    this.expanded = true;\n    this.nzExpandChange.emit();\n  }\n\n  canUseCSSEllipsis(): boolean {\n    if (this.nzEditable || this.nzCopyable || this.nzExpandable || this.nzSuffix) {\n      return false;\n    }\n    if (this.nzEllipsisRows === 1) {\n      return isStyleSupport('textOverflow');\n    } else {\n      return isStyleSupport('webkitLineClamp');\n    }\n  }\n\n  renderOnNextFrame(): void {\n    cancelRequestAnimationFrame(this.rfaId);\n    if (!this.viewInit || !this.nzEllipsis || this.nzEllipsisRows < 0 || this.expanded || !this.platform.isBrowser) {\n      return;\n    }\n    this.rfaId = reqAnimFrame(() => {\n      this.syncEllipsis();\n    });\n  }\n\n  getOriginContentViewRef(): { viewRef: EmbeddedViewRef<{ content: string }>; removeView(): void } {\n    const viewRef = this.viewContainerRef.createEmbeddedView<{ content: string }>(this.contentTemplate, {\n      content: this.nzContent\n    });\n    viewRef.detectChanges();\n    return {\n      viewRef,\n      removeView: () => {\n        this.viewContainerRef.remove(this.viewContainerRef.indexOf(viewRef));\n      }\n    };\n  }\n\n  syncEllipsis(): void {\n    if (this.cssEllipsis) {\n      return;\n    }\n    const { viewRef, removeView } = this.getOriginContentViewRef();\n    const fixedNodes = [this.textCopyRef, this.textEditRef].filter(e => e && e.nativeElement).map(e => e.nativeElement);\n    const expandableBtnElement = this.getExpandableBtnElement();\n    if (expandableBtnElement) {\n      fixedNodes.push(expandableBtnElement);\n    }\n    const { contentNodes, text, ellipsis } = measure(\n      this.host.nativeElement,\n      this.nzEllipsisRows,\n      viewRef.rootNodes,\n      fixedNodes,\n      this.ellipsisStr,\n      this.nzSuffix\n    );\n\n    removeView();\n\n    this.ellipsisText = text;\n    this.isEllipsis = ellipsis;\n    const ellipsisContainerNativeElement = this.ellipsisContainer.nativeElement;\n    while (ellipsisContainerNativeElement.firstChild) {\n      this.renderer.removeChild(ellipsisContainerNativeElement, ellipsisContainerNativeElement.firstChild);\n    }\n    contentNodes.forEach(n => {\n      this.renderer.appendChild(ellipsisContainerNativeElement, n.cloneNode(true));\n    });\n    this.cdr.markForCheck();\n  }\n\n  // Need to create the element for calculation size before view init\n  private getExpandableBtnElement(): HTMLElement | null {\n    if (this.nzExpandable) {\n      const expandText = this.locale ? this.locale.expand : '';\n      const cache = this.expandableBtnElementCache;\n      if (!cache || cache.innerText === expandText) {\n        const el = this.document.createElement('a');\n        el.className = EXPAND_ELEMENT_CLASSNAME;\n        el.innerText = expandText;\n        this.expandableBtnElementCache = el;\n      }\n      return this.expandableBtnElementCache;\n    } else {\n      this.expandableBtnElementCache = null;\n      return null;\n    }\n  }\n\n  private renderAndSubscribeWindowResize(): void {\n    if (this.platform.isBrowser) {\n      this.windowResizeSubscription.unsubscribe();\n      this.cssEllipsis = this.canUseCSSEllipsis();\n      this.renderOnNextFrame();\n      this.windowResizeSubscription = this.resizeService\n        .subscribe()\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => this.renderOnNextFrame());\n    }\n  }\n\n  ngOnInit(): void {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Text');\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.viewInit = true;\n    this.renderAndSubscribeWindowResize();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzCopyable, nzEditable, nzExpandable, nzEllipsis, nzContent, nzEllipsisRows, nzSuffix } = changes;\n    if (nzCopyable || nzEditable || nzExpandable || nzEllipsis || nzContent || nzEllipsisRows || nzSuffix) {\n      if (this.nzEllipsis) {\n        if (this.expanded) {\n          this.windowResizeSubscription.unsubscribe();\n        } else {\n          this.renderAndSubscribeWindowResize();\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.expandableBtnElementCache = null;\n    this.windowResizeSubscription.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzTransButtonModule } from 'ng-zorro-antd/core/trans-button';\n\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\n\nimport { NzTextCopyComponent } from './text-copy.component';\nimport { NzTextEditComponent } from './text-edit.component';\nimport { NzTypographyComponent } from './typography.component';\n\n@NgModule({\n  imports: [CommonModule, NzIconModule, NzToolTipModule, NzInputModule, NzI18nModule, NzTransButtonModule, ClipboardModule],\n  exports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent, PlatformModule],\n  declarations: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent]\n})\nexport class NzTypographyModule {}\n"],"names":[],"mappings":"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"}