{"version":3,"file":"ng-zorro-antd-notification.js","sources":["ng://ng-zorro-antd/notification/notification.component.ts","ng://ng-zorro-antd/notification/notification-container.component.ts","ng://ng-zorro-antd/notification/notification.service.module.ts","ng://ng-zorro-antd/notification/notification.module.ts","ng://ng-zorro-antd/notification/typings.ts","ng://ng-zorro-antd/notification/notification.service.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, Output, ViewEncapsulation } from '@angular/core';\nimport { notificationMotion } from 'ng-zorro-antd/core/animation';\nimport { NzMNComponent } from 'ng-zorro-antd/message';\n\nimport { NzNotificationData } from './typings';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-notification',\n  exportAs: 'nzNotification',\n  preserveWhitespaces: false,\n  animations: [notificationMotion],\n  template: `\n    <div\n      class=\"ant-notification-notice ant-notification-notice-closable\"\n      [ngStyle]=\"instance.options?.nzStyle\"\n      [ngClass]=\"instance.options?.nzClass\"\n      [@notificationMotion]=\"state\"\n      (click)=\"onClick($event)\"\n      (mouseenter)=\"onEnter()\"\n      (mouseleave)=\"onLeave()\"\n    >\n      <div *ngIf=\"!instance.template\" class=\"ant-notification-notice-content\">\n        <div class=\"ant-notification-notice-content\" [ngClass]=\"{ 'ant-notification-notice-with-icon': instance.type !== 'blank' }\">\n          <div [class.ant-notification-notice-with-icon]=\"instance.type !== 'blank'\">\n            <ng-container [ngSwitch]=\"instance.type\">\n              <i\n                *ngSwitchCase=\"'success'\"\n                nz-icon\n                nzType=\"check-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-success\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'info'\"\n                nz-icon\n                nzType=\"info-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-info\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'warning'\"\n                nz-icon\n                nzType=\"exclamation-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-warning\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'error'\"\n                nz-icon\n                nzType=\"close-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-error\"\n              ></i>\n            </ng-container>\n            <div class=\"ant-notification-notice-message\" [innerHTML]=\"instance.title\"></div>\n            <div class=\"ant-notification-notice-description\" [innerHTML]=\"instance.content\"></div>\n          </div>\n        </div>\n      </div>\n      <ng-template\n        [ngIf]=\"instance.template\"\n        [ngTemplateOutlet]=\"instance.template\"\n        [ngTemplateOutletContext]=\"{ $implicit: this, data: instance.options?.nzData }\"\n      >\n      </ng-template>\n      <a tabindex=\"0\" class=\"ant-notification-notice-close\" (click)=\"close()\">\n        <span class=\"ant-notification-notice-close-x\">\n          <ng-container *ngIf=\"instance.options?.nzCloseIcon; else iconTpl\">\n            <ng-container *nzStringTemplateOutlet=\"instance.options?.nzCloseIcon\">\n              <i nz-icon [nzType]=\"instance.options?.nzCloseIcon\"></i>\n            </ng-container>\n          </ng-container>\n          <ng-template #iconTpl>\n            <i nz-icon nzType=\"close\" class=\"ant-notification-close-icon\"></i>\n          </ng-template>\n        </span>\n      </a>\n    </div>\n  `\n})\nexport class NzNotificationComponent extends NzMNComponent implements OnDestroy {\n  @Input() instance: Required<NzNotificationData>;\n  @Input() placement: string;\n  @Input() index: number;\n  @Output() readonly destroyed = new EventEmitter<{ id: string; userAction: boolean }>();\n\n  constructor(cdr: ChangeDetectorRef) {\n    super(cdr);\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.instance.onClick.complete();\n  }\n\n  onClick(event: MouseEvent): void {\n    this.instance.onClick.next(event);\n  }\n\n  close(): void {\n    this.destroy(true);\n  }\n\n  get state(): string | undefined {\n    if (this.instance.state === 'enter') {\n      if (this.placement === 'topLeft' || this.placement === 'bottomLeft') {\n        return 'enterLeft';\n      } else {\n        return 'enterRight';\n      }\n    } else {\n      return this.instance.state;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { NotificationConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\n\nimport { NzMNContainerComponent } from 'ng-zorro-antd/message';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzNotificationData, NzNotificationDataOptions } from './typings';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'notification';\n\nconst NZ_NOTIFICATION_DEFAULT_CONFIG: Required<NotificationConfig> = {\n  nzTop: '24px',\n  nzBottom: '24px',\n  nzPlacement: 'topRight',\n  nzDuration: 4500,\n  nzMaxStack: 7,\n  nzPauseOnHover: true,\n  nzAnimate: true\n};\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-notification-container',\n  exportAs: 'nzNotificationContainer',\n  preserveWhitespaces: false,\n  template: `\n    <div class=\"ant-notification ant-notification-topLeft\" [style.top]=\"top\" [style.left]=\"'0px'\">\n      <nz-notification\n        *ngFor=\"let instance of topLeftInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div class=\"ant-notification ant-notification-topRight\" [style.top]=\"top\" [style.right]=\"'0px'\">\n      <nz-notification\n        *ngFor=\"let instance of topRightInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div class=\"ant-notification ant-notification-bottomLeft\" [style.bottom]=\"bottom\" [style.left]=\"'0px'\">\n      <nz-notification\n        *ngFor=\"let instance of bottomLeftInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div class=\"ant-notification ant-notification-bottomRight\" [style.bottom]=\"bottom\" [style.right]=\"'0px'\">\n      <nz-notification\n        *ngFor=\"let instance of bottomRightInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n  `\n})\nexport class NzNotificationContainerComponent extends NzMNContainerComponent {\n  bottom: string | null;\n  top: string | null;\n  config: Required<NotificationConfig>;\n  instances: Array<Required<NzNotificationData>> = [];\n  topLeftInstances: Array<Required<NzNotificationData>> = [];\n  topRightInstances: Array<Required<NzNotificationData>> = [];\n  bottomLeftInstances: Array<Required<NzNotificationData>> = [];\n  bottomRightInstances: Array<Required<NzNotificationData>> = [];\n\n  constructor(cdr: ChangeDetectorRef, nzConfigService: NzConfigService) {\n    super(cdr, nzConfigService);\n  }\n\n  create(notification: NzNotificationData): Required<NzNotificationData> {\n    const noti = this.onCreate(notification);\n    const key = noti.options.nzKey;\n    const notificationWithSameKey = this.instances.find(\n      msg => msg.options.nzKey === (notification.options as Required<NzNotificationDataOptions>).nzKey\n    );\n    if (key && notificationWithSameKey) {\n      this.replaceNotification(notificationWithSameKey, noti);\n    } else {\n      if (this.instances.length >= this.config.nzMaxStack) {\n        this.instances = this.instances.slice(1);\n      }\n      this.instances = [...this.instances, noti];\n    }\n\n    this.readyInstances();\n\n    return noti;\n  }\n\n  protected onCreate(instance: NzNotificationData): Required<NzNotificationData> {\n    instance.options = this.mergeOptions(instance.options);\n    instance.onClose = new Subject<boolean>();\n    instance.onClick = new Subject<MouseEvent>();\n    return instance as Required<NzNotificationData>;\n  }\n\n  protected subscribeConfigChange(): void {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.updateConfig());\n  }\n\n  protected updateConfig(): void {\n    this.config = {\n      ...NZ_NOTIFICATION_DEFAULT_CONFIG,\n      ...this.config,\n      ...this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME)\n    };\n\n    this.top = toCssPixel(this.config.nzTop!);\n    this.bottom = toCssPixel(this.config.nzBottom!);\n\n    this.cdr.markForCheck();\n  }\n\n  private replaceNotification(old: NzNotificationData, _new: NzNotificationData): void {\n    old.title = _new.title;\n    old.content = _new.content;\n    old.template = _new.template;\n    old.type = _new.type;\n  }\n\n  protected readyInstances(): void {\n    this.topLeftInstances = this.instances.filter(m => m.options.nzPosition === 'topLeft');\n    this.topRightInstances = this.instances.filter(m => m.options.nzPosition === 'topRight' || !m.options.nzPosition);\n    this.bottomLeftInstances = this.instances.filter(m => m.options.nzPosition === 'bottomLeft');\n    this.bottomRightInstances = this.instances.filter(m => m.options.nzPosition === 'bottomRight');\n\n    this.cdr.detectChanges();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzNotificationServiceModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzNotificationContainerComponent } from './notification-container.component';\nimport { NzNotificationComponent } from './notification.component';\nimport { NzNotificationServiceModule } from './notification.service.module';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzNotificationServiceModule],\n  declarations: [NzNotificationComponent, NzNotificationContainerComponent],\n  entryComponents: [NzNotificationContainerComponent]\n})\nexport class NzNotificationModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef } from '@angular/core';\n\nimport { NgClassInterface, NgStyleInterface } from 'ng-zorro-antd/core/types';\nimport { Subject } from 'rxjs';\n\nexport type NzNotificationPosition = 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\nexport interface NzNotificationDataOptions<T = {}> {\n  nzKey?: string;\n  nzStyle?: NgStyleInterface | string;\n  nzClass?: NgClassInterface | string;\n  nzCloseIcon?: TemplateRef<void> | string;\n  nzPosition?: NzNotificationPosition;\n  nzData?: T;\n  nzDuration?: number;\n  nzAnimate?: boolean;\n  nzPauseOnHover?: boolean;\n}\n\nexport interface NzNotificationData {\n  content?: string | TemplateRef<void>;\n  createdAt?: Date;\n  messageId?: string;\n  options?: NzNotificationDataOptions;\n  state?: 'enter' | 'leave';\n  template?: TemplateRef<{}>;\n  title?: string;\n  type?: 'success' | 'info' | 'warning' | 'error' | 'blank' | string;\n\n  // observables exposed to users\n  onClose?: Subject<boolean>;\n  onClick?: Subject<MouseEvent>;\n}\n\nexport type NzNotificationRef = Pick<Required<NzNotificationData>, 'onClose' | 'onClick' | 'messageId'>;\n\n/**\n * @deprecated use `NzNotificationRef` instead\n * @breaking-change 10.0.0\n */\nexport type NzNotificationDataFilled = NzNotificationRef;\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay } from '@angular/cdk/overlay';\nimport { Injectable, Injector, TemplateRef } from '@angular/core';\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\nimport { NzMNService } from 'ng-zorro-antd/message';\n\nimport { NzNotificationContainerComponent } from './notification-container.component';\nimport { NzNotificationServiceModule } from './notification.service.module';\nimport { NzNotificationData, NzNotificationDataOptions, NzNotificationRef } from './typings';\n\nlet notificationId = 0;\n\n@Injectable({\n  providedIn: NzNotificationServiceModule\n})\nexport class NzNotificationService extends NzMNService {\n  protected container: NzNotificationContainerComponent;\n  protected componentPrefix = 'notification-';\n\n  constructor(nzSingletonService: NzSingletonService, overlay: Overlay, injector: Injector) {\n    super(nzSingletonService, overlay, injector);\n  }\n\n  success(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ type: 'success', title, content }, options);\n  }\n\n  error(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ type: 'error', title, content }, options);\n  }\n\n  info(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ type: 'info', title, content }, options);\n  }\n\n  warning(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ type: 'warning', title, content }, options);\n  }\n\n  blank(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ type: 'blank', title, content }, options);\n  }\n\n  create(\n    type: 'success' | 'info' | 'warning' | 'error' | 'blank' | string,\n    title: string,\n    content: string,\n    options?: NzNotificationDataOptions\n  ): NzNotificationRef {\n    return this.createInstance({ type, title, content }, options);\n  }\n\n  template(template: TemplateRef<{}>, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ template }, options);\n  }\n\n  protected generateMessageId(): string {\n    return `${this.componentPrefix}-${notificationId++}`;\n  }\n\n  private createInstance(message: NzNotificationData, options?: NzNotificationDataOptions): NzNotificationRef {\n    this.container = this.withContainer(NzNotificationContainerComponent);\n\n    return this.container.create({\n      ...message,\n      ...{\n        createdAt: new Date(),\n        messageId: this.generateMessageId(),\n        options\n      }\n    });\n  }\n}\n"],"names":[],"mappings":"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"}