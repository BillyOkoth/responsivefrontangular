{"version":3,"file":"ng-zorro-antd-descriptions.js","sources":["ng://ng-zorro-antd/descriptions/descriptions-item.component.ts","ng://ng-zorro-antd/descriptions/descriptions.component.ts","ng://ng-zorro-antd/descriptions/descriptions.module.ts","ng://ng-zorro-antd/descriptions/typings.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputNumber } from 'ng-zorro-antd/core/util';\n\nimport { Subject } from 'rxjs';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-descriptions-item',\n  template: `\n    <ng-template>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n  exportAs: 'nzDescriptionsItem',\n  preserveWhitespaces: false\n})\nexport class NzDescriptionsItemComponent implements OnChanges, OnDestroy {\n  static ngAcceptInputType_nzSpan: BooleanInput;\n\n  @ViewChild(TemplateRef, { static: true }) content: TemplateRef<void>;\n\n  @Input() @InputNumber() nzSpan = 1;\n  @Input() nzTitle: string = '';\n\n  readonly inputChange$ = new Subject<void>();\n\n  ngOnChanges(): void {\n    this.inputChange$.next();\n  }\n\n  ngOnDestroy(): void {\n    this.inputChange$.complete();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  OnChanges,\n  OnDestroy,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { gridResponsiveMap, NzBreakpointEnum, NzBreakpointService } from 'ng-zorro-antd/core/services';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { merge, Subject } from 'rxjs';\nimport { auditTime, startWith, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { NzDescriptionsItemComponent } from './descriptions-item.component';\nimport { NzDescriptionsItemRenderProps, NzDescriptionsLayout, NzDescriptionsSize } from './typings';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'descriptions';\nconst defaultColumnMap: { [key in NzBreakpointEnum]: number } = {\n  xxl: 3,\n  xl: 3,\n  lg: 3,\n  md: 3,\n  sm: 2,\n  xs: 1\n};\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-descriptions',\n  exportAs: 'nzDescriptions',\n  preserveWhitespaces: false,\n  template: `\n    <div *ngIf=\"nzTitle\" class=\"ant-descriptions-title\">\n      <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n    </div>\n    <div class=\"ant-descriptions-view\">\n      <table>\n        <tbody>\n          <ng-container *ngIf=\"nzLayout === 'horizontal'\">\n            <tr class=\"ant-descriptions-row\" *ngFor=\"let row of itemMatrix; let i = index\">\n              <ng-container *ngFor=\"let item of row; let isLast = last\">\n                <!-- Horizontal & NOT Bordered -->\n                <ng-container *ngIf=\"!nzBordered\">\n                  <td class=\"ant-descriptions-item\" [colSpan]=\"item.span\">\n                    <span class=\"ant-descriptions-item-label\" [class.ant-descriptions-item-colon]=\"nzColon\">{{ item.title }}</span>\n                    <span class=\"ant-descriptions-item-content\">\n                      <ng-template [ngTemplateOutlet]=\"item.content\"></ng-template>\n                    </span>\n                  </td>\n                </ng-container>\n                <!-- Horizontal & Bordered -->\n                <ng-container *ngIf=\"nzBordered\">\n                  <td class=\"ant-descriptions-item-label\" *nzStringTemplateOutlet=\"item.title\">\n                    {{ item.title }}\n                  </td>\n                  <td class=\"ant-descriptions-item-content\" [colSpan]=\"item.span * 2 - 1\">\n                    <ng-template [ngTemplateOutlet]=\"item.content\"></ng-template>\n                  </td>\n                </ng-container>\n              </ng-container>\n            </tr>\n          </ng-container>\n\n          <ng-container *ngIf=\"nzLayout === 'vertical'\">\n            <!-- Vertical & NOT Bordered -->\n            <ng-container *ngIf=\"!nzBordered\">\n              <ng-container *ngFor=\"let row of itemMatrix; let i = index\">\n                <tr class=\"ant-descriptions-row\">\n                  <ng-container *ngFor=\"let item of row; let isLast = last\">\n                    <td class=\"ant-descriptions-item\" [colSpan]=\"item.span\">\n                      <span class=\"ant-descriptions-item-label\" [class.ant-descriptions-item-colon]=\"nzColon\">{{ item.title }}</span>\n                    </td>\n                  </ng-container>\n                </tr>\n                <tr class=\"ant-descriptions-row\">\n                  <ng-container *ngFor=\"let item of row; let isLast = last\">\n                    <td class=\"ant-descriptions-item\" [colSpan]=\"item.span\">\n                      <span class=\"ant-descriptions-item-content\">\n                        <ng-template [ngTemplateOutlet]=\"item.content\"></ng-template>\n                      </span>\n                    </td>\n                  </ng-container>\n                </tr>\n              </ng-container>\n            </ng-container>\n            <!-- Vertical & Bordered -->\n            <ng-container *ngIf=\"nzBordered\">\n              <ng-container *ngFor=\"let row of itemMatrix; let i = index\">\n                <tr class=\"ant-descriptions-row\">\n                  <ng-container *ngFor=\"let item of row; let isLast = last\">\n                    <td class=\"ant-descriptions-item-label\" [colSpan]=\"item.span\">\n                      {{ item.title }}\n                    </td>\n                  </ng-container>\n                </tr>\n                <tr class=\"ant-descriptions-row\">\n                  <ng-container *ngFor=\"let item of row; let isLast = last\">\n                    <td class=\"ant-descriptions-item-content\" [colSpan]=\"item.span\">\n                      <ng-template [ngTemplateOutlet]=\"item.content\"></ng-template>\n                    </td>\n                  </ng-container>\n                </tr>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n  `,\n  host: {\n    class: 'ant-descriptions',\n    '[class.ant-descriptions-bordered]': 'nzBordered',\n    '[class.ant-descriptions-middle]': 'nzSize === \"middle\"',\n    '[class.ant-descriptions-small]': 'nzSize === \"small\"'\n  }\n})\nexport class NzDescriptionsComponent implements OnChanges, OnDestroy, AfterContentInit {\n  static ngAcceptInputType_nzBordered: BooleanInput;\n  static ngAcceptInputType_nzColon: BooleanInput;\n\n  @ContentChildren(NzDescriptionsItemComponent) items: QueryList<NzDescriptionsItemComponent>;\n\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) nzBordered: boolean;\n  @Input() nzLayout: NzDescriptionsLayout = 'horizontal';\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, defaultColumnMap) nzColumn: number | { [key in NzBreakpointEnum]: number };\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'default') nzSize: NzDescriptionsSize;\n  @Input() nzTitle: string | TemplateRef<void> = '';\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, true) @InputBoolean() nzColon: boolean;\n\n  itemMatrix: NzDescriptionsItemRenderProps[][] = [];\n  realColumn = 3;\n\n  private breakpoint: NzBreakpointEnum = NzBreakpointEnum.md;\n  private destroy$ = new Subject<void>();\n\n  constructor(public nzConfigService: NzConfigService, private cdr: ChangeDetectorRef, private breakpointService: NzBreakpointService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzColumn) {\n      this.prepareMatrix();\n    }\n  }\n\n  ngAfterContentInit(): void {\n    const contentChange$ = this.items.changes.pipe(startWith(this.items), takeUntil(this.destroy$));\n\n    merge(\n      contentChange$,\n      contentChange$.pipe(switchMap(() => merge(...this.items.map(i => i.inputChange$)).pipe(auditTime(16)))),\n      this.breakpointService.subscribe(gridResponsiveMap).pipe(tap(bp => (this.breakpoint = bp)))\n    )\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.prepareMatrix();\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * Prepare the render matrix according to description items' spans.\n   */\n  private prepareMatrix(): void {\n    if (!this.items) {\n      return;\n    }\n\n    let currentRow: NzDescriptionsItemRenderProps[] = [];\n    let width = 0;\n\n    const column = (this.realColumn = this.getColumn());\n    const items = this.items.toArray();\n    const length = items.length;\n    const matrix: NzDescriptionsItemRenderProps[][] = [];\n    const flushRow = () => {\n      matrix.push(currentRow);\n      currentRow = [];\n      width = 0;\n    };\n\n    for (let i = 0; i < length; i++) {\n      const item = items[i];\n      const { nzTitle: title, content, nzSpan: span } = item;\n\n      width += span;\n\n      // If the last item make the row's length exceeds `nzColumn`, the last\n      // item should take all the space left. This logic is implemented in the template.\n      // Warn user about that.\n      if (width >= column) {\n        if (width > column) {\n          warn(`\"nzColumn\" is ${column} but we have row length ${width}`);\n        }\n        currentRow.push({ title, content, span: column - (width - span) });\n        flushRow();\n      } else if (i === length - 1) {\n        currentRow.push({ title, content, span: column - (width - span) });\n        flushRow();\n      } else {\n        currentRow.push({ title, content, span });\n      }\n    }\n\n    this.itemMatrix = matrix;\n  }\n\n  private getColumn(): number {\n    if (typeof this.nzColumn !== 'number') {\n      return this.nzColumn[this.breakpoint];\n    }\n\n    return this.nzColumn;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n\nimport { NzDescriptionsItemComponent } from './descriptions-item.component';\nimport { NzDescriptionsComponent } from './descriptions.component';\n\n@NgModule({\n  imports: [CommonModule, NzOutletModule, PlatformModule],\n  declarations: [NzDescriptionsComponent, NzDescriptionsItemComponent],\n  exports: [NzDescriptionsComponent, NzDescriptionsItemComponent]\n})\nexport class NzDescriptionsModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef } from '@angular/core';\n\nexport type NzDescriptionsSize = 'default' | 'middle' | 'small';\n\nexport type NzDescriptionsLayout = 'horizontal' | 'vertical';\n\nexport interface NzDescriptionsItemRenderProps {\n  title: string | TemplateRef<void>;\n  span: number;\n  content: TemplateRef<void>;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;IAcA;QAiB0B,WAAM,GAAG,CAAC,CAAC;QAC1B,YAAO,GAAW,EAAE,CAAC;QAErB,iBAAY,GAAG,IAAI,OAAO,EAAQ,CAAC;KAS7C;;;;IAPC,iDAAW;;;IAAX;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;KAC1B;;;;IAED,iDAAW;;;IAAX;QACE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;KAC9B;;gBA5BF,SAAS,SAAC;oBACT,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,QAAQ,EAAE,sBAAsB;oBAChC,QAAQ,EAAE,8EAIT;oBACD,QAAQ,EAAE,oBAAoB;oBAC9B,mBAAmB,EAAE,KAAK;iBAC3B;;;0BAIE,SAAS,SAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;yBAEvC,KAAK;0BACL,KAAK;;IADkB;QAAd,WAAW,EAAE;;+DAAY;IAYrC,kCAAC;CA7BD,IA6BC;;;IAhBC,qDAA8C;;IAE9C,8CAAqE;;IAErE,6CAAmC;;IACnC,8CAA8B;;IAE9B,mDAA4C;;;;;;;;;ICDxC,wBAAwB,GAAG,cAAc;;IACzC,gBAAgB,GAA0C;IAC9D,GAAG,EAAE,CAAC;IACN,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;CACN;;IAgHC,iCAAmB,eAAgC,EAAU,GAAsB,EAAU,iBAAsC;QAAhH,oBAAe,GAAf,eAAe,CAAiB;QAAU,QAAG,GAAH,GAAG,CAAmB;QAAU,sBAAiB,GAAjB,iBAAiB,CAAqB;QAZ1H,aAAQ,GAAyB,YAAY,CAAC;QAG9C,YAAO,GAA+B,EAAE,CAAC;QAGlD,eAAU,GAAsC,EAAE,CAAC;QACnD,eAAU,GAAG,CAAC,CAAC;QAEP,eAAU,GAAqB,gBAAgB,CAAC,EAAE,CAAC;QACnD,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;KAEgG;;;;;IAEvI,6CAAW;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,OAAO,CAAC,QAAQ,EAAE;YACpB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;;;;IAED,oDAAkB;;;IAAlB;QAAA,iBAaC;;YAZO,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE/F,KAAK,CACH,cAAc,EACd,cAAc,CAAC,IAAI,CAAC,SAAS;;;QAAC,cAAM,OAAA,KAAK,wBAAI,KAAI,CAAC,KAAK,CAAC,GAAG;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,YAAY,GAAA,EAAC,GAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,GAAA,EAAC,CAAC,EACvG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,GAAG;;;;QAAC,UAAA,EAAE,IAAI,QAAC,KAAI,CAAC,UAAU,GAAG,EAAE,IAAC,EAAC,CAAC,CAC5F;aACE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS;;;QAAC;YACT,KAAI,CAAC,aAAa,EAAE,CAAC;YACrB,KAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;SACzB,EAAC,CAAC;KACN;;;;IAED,6CAAW;;;IAAX;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC1B;;;;;;;;;IAKO,+CAAa;;;;;IAArB;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,OAAO;SACR;;YAEG,UAAU,GAAoC,EAAE;;YAChD,KAAK,GAAG,CAAC;;YAEP,MAAM,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;;YAC7C,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;;YAC5B,MAAM,GAAG,KAAK,CAAC,MAAM;;YACrB,MAAM,GAAsC,EAAE;;YAC9C,QAAQ;;;QAAG;YACf,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACxB,UAAU,GAAG,EAAE,CAAC;YAChB,KAAK,GAAG,CAAC,CAAC;SACX,CAAA;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;;gBACzB,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;YACb,IAAA,oBAAc,EAAE,sBAAO,EAAE,kBAAY;YAE7C,KAAK,IAAI,IAAI,CAAC;;;;YAKd,IAAI,KAAK,IAAI,MAAM,EAAE;gBACnB,IAAI,KAAK,GAAG,MAAM,EAAE;oBAClB,IAAI,CAAC,qBAAiB,MAAM,gCAA2B,KAAO,CAAC,CAAC;iBACjE;gBACD,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,OAAA,EAAE,OAAO,SAAA,EAAE,IAAI,EAAE,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;gBACnE,QAAQ,EAAE,CAAC;aACZ;iBAAM,IAAI,CAAC,KAAK,MAAM,GAAG,CAAC,EAAE;gBAC3B,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,OAAA,EAAE,OAAO,SAAA,EAAE,IAAI,EAAE,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;gBACnE,QAAQ,EAAE,CAAC;aACZ;iBAAM;gBACL,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,OAAA,EAAE,OAAO,SAAA,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC;aAC3C;SACF;QAED,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;KAC1B;;;;;IAEO,2CAAS;;;;IAAjB;QACE,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACrC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACvC;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;gBA/LF,SAAS,SAAC;oBACT,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,QAAQ,EAAE,iBAAiB;oBAC3B,QAAQ,EAAE,gBAAgB;oBAC1B,mBAAmB,EAAE,KAAK;oBAC1B,QAAQ,EAAE,kzHA6ET;oBACD,IAAI,EAAE;wBACJ,KAAK,EAAE,kBAAkB;wBACzB,mCAAmC,EAAE,YAAY;wBACjD,iCAAiC,EAAE,qBAAqB;wBACxD,gCAAgC,EAAE,oBAAoB;qBACvD;iBACF;;;;gBA/GQ,eAAe;gBAXtB,iBAAiB;gBAa2B,mBAAmB;;;wBAkH9D,eAAe,SAAC,2BAA2B;6BAE3C,KAAK;2BACL,KAAK;2BACL,KAAK;yBACL,KAAK;0BACL,KAAK;0BACL,KAAK;;IALgE;QAA5D,YAAY,EAAE,EAAE,UAAU,CAAC,wBAAwB,EAAE,KAAK,CAAC;;+DAAqB;IAEzB;QAAvD,UAAU,CAAC,wBAAwB,EAAE,gBAAgB,CAAC;;6DAA0D;IAChE;QAAhD,UAAU,CAAC,wBAAwB,EAAE,SAAS,CAAC;;2DAA4B;IAEhB;QAA3D,UAAU,CAAC,wBAAwB,EAAE,IAAI,CAAC,EAAE,YAAY,EAAE;;4DAAkB;IA0FxF,8BAAC;CAhMD,IAgMC;;;IApGC,qDAAkD;;IAClD,kDAA+C;;IAE/C,wCAA4F;;IAE5F,6CAA0F;;IAC1F,2CAAuD;;IACvD,2CAA0H;;IAC1H,yCAAqF;;IACrF,0CAAkD;;IAClD,0CAAsF;;IAEtF,6CAAmD;;IACnD,6CAAe;;;;;IAEf,6CAA2D;;;;;IAC3D,2CAAuC;;IAE3B,kDAAuC;;;;;IAAE,sCAA8B;;;;;IAAE,oDAA8C;;;;;;;;;IC1IrI;KAKoC;;gBALnC,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,cAAc,EAAE,cAAc,CAAC;oBACvD,YAAY,EAAE,CAAC,uBAAuB,EAAE,2BAA2B,CAAC;oBACpE,OAAO,EAAE,CAAC,uBAAuB,EAAE,2BAA2B,CAAC;iBAChE;;IACkC,2BAAC;CALpC;;;;;;;;;;;;;;;;;4CCGC;;;IAHC,8CAAkC;;IAClC,6CAAa;;IACb,gDAA2B;;;;;;;;;;;;;;;;;"}