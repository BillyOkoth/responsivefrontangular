{"version":3,"file":"ng-zorro-antd-breadcrumb.js","sources":["ng://ng-zorro-antd/breadcrumb/breadcrumb.component.ts","ng://ng-zorro-antd/breadcrumb/breadcrumb-item.component.ts","ng://ng-zorro-antd/breadcrumb/breadcrumb-separator.component.ts","ng://ng-zorro-antd/breadcrumb/breadcrumb.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Params, PRIMARY_OUTLET, Router } from '@angular/router';\nimport { PREFIX } from 'ng-zorro-antd/core/logger';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\n\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { filter, startWith, takeUntil } from 'rxjs/operators';\n\nexport interface BreadcrumbOption {\n  label: string;\n  params: Params;\n  url: string;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-breadcrumb',\n  exportAs: 'nzBreadcrumb',\n  preserveWhitespaces: false,\n  template: `\n    <ng-content></ng-content>\n    <ng-container *ngIf=\"nzAutoGenerate\">\n      <nz-breadcrumb-item *ngFor=\"let breadcrumb of breadcrumbs\">\n        <a [attr.href]=\"breadcrumb.url\" (click)=\"navigate(breadcrumb.url, $event)\">{{ breadcrumb.label }}</a>\n      </nz-breadcrumb-item>\n    </ng-container>\n  `\n})\nexport class NzBreadCrumbComponent implements OnInit, OnDestroy {\n  static ngAcceptInputType_nzAutoGenerate: BooleanInput;\n\n  @Input() @InputBoolean() nzAutoGenerate = false;\n  @Input() nzSeparator: string | TemplateRef<void> | null = '/';\n  @Input() nzRouteLabel: string = 'breadcrumb';\n\n  breadcrumbs: BreadcrumbOption[] | undefined = [];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private injector: Injector,\n    private ngZone: NgZone,\n    private cdr: ChangeDetectorRef,\n    elementRef: ElementRef,\n    renderer: Renderer2\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-breadcrumb');\n  }\n\n  ngOnInit(): void {\n    if (this.nzAutoGenerate) {\n      this.registerRouterChange();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  navigate(url: string, e: MouseEvent): void {\n    e.preventDefault();\n\n    this.ngZone.run(() => this.injector.get(Router).navigateByUrl(url).then()).then();\n  }\n\n  private registerRouterChange(): void {\n    try {\n      const router = this.injector.get(Router);\n      const activatedRoute = this.injector.get(ActivatedRoute);\n      router.events\n        .pipe(\n          filter(e => e instanceof NavigationEnd),\n          takeUntil(this.destroy$),\n          startWith(true) // Trigger initial render.\n        )\n        .subscribe(() => {\n          this.breadcrumbs = this.getBreadcrumbs(activatedRoute.root);\n          this.cdr.markForCheck();\n        });\n    } catch (e) {\n      throw new Error(`${PREFIX} You should import RouterModule if you want to use 'NzAutoGenerate'.`);\n    }\n  }\n\n  private getBreadcrumbs(route: ActivatedRoute, url: string = '', breadcrumbs: BreadcrumbOption[] = []): BreadcrumbOption[] | undefined {\n    const children: ActivatedRoute[] = route.children;\n    // If there's no sub root, then stop the recurse and returns the generated breadcrumbs.\n    if (children.length === 0) {\n      return breadcrumbs;\n    }\n    for (const child of children) {\n      if (child.outlet === PRIMARY_OUTLET) {\n        // Only parse components in primary router-outlet (in another word, router-outlet without a specific name).\n        // Parse this layer and generate a breadcrumb item.\n        const routeURL: string = child.snapshot.url.map(segment => segment.path).join('/');\n        const nextUrl = url + `/${routeURL}`;\n        const breadcrumbLabel = child.snapshot.data[this.nzRouteLabel];\n        // If have data, go to generate a breadcrumb for it.\n        if (routeURL && breadcrumbLabel) {\n          const breadcrumb: BreadcrumbOption = {\n            label: breadcrumbLabel,\n            params: child.snapshot.params,\n            url: nextUrl\n          };\n          breadcrumbs.push(breadcrumb);\n        }\n        return this.getBreadcrumbs(child, nextUrl, breadcrumbs);\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { NzDropdownMenuComponent } from 'ng-zorro-antd/dropdown';\n\nimport { NzBreadCrumbComponent } from './breadcrumb.component';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-breadcrumb-item',\n  exportAs: 'nzBreadcrumbItem',\n  preserveWhitespaces: false,\n  template: `\n    <ng-container *ngIf=\"!!nzOverlay; else noMenuTpl\">\n      <span class=\"ant-breadcrumb-overlay-link\" nz-dropdown [nzDropdownMenu]=\"nzOverlay\">\n        <ng-template [ngTemplateOutlet]=\"noMenuTpl\"></ng-template>\n        <i *ngIf=\"!!nzOverlay\" nz-icon nzType=\"down\"></i>\n      </span>\n    </ng-container>\n\n    <ng-template #noMenuTpl>\n      <span class=\"ant-breadcrumb-link\">\n        <ng-content></ng-content>\n      </span>\n    </ng-template>\n\n    <span class=\"ant-breadcrumb-separator\" *ngIf=\"nzBreadCrumbComponent.nzSeparator\">\n      <ng-container *nzStringTemplateOutlet=\"nzBreadCrumbComponent.nzSeparator\">\n        {{ nzBreadCrumbComponent.nzSeparator }}\n      </ng-container>\n    </span>\n  `\n})\nexport class NzBreadCrumbItemComponent {\n  /**\n   * Dropdown content of a breadcrumb item.\n   */\n  @Input() nzOverlay?: NzDropdownMenuComponent;\n\n  constructor(public nzBreadCrumbComponent: NzBreadCrumbComponent) {}\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'nz-breadcrumb-separator',\n  exportAs: 'nzBreadcrumbSeparator',\n  template: `\n    <span class=\"ant-breadcrumb-separator\">\n      <ng-content></ng-content>\n    </span>\n  `\n})\nexport class NzBreadCrumbSeparatorComponent {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzBreadCrumbItemComponent } from './breadcrumb-item.component';\nimport { NzBreadCrumbSeparatorComponent } from './breadcrumb-separator.component';\nimport { NzBreadCrumbComponent } from './breadcrumb.component';\n\n@NgModule({\n  imports: [CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule],\n  declarations: [NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent],\n  exports: [NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent]\n})\nexport class NzBreadCrumbModule {}\n"],"names":[],"mappings":"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"}