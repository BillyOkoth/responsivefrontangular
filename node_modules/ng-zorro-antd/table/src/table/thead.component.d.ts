/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { AfterContentInit, AfterViewInit, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, QueryList, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';
import { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';
import { NzThAddOnComponent } from '../cell/th-addon.component';
import { NzTableDataService } from '../table-data.service';
import { NzTableStyleService } from '../table-style.service';
import { NzTrDirective } from './tr.directive';
import * as ɵngcc0 from '@angular/core';
export declare class NzTheadComponent implements AfterContentInit, OnDestroy, AfterViewInit, OnInit, OnChanges {
    private elementRef;
    private renderer;
    private nzTableStyleService;
    private nzTableDataService;
    static ngAcceptInputType_nzSingleSort: BooleanInput;
    private destroy$;
    isInsideTable: boolean;
    templateRef: TemplateRef<NzSafeAny>;
    listOfNzTrDirective: QueryList<NzTrDirective>;
    listOfNzThAddOnComponent: QueryList<NzThAddOnComponent>;
    /** @deprecated use nzSortFn and nzSortPriority instead **/
    nzSingleSort: boolean;
    /** @deprecated use nzSortOrderChange instead **/
    readonly nzSortChange: EventEmitter<{
        key: any;
        value: import("../table.types").NzTableSortOrder;
    }>;
    readonly nzSortOrderChange: EventEmitter<{
        key: any;
        value: import("../table.types").NzTableSortOrder;
    }>;
    constructor(elementRef: ElementRef, renderer: Renderer2, nzTableStyleService: NzTableStyleService, nzTableDataService: NzTableDataService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterContentInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzTheadComponent, [null, null, { optional: true; }, { optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzTheadComponent, "thead:not(.ant-table-thead)", never, { "nzSingleSort": "nzSingleSort"; }, { "nzSortChange": "nzSortChange"; "nzSortOrderChange": "nzSortOrderChange"; }, ["listOfNzTrDirective", "listOfNzThAddOnComponent"], ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlYWQuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRoZWFkLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBbGliYWJhLmNvbSBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgQWZ0ZXJDb250ZW50SW5pdCwgQWZ0ZXJWaWV3SW5pdCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBRdWVyeUxpc3QsIFJlbmRlcmVyMiwgU2ltcGxlQ2hhbmdlcywgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJvb2xlYW5JbnB1dCwgTnpTYWZlQW55IH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcbmltcG9ydCB7IE56VGhBZGRPbkNvbXBvbmVudCB9IGZyb20gJy4uL2NlbGwvdGgtYWRkb24uY29tcG9uZW50JztcbmltcG9ydCB7IE56VGFibGVEYXRhU2VydmljZSB9IGZyb20gJy4uL3RhYmxlLWRhdGEuc2VydmljZSc7XG5pbXBvcnQgeyBOelRhYmxlU3R5bGVTZXJ2aWNlIH0gZnJvbSAnLi4vdGFibGUtc3R5bGUuc2VydmljZSc7XG5pbXBvcnQgeyBOelRyRGlyZWN0aXZlIH0gZnJvbSAnLi90ci5kaXJlY3RpdmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpUaGVhZENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSwgQWZ0ZXJWaWV3SW5pdCwgT25Jbml0LCBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgZWxlbWVudFJlZjtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgbnpUYWJsZVN0eWxlU2VydmljZTtcbiAgICBwcml2YXRlIG56VGFibGVEYXRhU2VydmljZTtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpTaW5nbGVTb3J0OiBCb29sZWFuSW5wdXQ7XG4gICAgcHJpdmF0ZSBkZXN0cm95JDtcbiAgICBpc0luc2lkZVRhYmxlOiBib29sZWFuO1xuICAgIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxOelNhZmVBbnk+O1xuICAgIGxpc3RPZk56VHJEaXJlY3RpdmU6IFF1ZXJ5TGlzdDxOelRyRGlyZWN0aXZlPjtcbiAgICBsaXN0T2ZOelRoQWRkT25Db21wb25lbnQ6IFF1ZXJ5TGlzdDxOelRoQWRkT25Db21wb25lbnQ+O1xuICAgIC8qKiBAZGVwcmVjYXRlZCB1c2UgbnpTb3J0Rm4gYW5kIG56U29ydFByaW9yaXR5IGluc3RlYWQgKiovXG4gICAgbnpTaW5nbGVTb3J0OiBib29sZWFuO1xuICAgIC8qKiBAZGVwcmVjYXRlZCB1c2UgbnpTb3J0T3JkZXJDaGFuZ2UgaW5zdGVhZCAqKi9cbiAgICByZWFkb25seSBuelNvcnRDaGFuZ2U6IEV2ZW50RW1pdHRlcjx7XG4gICAgICAgIGtleTogYW55O1xuICAgICAgICB2YWx1ZTogaW1wb3J0KFwiLi4vdGFibGUudHlwZXNcIikuTnpUYWJsZVNvcnRPcmRlcjtcbiAgICB9PjtcbiAgICByZWFkb25seSBuelNvcnRPcmRlckNoYW5nZTogRXZlbnRFbWl0dGVyPHtcbiAgICAgICAga2V5OiBhbnk7XG4gICAgICAgIHZhbHVlOiBpbXBvcnQoXCIuLi90YWJsZS50eXBlc1wiKS5OelRhYmxlU29ydE9yZGVyO1xuICAgIH0+O1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIG56VGFibGVTdHlsZVNlcnZpY2U6IE56VGFibGVTdHlsZVNlcnZpY2UsIG56VGFibGVEYXRhU2VydmljZTogTnpUYWJsZURhdGFTZXJ2aWNlKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=