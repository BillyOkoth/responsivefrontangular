/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { TemplateRef } from '@angular/core';
import { NzSafeAny } from 'ng-zorro-antd/core/types';
import { ReplaySubject } from 'rxjs';
import { NzThMeasureDirective } from './cell/th-measure.directive';
import * as ɵngcc0 from '@angular/core';
export declare class NzTableStyleService {
    theadTemplate$: ReplaySubject<TemplateRef<any>>;
    hasFixLeft$: ReplaySubject<boolean>;
    hasFixRight$: ReplaySubject<boolean>;
    hostWidth$: ReplaySubject<number>;
    columnCount$: ReplaySubject<number>;
    showEmpty$: ReplaySubject<boolean>;
    noResult$: ReplaySubject<string | TemplateRef<any> | undefined>;
    private listOfThWidthConfigPx$;
    private tableWidthConfigPx$;
    private manualWidthConfigPx$;
    private listOfAutoWidthPx$;
    listOfListOfThWidthPx$: import("rxjs").Observable<import("./table.types").NzTableSortOrder[]>;
    listOfMeasureColumn$: ReplaySubject<string[]>;
    listOfListOfThWidth$: import("rxjs").Observable<number[]>;
    enableAutoMeasure$: ReplaySubject<boolean>;
    setTheadTemplate(template: TemplateRef<NzSafeAny>): void;
    setHasFixLeft(hasFixLeft: boolean): void;
    setHasFixRight(hasFixRight: boolean): void;
    setTableWidthConfig(widthConfig: Array<string | null>): void;
    setListOfTh(listOfTh: NzThMeasureDirective[]): void;
    setListOfMeasureColumn(listOfTh: NzThMeasureDirective[]): void;
    setListOfAutoWidth(listOfAutoWidth: number[]): void;
    setShowEmpty(showEmpty: boolean): void;
    setNoResult(noResult: string | TemplateRef<NzSafeAny> | undefined): void;
    setScroll(scrollX: string | null, scrollY: string | null): void;
    constructor();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzTableStyleService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NzTableStyleService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtc3R5bGUuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJ0YWJsZS1zdHlsZS5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTnpTYWZlQW55IH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcbmltcG9ydCB7IFJlcGxheVN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IE56VGhNZWFzdXJlRGlyZWN0aXZlIH0gZnJvbSAnLi9jZWxsL3RoLW1lYXN1cmUuZGlyZWN0aXZlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE56VGFibGVTdHlsZVNlcnZpY2Uge1xuICAgIHRoZWFkVGVtcGxhdGUkOiBSZXBsYXlTdWJqZWN0PFRlbXBsYXRlUmVmPGFueT4+O1xuICAgIGhhc0ZpeExlZnQkOiBSZXBsYXlTdWJqZWN0PGJvb2xlYW4+O1xuICAgIGhhc0ZpeFJpZ2h0JDogUmVwbGF5U3ViamVjdDxib29sZWFuPjtcbiAgICBob3N0V2lkdGgkOiBSZXBsYXlTdWJqZWN0PG51bWJlcj47XG4gICAgY29sdW1uQ291bnQkOiBSZXBsYXlTdWJqZWN0PG51bWJlcj47XG4gICAgc2hvd0VtcHR5JDogUmVwbGF5U3ViamVjdDxib29sZWFuPjtcbiAgICBub1Jlc3VsdCQ6IFJlcGxheVN1YmplY3Q8c3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55PiB8IHVuZGVmaW5lZD47XG4gICAgcHJpdmF0ZSBsaXN0T2ZUaFdpZHRoQ29uZmlnUHgkO1xuICAgIHByaXZhdGUgdGFibGVXaWR0aENvbmZpZ1B4JDtcbiAgICBwcml2YXRlIG1hbnVhbFdpZHRoQ29uZmlnUHgkO1xuICAgIHByaXZhdGUgbGlzdE9mQXV0b1dpZHRoUHgkO1xuICAgIGxpc3RPZkxpc3RPZlRoV2lkdGhQeCQ6IGltcG9ydChcInJ4anNcIikuT2JzZXJ2YWJsZTxpbXBvcnQoXCIuL3RhYmxlLnR5cGVzXCIpLk56VGFibGVTb3J0T3JkZXJbXT47XG4gICAgbGlzdE9mTWVhc3VyZUNvbHVtbiQ6IFJlcGxheVN1YmplY3Q8c3RyaW5nW10+O1xuICAgIGxpc3RPZkxpc3RPZlRoV2lkdGgkOiBpbXBvcnQoXCJyeGpzXCIpLk9ic2VydmFibGU8bnVtYmVyW10+O1xuICAgIGVuYWJsZUF1dG9NZWFzdXJlJDogUmVwbGF5U3ViamVjdDxib29sZWFuPjtcbiAgICBzZXRUaGVhZFRlbXBsYXRlKHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxOelNhZmVBbnk+KTogdm9pZDtcbiAgICBzZXRIYXNGaXhMZWZ0KGhhc0ZpeExlZnQ6IGJvb2xlYW4pOiB2b2lkO1xuICAgIHNldEhhc0ZpeFJpZ2h0KGhhc0ZpeFJpZ2h0OiBib29sZWFuKTogdm9pZDtcbiAgICBzZXRUYWJsZVdpZHRoQ29uZmlnKHdpZHRoQ29uZmlnOiBBcnJheTxzdHJpbmcgfCBudWxsPik6IHZvaWQ7XG4gICAgc2V0TGlzdE9mVGgobGlzdE9mVGg6IE56VGhNZWFzdXJlRGlyZWN0aXZlW10pOiB2b2lkO1xuICAgIHNldExpc3RPZk1lYXN1cmVDb2x1bW4obGlzdE9mVGg6IE56VGhNZWFzdXJlRGlyZWN0aXZlW10pOiB2b2lkO1xuICAgIHNldExpc3RPZkF1dG9XaWR0aChsaXN0T2ZBdXRvV2lkdGg6IG51bWJlcltdKTogdm9pZDtcbiAgICBzZXRTaG93RW1wdHkoc2hvd0VtcHR5OiBib29sZWFuKTogdm9pZDtcbiAgICBzZXROb1Jlc3VsdChub1Jlc3VsdDogc3RyaW5nIHwgVGVtcGxhdGVSZWY8TnpTYWZlQW55PiB8IHVuZGVmaW5lZCk6IHZvaWQ7XG4gICAgc2V0U2Nyb2xsKHNjcm9sbFg6IHN0cmluZyB8IG51bGwsIHNjcm9sbFk6IHN0cmluZyB8IG51bGwpOiB2b2lkO1xuICAgIGNvbnN0cnVjdG9yKCk7XG59XG4iXX0=