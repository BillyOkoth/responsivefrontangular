{"version":3,"file":"ng-zorro-antd-breadcrumb.js","sources":["ng:/ng-zorro-antd/breadcrumb/breadcrumb.component.ts","ng:/ng-zorro-antd/breadcrumb/breadcrumb-item.component.ts","ng:/ng-zorro-antd/breadcrumb/breadcrumb-separator.component.ts","ng:/ng-zorro-antd/breadcrumb/breadcrumb.module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Params, PRIMARY_OUTLET, Router } from '@angular/router';\nimport { PREFIX } from 'ng-zorro-antd/core/logger';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\n\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { filter, startWith, takeUntil } from 'rxjs/operators';\n\nexport interface BreadcrumbOption {\n  label: string;\n  params: Params;\n  url: string;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-breadcrumb',\n  exportAs: 'nzBreadcrumb',\n  preserveWhitespaces: false,\n  template: `\n    <ng-content></ng-content>\n    <ng-container *ngIf=\"nzAutoGenerate\">\n      <nz-breadcrumb-item *ngFor=\"let breadcrumb of breadcrumbs\">\n        <a [attr.href]=\"breadcrumb.url\" (click)=\"navigate(breadcrumb.url, $event)\">{{ breadcrumb.label }}</a>\n      </nz-breadcrumb-item>\n    </ng-container>\n  `\n})\nexport class NzBreadCrumbComponent implements OnInit, OnDestroy {\n  static ngAcceptInputType_nzAutoGenerate: BooleanInput;\n\n  @Input() @InputBoolean() nzAutoGenerate = false;\n  @Input() nzSeparator: string | TemplateRef<void> | null = '/';\n  @Input() nzRouteLabel: string = 'breadcrumb';\n\n  breadcrumbs: BreadcrumbOption[] | undefined = [];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private injector: Injector,\n    private ngZone: NgZone,\n    private cdr: ChangeDetectorRef,\n    elementRef: ElementRef,\n    renderer: Renderer2\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-breadcrumb');\n  }\n\n  ngOnInit(): void {\n    if (this.nzAutoGenerate) {\n      this.registerRouterChange();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  navigate(url: string, e: MouseEvent): void {\n    e.preventDefault();\n\n    this.ngZone.run(() => this.injector.get(Router).navigateByUrl(url).then()).then();\n  }\n\n  private registerRouterChange(): void {\n    try {\n      const router = this.injector.get(Router);\n      const activatedRoute = this.injector.get(ActivatedRoute);\n      router.events\n        .pipe(\n          filter(e => e instanceof NavigationEnd),\n          takeUntil(this.destroy$),\n          startWith(true) // Trigger initial render.\n        )\n        .subscribe(() => {\n          this.breadcrumbs = this.getBreadcrumbs(activatedRoute.root);\n          this.cdr.markForCheck();\n        });\n    } catch (e) {\n      throw new Error(`${PREFIX} You should import RouterModule if you want to use 'NzAutoGenerate'.`);\n    }\n  }\n\n  private getBreadcrumbs(route: ActivatedRoute, url: string = '', breadcrumbs: BreadcrumbOption[] = []): BreadcrumbOption[] | undefined {\n    const children: ActivatedRoute[] = route.children;\n    // If there's no sub root, then stop the recurse and returns the generated breadcrumbs.\n    if (children.length === 0) {\n      return breadcrumbs;\n    }\n    for (const child of children) {\n      if (child.outlet === PRIMARY_OUTLET) {\n        // Only parse components in primary router-outlet (in another word, router-outlet without a specific name).\n        // Parse this layer and generate a breadcrumb item.\n        const routeURL: string = child.snapshot.url.map(segment => segment.path).join('/');\n        const nextUrl = url + `/${routeURL}`;\n        const breadcrumbLabel = child.snapshot.data[this.nzRouteLabel];\n        // If have data, go to generate a breadcrumb for it.\n        if (routeURL && breadcrumbLabel) {\n          const breadcrumb: BreadcrumbOption = {\n            label: breadcrumbLabel,\n            params: child.snapshot.params,\n            url: nextUrl\n          };\n          breadcrumbs.push(breadcrumb);\n        }\n        return this.getBreadcrumbs(child, nextUrl, breadcrumbs);\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { NzDropdownMenuComponent } from 'ng-zorro-antd/dropdown';\n\nimport { NzBreadCrumbComponent } from './breadcrumb.component';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-breadcrumb-item',\n  exportAs: 'nzBreadcrumbItem',\n  preserveWhitespaces: false,\n  template: `\n    <ng-container *ngIf=\"!!nzOverlay; else noMenuTpl\">\n      <span class=\"ant-breadcrumb-overlay-link\" nz-dropdown [nzDropdownMenu]=\"nzOverlay\">\n        <ng-template [ngTemplateOutlet]=\"noMenuTpl\"></ng-template>\n        <i *ngIf=\"!!nzOverlay\" nz-icon nzType=\"down\"></i>\n      </span>\n    </ng-container>\n\n    <ng-template #noMenuTpl>\n      <span class=\"ant-breadcrumb-link\">\n        <ng-content></ng-content>\n      </span>\n    </ng-template>\n\n    <span class=\"ant-breadcrumb-separator\" *ngIf=\"nzBreadCrumbComponent.nzSeparator\">\n      <ng-container *nzStringTemplateOutlet=\"nzBreadCrumbComponent.nzSeparator\">\n        {{ nzBreadCrumbComponent.nzSeparator }}\n      </ng-container>\n    </span>\n  `\n})\nexport class NzBreadCrumbItemComponent {\n  /**\n   * Dropdown content of a breadcrumb item.\n   */\n  @Input() nzOverlay?: NzDropdownMenuComponent;\n\n  constructor(public nzBreadCrumbComponent: NzBreadCrumbComponent) {}\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'nz-breadcrumb-separator',\n  exportAs: 'nzBreadcrumbSeparator',\n  template: `\n    <span class=\"ant-breadcrumb-separator\">\n      <ng-content></ng-content>\n    </span>\n  `\n})\nexport class NzBreadCrumbSeparatorComponent {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzBreadCrumbItemComponent } from './breadcrumb-item.component';\nimport { NzBreadCrumbSeparatorComponent } from './breadcrumb-separator.component';\nimport { NzBreadCrumbComponent } from './breadcrumb.component';\n\n@NgModule({\n  imports: [CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule],\n  declarations: [NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent],\n  exports: [NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent]\n})\nexport class NzBreadCrumbModule {}\n"]}