{"version":3,"file":"ng-zorro-antd-notification.js","sources":["ng:/ng-zorro-antd/notification/notification.component.ts","ng:/ng-zorro-antd/notification/notification-container.component.ts","ng:/ng-zorro-antd/notification/notification.service.module.ts","ng:/ng-zorro-antd/notification/notification.module.ts","ng:/ng-zorro-antd/notification/typings.ts","ng:/ng-zorro-antd/notification/notification.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, Output, ViewEncapsulation } from '@angular/core';\nimport { notificationMotion } from 'ng-zorro-antd/core/animation';\nimport { NzMNComponent } from 'ng-zorro-antd/message';\n\nimport { NzNotificationData } from './typings';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-notification',\n  exportAs: 'nzNotification',\n  preserveWhitespaces: false,\n  animations: [notificationMotion],\n  template: `\n    <div\n      class=\"ant-notification-notice ant-notification-notice-closable\"\n      [ngStyle]=\"instance.options?.nzStyle\"\n      [ngClass]=\"instance.options?.nzClass\"\n      [@notificationMotion]=\"state\"\n      (click)=\"onClick($event)\"\n      (mouseenter)=\"onEnter()\"\n      (mouseleave)=\"onLeave()\"\n    >\n      <div *ngIf=\"!instance.template\" class=\"ant-notification-notice-content\">\n        <div class=\"ant-notification-notice-content\" [ngClass]=\"{ 'ant-notification-notice-with-icon': instance.type !== 'blank' }\">\n          <div [class.ant-notification-notice-with-icon]=\"instance.type !== 'blank'\">\n            <ng-container [ngSwitch]=\"instance.type\">\n              <i\n                *ngSwitchCase=\"'success'\"\n                nz-icon\n                nzType=\"check-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-success\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'info'\"\n                nz-icon\n                nzType=\"info-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-info\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'warning'\"\n                nz-icon\n                nzType=\"exclamation-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-warning\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'error'\"\n                nz-icon\n                nzType=\"close-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-error\"\n              ></i>\n            </ng-container>\n            <div class=\"ant-notification-notice-message\" [innerHTML]=\"instance.title\"></div>\n            <div class=\"ant-notification-notice-description\" [innerHTML]=\"instance.content\"></div>\n          </div>\n        </div>\n      </div>\n      <ng-template\n        [ngIf]=\"instance.template\"\n        [ngTemplateOutlet]=\"instance.template\"\n        [ngTemplateOutletContext]=\"{ $implicit: this, data: instance.options?.nzData }\"\n      >\n      </ng-template>\n      <a tabindex=\"0\" class=\"ant-notification-notice-close\" (click)=\"close()\">\n        <span class=\"ant-notification-notice-close-x\">\n          <ng-container *ngIf=\"instance.options?.nzCloseIcon; else iconTpl\">\n            <ng-container *nzStringTemplateOutlet=\"instance.options?.nzCloseIcon\">\n              <i nz-icon [nzType]=\"instance.options?.nzCloseIcon\"></i>\n            </ng-container>\n          </ng-container>\n          <ng-template #iconTpl>\n            <i nz-icon nzType=\"close\" class=\"ant-notification-close-icon\"></i>\n          </ng-template>\n        </span>\n      </a>\n    </div>\n  `\n})\nexport class NzNotificationComponent extends NzMNComponent implements OnDestroy {\n  @Input() instance: Required<NzNotificationData>;\n  @Input() placement: string;\n  @Input() index: number;\n  @Output() readonly destroyed = new EventEmitter<{ id: string; userAction: boolean }>();\n\n  constructor(cdr: ChangeDetectorRef) {\n    super(cdr);\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.instance.onClick.complete();\n  }\n\n  onClick(event: MouseEvent): void {\n    this.instance.onClick.next(event);\n  }\n\n  close(): void {\n    this.destroy(true);\n  }\n\n  get state(): string | undefined {\n    if (this.instance.state === 'enter') {\n      if (this.placement === 'topLeft' || this.placement === 'bottomLeft') {\n        return 'enterLeft';\n      } else {\n        return 'enterRight';\n      }\n    } else {\n      return this.instance.state;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { NotificationConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\n\nimport { NzMNContainerComponent } from 'ng-zorro-antd/message';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzNotificationData, NzNotificationDataOptions } from './typings';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'notification';\n\nconst NZ_NOTIFICATION_DEFAULT_CONFIG: Required<NotificationConfig> = {\n  nzTop: '24px',\n  nzBottom: '24px',\n  nzPlacement: 'topRight',\n  nzDuration: 4500,\n  nzMaxStack: 7,\n  nzPauseOnHover: true,\n  nzAnimate: true\n};\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-notification-container',\n  exportAs: 'nzNotificationContainer',\n  preserveWhitespaces: false,\n  template: `\n    <div class=\"ant-notification ant-notification-topLeft\" [style.top]=\"top\" [style.left]=\"'0px'\">\n      <nz-notification\n        *ngFor=\"let instance of topLeftInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div class=\"ant-notification ant-notification-topRight\" [style.top]=\"top\" [style.right]=\"'0px'\">\n      <nz-notification\n        *ngFor=\"let instance of topRightInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div class=\"ant-notification ant-notification-bottomLeft\" [style.bottom]=\"bottom\" [style.left]=\"'0px'\">\n      <nz-notification\n        *ngFor=\"let instance of bottomLeftInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div class=\"ant-notification ant-notification-bottomRight\" [style.bottom]=\"bottom\" [style.right]=\"'0px'\">\n      <nz-notification\n        *ngFor=\"let instance of bottomRightInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n  `\n})\nexport class NzNotificationContainerComponent extends NzMNContainerComponent {\n  bottom: string | null;\n  top: string | null;\n  config: Required<NotificationConfig>;\n  instances: Array<Required<NzNotificationData>> = [];\n  topLeftInstances: Array<Required<NzNotificationData>> = [];\n  topRightInstances: Array<Required<NzNotificationData>> = [];\n  bottomLeftInstances: Array<Required<NzNotificationData>> = [];\n  bottomRightInstances: Array<Required<NzNotificationData>> = [];\n\n  constructor(cdr: ChangeDetectorRef, nzConfigService: NzConfigService) {\n    super(cdr, nzConfigService);\n  }\n\n  create(notification: NzNotificationData): Required<NzNotificationData> {\n    const noti = this.onCreate(notification);\n    const key = noti.options.nzKey;\n    const notificationWithSameKey = this.instances.find(\n      msg => msg.options.nzKey === (notification.options as Required<NzNotificationDataOptions>).nzKey\n    );\n    if (key && notificationWithSameKey) {\n      this.replaceNotification(notificationWithSameKey, noti);\n    } else {\n      if (this.instances.length >= this.config.nzMaxStack) {\n        this.instances = this.instances.slice(1);\n      }\n      this.instances = [...this.instances, noti];\n    }\n\n    this.readyInstances();\n\n    return noti;\n  }\n\n  protected onCreate(instance: NzNotificationData): Required<NzNotificationData> {\n    instance.options = this.mergeOptions(instance.options);\n    instance.onClose = new Subject<boolean>();\n    instance.onClick = new Subject<MouseEvent>();\n    return instance as Required<NzNotificationData>;\n  }\n\n  protected subscribeConfigChange(): void {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.updateConfig());\n  }\n\n  protected updateConfig(): void {\n    this.config = {\n      ...NZ_NOTIFICATION_DEFAULT_CONFIG,\n      ...this.config,\n      ...this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME)\n    };\n\n    this.top = toCssPixel(this.config.nzTop!);\n    this.bottom = toCssPixel(this.config.nzBottom!);\n\n    this.cdr.markForCheck();\n  }\n\n  private replaceNotification(old: NzNotificationData, _new: NzNotificationData): void {\n    old.title = _new.title;\n    old.content = _new.content;\n    old.template = _new.template;\n    old.type = _new.type;\n  }\n\n  protected readyInstances(): void {\n    this.topLeftInstances = this.instances.filter(m => m.options.nzPosition === 'topLeft');\n    this.topRightInstances = this.instances.filter(m => m.options.nzPosition === 'topRight' || !m.options.nzPosition);\n    this.bottomLeftInstances = this.instances.filter(m => m.options.nzPosition === 'bottomLeft');\n    this.bottomRightInstances = this.instances.filter(m => m.options.nzPosition === 'bottomRight');\n\n    this.cdr.detectChanges();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzNotificationServiceModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzNotificationContainerComponent } from './notification-container.component';\nimport { NzNotificationComponent } from './notification.component';\nimport { NzNotificationServiceModule } from './notification.service.module';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzNotificationServiceModule],\n  declarations: [NzNotificationComponent, NzNotificationContainerComponent],\n  entryComponents: [NzNotificationContainerComponent]\n})\nexport class NzNotificationModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef } from '@angular/core';\n\nimport { NgClassInterface, NgStyleInterface } from 'ng-zorro-antd/core/types';\nimport { Subject } from 'rxjs';\n\nexport type NzNotificationPosition = 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\nexport interface NzNotificationDataOptions<T = {}> {\n  nzKey?: string;\n  nzStyle?: NgStyleInterface | string;\n  nzClass?: NgClassInterface | string;\n  nzCloseIcon?: TemplateRef<void> | string;\n  nzPosition?: NzNotificationPosition;\n  nzData?: T;\n  nzDuration?: number;\n  nzAnimate?: boolean;\n  nzPauseOnHover?: boolean;\n}\n\nexport interface NzNotificationData {\n  content?: string | TemplateRef<void>;\n  createdAt?: Date;\n  messageId?: string;\n  options?: NzNotificationDataOptions;\n  state?: 'enter' | 'leave';\n  template?: TemplateRef<{}>;\n  title?: string;\n  type?: 'success' | 'info' | 'warning' | 'error' | 'blank' | string;\n\n  // observables exposed to users\n  onClose?: Subject<boolean>;\n  onClick?: Subject<MouseEvent>;\n}\n\nexport type NzNotificationRef = Pick<Required<NzNotificationData>, 'onClose' | 'onClick' | 'messageId'>;\n\n/**\n * @deprecated use `NzNotificationRef` instead\n * @breaking-change 10.0.0\n */\nexport type NzNotificationDataFilled = NzNotificationRef;\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay } from '@angular/cdk/overlay';\nimport { Injectable, Injector, TemplateRef } from '@angular/core';\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\nimport { NzMNService } from 'ng-zorro-antd/message';\n\nimport { NzNotificationContainerComponent } from './notification-container.component';\nimport { NzNotificationServiceModule } from './notification.service.module';\nimport { NzNotificationData, NzNotificationDataOptions, NzNotificationRef } from './typings';\n\nlet notificationId = 0;\n\n@Injectable({\n  providedIn: NzNotificationServiceModule\n})\nexport class NzNotificationService extends NzMNService {\n  protected container: NzNotificationContainerComponent;\n  protected componentPrefix = 'notification-';\n\n  constructor(nzSingletonService: NzSingletonService, overlay: Overlay, injector: Injector) {\n    super(nzSingletonService, overlay, injector);\n  }\n\n  success(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ type: 'success', title, content }, options);\n  }\n\n  error(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ type: 'error', title, content }, options);\n  }\n\n  info(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ type: 'info', title, content }, options);\n  }\n\n  warning(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ type: 'warning', title, content }, options);\n  }\n\n  blank(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ type: 'blank', title, content }, options);\n  }\n\n  create(\n    type: 'success' | 'info' | 'warning' | 'error' | 'blank' | string,\n    title: string,\n    content: string,\n    options?: NzNotificationDataOptions\n  ): NzNotificationRef {\n    return this.createInstance({ type, title, content }, options);\n  }\n\n  template(template: TemplateRef<{}>, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ template }, options);\n  }\n\n  protected generateMessageId(): string {\n    return `${this.componentPrefix}-${notificationId++}`;\n  }\n\n  private createInstance(message: NzNotificationData, options?: NzNotificationDataOptions): NzNotificationRef {\n    this.container = this.withContainer(NzNotificationContainerComponent);\n\n    return this.container.create({\n      ...message,\n      ...{\n        createdAt: new Date(),\n        messageId: this.generateMessageId(),\n        options\n      }\n    });\n  }\n}\n"]}