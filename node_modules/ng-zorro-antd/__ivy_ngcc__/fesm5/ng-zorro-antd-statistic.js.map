{"version":3,"file":"ng-zorro-antd-statistic.js","sources":["ng:/ng-zorro-antd/statistic/statistic.component.ts","ng:/ng-zorro-antd/statistic/countdown.component.ts","ng:/ng-zorro-antd/statistic/statistic-number.component.ts","ng:/ng-zorro-antd/statistic/statistic.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAWA;AACqB,QA0BV,iBAAY,GAAG,EAAE,CAAC;AAC7B,KACC,AAPO;AAAC;YAtBR,SAAS,SAAC,9BAuBM,2BAAd,KAAK;eAtBN,eAAe,EAAE,hCAsBN,2BACV,KAAK;kBAvBkC,CAAC,MAAM,zBAuBpC,0BACV,KAAK;WAvBN,aAAa,EAAE,1BAuBJ,0BACV,KAAK;OAxB0B,CAAC,IAAI,sBACrC,lCAuBW,+BACV,KAAK;CAxBE,EAAE,cAAc,sBACxB,vCAuBW,kCACV,KAAK;IAxBE,EAAE,NAwBA;YAxBa,sBACvB,QAAQ,EAAE;orBAeT,kBACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAOiB;AAAC,IACnB,2BAAC;AACA,CA9BD,IA6BC;AACD;AAAa;AAAqB,IAPhC,wCAA8C;AAChD;AAAqB,IAAnB,wCAA8C;AAChD;AAAqB,IAAnB,uCAA6C;AAC/C;AAAqB,IAAnB,uCAAuC;AACzC;AAAqB,IAAnB,4CAA2B;AAC7B;AAAqB,IAAnB,+CAA2E;AAC7E;AACA;AAAC;AAAI;AAAkC;AAA0C;AAAsI;AAAI;AAAiB,ICdtO,gBAAgB,GAAG,IAAI,GAAG,EAAE;AAClC;AAEgD,IAkBN,wCAAoB;AAAC,IAS7D,8BAAoB,GAAsB,EAAU,MAAc,EAAU,QAAkB;AAChG,QADE,YACE,iBAAO,SACR;AACH,QAHsB,SAAG,GAAH,GAAG,CAAmB;AAAC,QAAS,YAAM,GAAN,MAAM,CAAQ;AAAC,QAAS,cAAQ,GAAR,QAAQ,CAAU;AAAC,QARtF,cAAQ,GAAW,UAAU,CAAC;AACzC,QAAqB,uBAAiB,GAAG,IAAI,YAAY,EAAQ,CAAC;AAClE;AAGI,KAKD;AACH;AACO;AAA0B;AAC3B;AAAQ,IADZ,0CAAW;AAAO;AACpB;AAAmB;AACnB,IAFE,UAAY,OAAsB;AAAI,QACpC,IAAI,OAAO,CAAC,OAAO,EAAE;AACzB,YAAM,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AACzD,YAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE;AAC5C,gBAAQ,IAAI,CAAC,SAAS,EAAE,CAAC;AACzB,aAAO;AACP,SAAK;AACL,KAAG;AAEH;AAAQ;AACF;AAAQ,IADZ,uCAAQ;AAAO;AACF;AACd,IAFC;AAAc,QACZ,IAAI,CAAC,SAAS,EAAE,CAAC;AACrB,KAAG;AAEH;AAAQ;AACL;AAAQ,IADT,0CAAW;AAAO;AACL;AACd,IAFC;AAAc,QACZ,IAAI,CAAC,SAAS,EAAE,CAAC;AACrB,KAAG;AAEH;AAAQ;AACH;AAAQ,IADX,wCAAS;AAAO;AACH;AAAQ,IADrB;AAAc,QACZ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE;AACnC,YAAM,IAAI,CAAC,UAAU,EAAE,CAAC;AACxB,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,SAAS,EAAE,CAAC;AACvB,SAAK;AACL,KAAG;AAEH;AAAQ;AACJ;AAAQ,IADV,yCAAU;AAAO;AACJ;AAAQ,IADrB;AAAc,QAAd,iBAUC;AACH,QAVI,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;AACjC,YAAM,IAAI,CAAC,MAAM,CAAC,iBAAiB;AAAM;AACjB;AACV,YAFsB;AAC9B,gBAAE,KAAI,CAAC,SAAS,EAAE,CAAC;AACzB,gBAAQ,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,gBAAgB,CAAC,CAAC,SAAS;AAAM;AACtC;AACV,gBAF2C;AACvD,oBAAI,KAAI,CAAC,WAAW,EAAE,CAAC;AAC7B,oBAAU,KAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AACnC,iBAAS,EAAC,CAAC;AACX,aAAO,EAAC,CAAC;AACT,SAAK;AACL,KAAG;AAEH;AAAQ;AACH;AAAQ,IADX,wCAAS;AAAO;AACH;AAAQ,IADrB;AAAc,QACZ,IAAI,IAAI,CAAC,QAAQ,EAAE;AACvB,YAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;AAClC,YAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC3B,SAAK;AACL,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AACyB;AAEtC;AAAmB;AACnB,IAJW,0CAAW;AAAO;AAE9B;AACiB;AACR;AAAQ,IAJf;AAAc,QACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;AACtD,QACI,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;AACzB,YAAM,IAAI,CAAC,SAAS,EAAE,CAAC;AACvB,YAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;AACpC,SAAK;AACL,KAAG,CAnEK;AAAC;iCAnBR,SAAS,SAAC,nDAmBqB;QAlB9B,eAAe,EAAE,zBAkB8E,gBArC/F,iBAAiB;WAmBuB,CAAC,MAAM,lBAlB/C,gBAGA,MAAM;cAgBN,dAfA,gBARO,QAAQ;AAuBF,EAAE,FAvBG;SAuBc,CAAC,IAAI,sBACrC,pCAxB4B;AAwBpB,EAAE,cAAc,hBAtBX,2BAuCZ,KAAK;CAhBN,QAAQ,EAAE,aAAa,xBAgBZ,oCACV,MAAM;AAhBP,AAgBW;CAhBH,EAAE;0GAYT,kBACF;;;;;;;;;;;;;;;;;;;;oBAGkB;AAAC,IAkEpB,2BAAC;AACA,CADA,CApEyC,oBAAoB,GAoE7D;AACD;AAAa;AAAqB,IApEhC,wCAAuC;AACzC;AAAqB,IAAnB,iDAAgE;AAClE;AAGG,IAFD,oCAAa;AACf;AACO;AAAiB;AACV;AAAQ,IADpB,sCAAuB;AACzB;AAAQ;AAAiB;AACzB;AACO,IAFL,wCAAsC;AACxC;AACO;AAAiB;AAAgB;AAAQ,IAAlC,mCAA8B;AAAC;AAAQ;AAAiB;AAAgB;AAAQ,IAAhD,sCAAsB;AAAC;AAAQ;AAAiB;AACpF;AAGV,IAJsE,wCAA0B;AAAC;AAAE;AACnG;AAAI;AAGgB;AACG;AAIvB;AAAI;AAOJ,ICrCE,oCAAuC,SAAiB;AAAI,QAArB,cAAS,GAAT,SAAS,CAAQ;AAAC,QAHzD,eAAU,GAAG,EAAE,CAAC;AAClB,QAAE,mBAAc,GAAG,EAAE,CAAC;AACtB,KAC8D;AAC9D;AACO;AACL;AAAQ,IADR,gDAAW;AAAO;AACL;AAAQ,IADrB;AAAc,QACZ,IAAI,CAAC,YAAY,EAAE,CAAC;AACxB,KAAG;AAEH;AAAQ;AAAgB;AACd;AAAQ,IADR,iDAAY;AAAO;AACjB;AAAmB;AAAQ,IADrC;AAAc;AACR,YAAE,gBAAgB,GAAW,OAAO,IAAI,CAAC,OAAO,KAAK,QAAQ,GAAG,GAAG,GAAG,qBAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC,OAAO,CAAC;AACzI;AAAyB,YAAf,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;AACtC,QAAU,IAAA,6CAA8C,EAA7C,WAAG,EAAE,eAAwC;AACxD,QACI,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;AAC1B,QAAI,IAAI,CAAC,cAAc,GAAG,OAAO,GAAG,KAAG,gBAAgB,GAAG,OAAS,GAAG,EAAE,CAAC;AACzE,KAAG,CApBK;AAAC;uCAjBR,SAAS,SAAC,zDAiBqB;QAhB9B,eAAe,EAAE,uBAAuB,CAAC,MAAM,vDAiBT,6CAMzB,MAAM,SAAC,SAAS;AAtB7B,AAsBqC;GAtBxB,EAAE,iBAAiB,CAAC,IAAI,sBACrC,jDAqB+C;kBArB5B,EAAE,KAAK,zBAwBjB,0BATR,KAAK;WAdN,QAAQ,EAAE,qBAAqB,1CAcpB,kCACV,KAAK;AAAI;cAdV,QAAQ,EAAE,mBAAmB,sBAC7B,QAAQ,EAAE;0aAST,kBACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAGiB;AAAC,IAmBnB,iCAAC;AACA,CAvCD,IAsCC;AACD;AAAa;AAAqB,IArBhC,6CAAuC;AACzC;AAAqB,IAAnB,qDAA2E;AAC7E;AAEC,IADC,gDAAgB;AAClB;AAAqB,IAAnB,oDAAoB;AACtB;AACO;AAAiB;AAAgB;AAAQ,IAAlC,+CAA4C;AAAC;AAAE;AAAC;AAE5D;AACU;AAGS;AACqG;AAAI;AAE9H,IC5BA;AACmB,KAIc;qDALhC,QAAQ,SAAC;aACR,OAAO,EAAE,CAAC,YAAY,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,CAAC,sBACtE,YAAY,EAAE,CAAC,oBAAoB,EAAE,oBAAoB,EAAE,0BAA0B,CAAC,sBACtF;CAAO,EAAE,CAAC,oBAAoB,EAAE,oBAAoB,EAAE,0BAA0B,CAAC,kBAClF;;;;;;;;;;;;gDACQ;AAAC,IAAsB,wBAAC;AAChC,CAND;AAAK;AAAC;AAAI;AACsB;AAAiC;AAE9B;AAAI;AAAC;AAAI;AAAkC;AAG3E;AAAsI;AAAI;AAAC;AAAsG","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzStatisticValueType } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-statistic',\n  exportAs: 'nzStatistic',\n  template: `\n    <div class=\"ant-statistic\">\n      <div class=\"ant-statistic-title\">\n        <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n      </div>\n      <div class=\"ant-statistic-content\" [ngStyle]=\"nzValueStyle\">\n        <span *ngIf=\"nzPrefix\" class=\"ant-statistic-content-prefix\">\n          <ng-container *nzStringTemplateOutlet=\"nzPrefix\">{{ nzPrefix }}</ng-container>\n        </span>\n        <nz-statistic-number [nzValue]=\"nzValue\" [nzValueTemplate]=\"nzValueTemplate\"> </nz-statistic-number>\n        <span *ngIf=\"nzSuffix\" class=\"ant-statistic-content-suffix\">\n          <ng-container *nzStringTemplateOutlet=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        </span>\n      </div>\n    </div>\n  `\n})\nexport class NzStatisticComponent {\n  @Input() nzPrefix: string | TemplateRef<void>;\n  @Input() nzSuffix: string | TemplateRef<void>;\n  @Input() nzTitle: string | TemplateRef<void>;\n  @Input() nzValue: NzStatisticValueType;\n  @Input() nzValueStyle = {};\n  @Input() nzValueTemplate: TemplateRef<{ $implicit: NzStatisticValueType }>;\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { interval, Subscription } from 'rxjs';\n\nimport { NzStatisticComponent } from './statistic.component';\n\nconst REFRESH_INTERVAL = 1000 / 30;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-countdown',\n  exportAs: 'nzCountdown',\n  template: `\n    <nz-statistic\n      [nzValue]=\"diff\"\n      [nzValueStyle]=\"nzValueStyle\"\n      [nzValueTemplate]=\"nzValueTemplate || countDownTpl\"\n      [nzTitle]=\"nzTitle\"\n      [nzPrefix]=\"nzPrefix\"\n      [nzSuffix]=\"nzSuffix\"\n    >\n    </nz-statistic>\n\n    <ng-template #countDownTpl>{{ diff | nzTimeRange: nzFormat }}</ng-template>\n  `\n})\nexport class NzCountdownComponent extends NzStatisticComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() nzFormat: string = 'HH:mm:ss';\n  @Output() readonly nzCountdownFinish = new EventEmitter<void>();\n\n  diff: number;\n\n  private target: number;\n  private updater_: Subscription | null;\n\n  constructor(private cdr: ChangeDetectorRef, private ngZone: NgZone, private platform: Platform) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzValue) {\n      this.target = Number(changes.nzValue.currentValue);\n      if (!changes.nzValue.isFirstChange()) {\n        this.syncTimer();\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.syncTimer();\n  }\n\n  ngOnDestroy(): void {\n    this.stopTimer();\n  }\n\n  syncTimer(): void {\n    if (this.target >= Date.now()) {\n      this.startTimer();\n    } else {\n      this.stopTimer();\n    }\n  }\n\n  startTimer(): void {\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        this.stopTimer();\n        this.updater_ = interval(REFRESH_INTERVAL).subscribe(() => {\n          this.updateValue();\n          this.cdr.detectChanges();\n        });\n      });\n    }\n  }\n\n  stopTimer(): void {\n    if (this.updater_) {\n      this.updater_.unsubscribe();\n      this.updater_ = null;\n    }\n  }\n\n  /**\n   * Update time that should be displayed on the screen.\n   */\n  protected updateValue(): void {\n    this.diff = Math.max(this.target - Date.now(), 0);\n\n    if (this.diff === 0) {\n      this.stopTimer();\n      this.nzCountdownFinish.emit();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { getLocaleNumberSymbol, NumberSymbol } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Inject, Input, LOCALE_ID, OnChanges, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzStatisticValueType } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-statistic-number',\n  exportAs: 'nzStatisticNumber',\n  template: `\n    <span class=\"ant-statistic-content-value\">\n      <ng-container *ngIf=\"nzValueTemplate\" [ngTemplateOutlet]=\"nzValueTemplate\" [ngTemplateOutletContext]=\"{ $implicit: nzValue }\">\n      </ng-container>\n      <ng-container *ngIf=\"!nzValueTemplate\">\n        <span *ngIf=\"displayInt\" class=\"ant-statistic-content-value-int\">{{ displayInt }}</span>\n        <span *ngIf=\"displayDecimal\" class=\"ant-statistic-content-value-decimal\">{{ displayDecimal }}</span>\n      </ng-container>\n    </span>\n  `\n})\nexport class NzStatisticNumberComponent implements OnChanges {\n  @Input() nzValue: NzStatisticValueType;\n  @Input() nzValueTemplate: TemplateRef<{ $implicit: NzStatisticValueType }>;\n\n  displayInt = '';\n  displayDecimal = '';\n\n  constructor(@Inject(LOCALE_ID) private locale_id: string) {}\n\n  ngOnChanges(): void {\n    this.formatNumber();\n  }\n\n  private formatNumber(): void {\n    const decimalSeparator: string = typeof this.nzValue === 'number' ? '.' : getLocaleNumberSymbol(this.locale_id, NumberSymbol.Decimal);\n    const value = String(this.nzValue);\n    const [int, decimal] = value.split(decimalSeparator);\n\n    this.displayInt = int;\n    this.displayDecimal = decimal ? `${decimalSeparator}${decimal}` : '';\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzPipesModule } from 'ng-zorro-antd/core/pipe';\n\nimport { NzCountdownComponent } from './countdown.component';\nimport { NzStatisticNumberComponent } from './statistic-number.component';\nimport { NzStatisticComponent } from './statistic.component';\n\n@NgModule({\n  imports: [CommonModule, PlatformModule, NzOutletModule, NzPipesModule],\n  declarations: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent],\n  exports: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent]\n})\nexport class NzStatisticModule {}\n"]}