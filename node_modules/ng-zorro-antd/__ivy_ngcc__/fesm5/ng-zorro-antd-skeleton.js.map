{"version":3,"file":"ng-zorro-antd-skeleton.js","sources":["ng:/ng-zorro-antd/skeleton/skeleton.component.ts","ng:/ng-zorro-antd/skeleton/skeleton-element.component.ts","ng:/ng-zorro-antd/skeleton/skeleton.module.ts","ng:/ng-zorro-antd/skeleton/skeleton.type.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\nimport { AvatarShape, AvatarSize, NzSkeletonAvatar, NzSkeletonParagraph, NzSkeletonTitle } from './skeleton.type';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-skeleton',\n  exportAs: 'nzSkeleton',\n  host: {\n    '[class.ant-skeleton-with-avatar]': '!!nzAvatar',\n    '[class.ant-skeleton-active]': 'nzActive'\n  },\n  template: `\n    <ng-container *ngIf=\"nzLoading\">\n      <div class=\"ant-skeleton-header\" *ngIf=\"!!nzAvatar\">\n        <nz-skeleton-element nzType=\"avatar\" [nzSize]=\"avatar.size\" [nzShape]=\"avatar.shape\"></nz-skeleton-element>\n      </div>\n      <div class=\"ant-skeleton-content\">\n        <h3 *ngIf=\"!!nzTitle\" class=\"ant-skeleton-title\" [style.width]=\"toCSSUnit(title.width)\"></h3>\n        <ul *ngIf=\"!!nzParagraph\" class=\"ant-skeleton-paragraph\">\n          <li *ngFor=\"let row of rowsList; let i = index\" [style.width]=\"toCSSUnit(widthList[i])\"></li>\n        </ul>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"!nzLoading\">\n      <ng-content></ng-content>\n    </ng-container>\n  `\n})\nexport class NzSkeletonComponent implements OnInit, OnChanges {\n  @Input() nzActive = false;\n  @Input() nzLoading = true;\n  @Input() nzTitle: NzSkeletonTitle | boolean = true;\n  @Input() nzAvatar: NzSkeletonAvatar | boolean = false;\n  @Input() nzParagraph: NzSkeletonParagraph | boolean = true;\n\n  title: NzSkeletonTitle;\n  avatar: NzSkeletonAvatar;\n  paragraph: NzSkeletonParagraph;\n  rowsList: number[] = [];\n  widthList: Array<number | string> = [];\n\n  constructor(private cdr: ChangeDetectorRef, renderer: Renderer2, elementRef: ElementRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-skeleton');\n  }\n\n  toCSSUnit(value: number | string = ''): string {\n    return toCssPixel(value);\n  }\n\n  private getTitleProps(): NzSkeletonTitle {\n    const hasAvatar: boolean = !!this.nzAvatar;\n    const hasParagraph: boolean = !!this.nzParagraph;\n    let width = '';\n    if (!hasAvatar && hasParagraph) {\n      width = '38%';\n    } else if (hasAvatar && hasParagraph) {\n      width = '50%';\n    }\n    return { width, ...this.getProps(this.nzTitle) };\n  }\n\n  private getAvatarProps(): NzSkeletonAvatar {\n    const shape: AvatarShape = !!this.nzTitle && !this.nzParagraph ? 'square' : 'circle';\n    const size: AvatarSize = 'large';\n    return { shape, size, ...this.getProps(this.nzAvatar) };\n  }\n\n  private getParagraphProps(): NzSkeletonParagraph {\n    const hasAvatar: boolean = !!this.nzAvatar;\n    const hasTitle: boolean = !!this.nzTitle;\n    const basicProps: NzSkeletonParagraph = {};\n    // Width\n    if (!hasAvatar || !hasTitle) {\n      basicProps.width = '61%';\n    }\n    // Rows\n    if (!hasAvatar && hasTitle) {\n      basicProps.rows = 3;\n    } else {\n      basicProps.rows = 2;\n    }\n    return { ...basicProps, ...this.getProps(this.nzParagraph) };\n  }\n\n  private getProps<T>(prop: T | boolean | undefined): T | {} {\n    return prop && typeof prop === 'object' ? prop : {};\n  }\n\n  private getWidthList(): Array<number | string> {\n    const { width, rows } = this.paragraph;\n    let widthList: Array<string | number> = [];\n    if (width && Array.isArray(width)) {\n      widthList = width;\n    } else if (width && !Array.isArray(width)) {\n      widthList = [];\n      widthList[rows! - 1] = width;\n    }\n    return widthList;\n  }\n\n  private updateProps(): void {\n    this.title = this.getTitleProps();\n    this.avatar = this.getAvatarProps();\n    this.paragraph = this.getParagraphProps();\n    this.rowsList = [...Array(this.paragraph.rows)];\n    this.widthList = this.getWidthList();\n    this.cdr.markForCheck();\n  }\n\n  ngOnInit(): void {\n    this.updateProps();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzTitle || changes.nzAvatar || changes.nzParagraph) {\n      this.updateProps();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { AvatarShape, AvatarSize, ButtonShape, ButtonSize, InputSize } from './skeleton.type';\n\n@Directive({\n  selector: 'nz-skeleton-element',\n  host: {\n    '[class.ant-skeleton]': 'true',\n    '[class.ant-skeleton-element]': 'true',\n    '[class.ant-skeleton-active]': 'nzActive'\n  }\n})\nexport class NzSkeletonElementDirective {\n  @Input() nzActive: boolean = false;\n  @Input() nzType: 'button' | 'input' | 'avatar';\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'nz-skeleton-element[nzType=\"button\"]',\n  template: `\n    <span\n      [class.ant-skeleton-button]=\"true\"\n      [class.ant-skeleton-button-round]=\"nzShape === 'round'\"\n      [class.ant-skeleton-button-circle]=\"nzShape === 'circle'\"\n      [class.ant-skeleton-button-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-button-sm]=\"nzSize === 'small'\"\n    >\n    </span>\n  `\n})\nexport class NzSkeletonElementButtonComponent {\n  @Input() nzShape: ButtonShape;\n  @Input() nzSize: ButtonSize;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'nz-skeleton-element[nzType=\"avatar\"]',\n  template: `\n    <span\n      [class.ant-skeleton-avatar]=\"true\"\n      [class.ant-skeleton-avatar-square]=\"nzShape === 'square'\"\n      [class.ant-skeleton-avatar-circle]=\"nzShape === 'circle'\"\n      [class.ant-skeleton-avatar-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-avatar-sm]=\"nzSize === 'small'\"\n      [style]=\"styleMap\"\n    >\n    </span>\n  `\n})\nexport class NzSkeletonElementAvatarComponent implements OnChanges {\n  styleMap = {};\n  @Input() nzShape: AvatarShape;\n  @Input() nzSize: AvatarSize;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzSize && typeof this.nzSize === 'number') {\n      const sideLength = `${this.nzSize}px`;\n      this.styleMap = { width: sideLength, height: sideLength, 'line-height': sideLength };\n    } else {\n      this.styleMap = {};\n    }\n  }\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'nz-skeleton-element[nzType=\"input\"]',\n  template: `\n    <span\n      [class.ant-skeleton-input]=\"true\"\n      [class.ant-skeleton-input-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-input-sm]=\"nzSize === 'small'\"\n    >\n    </span>\n  `\n})\nexport class NzSkeletonElementInputComponent {\n  @Input() nzSize: InputSize;\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  NzSkeletonElementAvatarComponent,\n  NzSkeletonElementButtonComponent,\n  NzSkeletonElementDirective,\n  NzSkeletonElementInputComponent\n} from './skeleton-element.component';\nimport { NzSkeletonComponent } from './skeleton.component';\n\n@NgModule({\n  declarations: [\n    NzSkeletonComponent,\n    NzSkeletonElementDirective,\n    NzSkeletonElementButtonComponent,\n    NzSkeletonElementAvatarComponent,\n    NzSkeletonElementInputComponent\n  ],\n  imports: [CommonModule],\n  exports: [\n    NzSkeletonComponent,\n    NzSkeletonElementDirective,\n    NzSkeletonElementButtonComponent,\n    NzSkeletonElementAvatarComponent,\n    NzSkeletonElementInputComponent\n  ]\n})\nexport class NzSkeletonModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport type ParagraphWidth = number | string | Array<number | string>;\nexport type ButtonShape = 'circle' | 'round' | 'default';\nexport type AvatarShape = 'square' | 'circle';\nexport type InputSize = 'large' | 'small' | 'default';\nexport type ButtonSize = InputSize;\nexport type AvatarSize = InputSize | number;\n\nexport interface NzSkeletonAvatar {\n  size?: AvatarSize;\n  shape?: AvatarShape;\n}\n\nexport interface NzSkeletonTitle {\n  width?: number | string;\n}\n\nexport interface NzSkeletonParagraph {\n  rows?: number;\n  width?: ParagraphWidth;\n}\n"]}