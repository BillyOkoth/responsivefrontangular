{"version":3,"file":"ng-zorro-antd-spin.js","sources":["ng:/ng-zorro-antd/spin/spin.component.ts","ng:/ng-zorro-antd/spin/spin.module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, NumberInput, NzSizeLDSType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\n\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { debounceTime, flatMap, takeUntil } from 'rxjs/operators';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'spin';\n\n@Component({\n  selector: 'nz-spin',\n  exportAs: 'nzSpin',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-template #defaultTemplate>\n      <span class=\"ant-spin-dot ant-spin-dot-spin\">\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n      </span>\n    </ng-template>\n    <div *ngIf=\"isLoading\">\n      <div\n        class=\"ant-spin\"\n        [class.ant-spin-spinning]=\"isLoading\"\n        [class.ant-spin-lg]=\"nzSize === 'large'\"\n        [class.ant-spin-sm]=\"nzSize === 'small'\"\n        [class.ant-spin-show-text]=\"nzTip\"\n      >\n        <ng-template [ngTemplateOutlet]=\"nzIndicator || defaultTemplate\"></ng-template>\n        <div class=\"ant-spin-text\" *ngIf=\"nzTip\">{{ nzTip }}</div>\n      </div>\n    </div>\n    <div *ngIf=\"!nzSimple\" class=\"ant-spin-container\" [class.ant-spin-blur]=\"isLoading\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  host: {\n    '[class.ant-spin-nested-loading]': '!nzSimple'\n  }\n})\nexport class NzSpinComponent implements OnChanges, OnDestroy, OnInit {\n  static ngAcceptInputType_nzDelay: NumberInput;\n  static ngAcceptInputType_nzSimple: BooleanInput;\n  static ngAcceptInputType_nzSpinning: BooleanInput;\n\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzIndicator: TemplateRef<void>;\n  @Input() nzSize: NzSizeLDSType = 'default';\n  @Input() nzTip: string | null = null;\n  @Input() @InputNumber() nzDelay = 0;\n  @Input() @InputBoolean() nzSimple = false;\n  @Input() @InputBoolean() nzSpinning = true;\n  private destroy$ = new Subject<void>();\n  private spinning$ = new BehaviorSubject(this.nzSpinning);\n  private delay$ = new BehaviorSubject(this.nzDelay);\n  isLoading = true;\n\n  constructor(public nzConfigService: NzConfigService, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    const loading$ = this.spinning$.pipe(\n      flatMap(() => this.delay$),\n      flatMap(delay => {\n        if (delay === 0) {\n          return this.spinning$;\n        } else {\n          return this.spinning$.pipe(debounceTime(delay));\n        }\n      }),\n      takeUntil(this.destroy$)\n    );\n    loading$.subscribe(loading => {\n      this.isLoading = loading;\n      this.cdr.markForCheck();\n    });\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.cdr.markForCheck());\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzSpinning, nzDelay } = changes;\n    if (nzSpinning) {\n      this.spinning$.next(this.nzSpinning);\n    }\n    if (nzDelay) {\n      this.delay$.next(this.nzDelay);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzSpinComponent } from './spin.component';\n\n@NgModule({\n  exports: [NzSpinComponent],\n  declarations: [NzSpinComponent],\n  imports: [CommonModule, ObserversModule]\n})\nexport class NzSpinModule {}\n"]}