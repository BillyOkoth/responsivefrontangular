{"version":3,"file":"ng-zorro-antd-tree-select.js","sources":["ng:/ng-zorro-antd/tree-select/tree-select.service.ts","ng:/ng-zorro-antd/tree-select/tree-select.component.ts","ng:/ng-zorro-antd/tree-select/tree-select.module.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { NzTreeBaseService } from 'ng-zorro-antd/core/tree';\n\n@Injectable()\nexport class NzTreeSelectService extends NzTreeBaseService {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BACKSPACE } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange } from '@angular/cdk/overlay';\nimport {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  Self,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { slideMotion, zoomMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\n\nimport {\n  NzFormatEmitEvent,\n  NzTreeBase,\n  NzTreeBaseService,\n  NzTreeHigherOrderServiceToken,\n  NzTreeNode,\n  NzTreeNodeOptions\n} from 'ng-zorro-antd/core/tree';\nimport { BooleanInput, NzSizeLDSType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, isNotNil } from 'ng-zorro-antd/core/util';\nimport { NzSelectSearchComponent } from 'ng-zorro-antd/select';\nimport { NzTreeComponent } from 'ng-zorro-antd/tree';\n\nimport { merge, of as observableOf, Subscription } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\n\nimport { NzTreeSelectService } from './tree-select.service';\n\nexport function higherOrderServiceFactory(injector: Injector): NzTreeBaseService {\n  return injector.get(NzTreeSelectService);\n}\n\nconst NZ_CONFIG_COMPONENT_NAME = 'treeSelect';\nconst TREE_SELECT_DEFAULT_CLASS = 'ant-select-dropdown ant-select-tree-dropdown';\n\n@Component({\n  selector: 'nz-tree-select',\n  exportAs: 'nzTreeSelect',\n  animations: [slideMotion, zoomMotion],\n  template: `\n    <ng-template\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      [cdkConnectedOverlayOrigin]=\"cdkOverlayOrigin\"\n      [cdkConnectedOverlayOpen]=\"nzOpen\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayMinWidth]=\"nzDropdownMatchSelectWidth ? null : triggerWidth\"\n      [cdkConnectedOverlayWidth]=\"nzDropdownMatchSelectWidth ? triggerWidth : null\"\n      (backdropClick)=\"closeDropDown()\"\n      (detach)=\"closeDropDown()\"\n      (positionChange)=\"onPositionChange($event)\"\n    >\n      <div\n        [ngClass]=\"dropdownClassName\"\n        [@slideMotion]=\"nzOpen ? dropDownPosition : 'void'\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        [class.ant-select-dropdown-placement-bottomLeft]=\"dropDownPosition === 'bottom'\"\n        [class.ant-select-dropdown-placement-topLeft]=\"dropDownPosition === 'top'\"\n        [ngStyle]=\"nzDropdownStyle\"\n      >\n        <nz-tree\n          #treeRef\n          [hidden]=\"isNotFound\"\n          nzNoAnimation\n          nzSelectMode\n          [nzData]=\"nzNodes\"\n          [nzMultiple]=\"nzMultiple\"\n          [nzSearchValue]=\"inputValue\"\n          [nzHideUnMatched]=\"nzHideUnMatched\"\n          [nzShowIcon]=\"nzShowIcon\"\n          [nzCheckable]=\"nzCheckable\"\n          [nzAsyncData]=\"nzAsyncData\"\n          [nzShowExpand]=\"nzShowExpand\"\n          [nzShowLine]=\"nzShowLine\"\n          [nzExpandedIcon]=\"nzExpandedIcon\"\n          [nzExpandAll]=\"nzDefaultExpandAll\"\n          [nzExpandedKeys]=\"expandedKeys\"\n          [nzCheckedKeys]=\"nzCheckable ? value : []\"\n          [nzSelectedKeys]=\"!nzCheckable ? value : []\"\n          [nzTreeTemplate]=\"treeTemplate\"\n          [nzCheckStrictly]=\"nzCheckStrictly\"\n          (nzExpandChange)=\"onExpandedKeysChange($event)\"\n          (nzClick)=\"nzTreeClick.emit($event)\"\n          (nzCheckedKeysChange)=\"updateSelectedNodes()\"\n          (nzSelectedKeysChange)=\"updateSelectedNodes()\"\n          (nzCheckBoxChange)=\"nzTreeCheckBoxChange.emit($event)\"\n          (nzSearchValueChange)=\"setSearchValues($event)\"\n        >\n        </nz-tree>\n        <span *ngIf=\"nzNodes.length === 0 || isNotFound\" class=\"ant-select-not-found\">\n          <nz-embed-empty [nzComponentName]=\"'tree-select'\" [specificContent]=\"nzNotFoundContent\"></nz-embed-empty>\n        </span>\n      </div>\n    </ng-template>\n\n    <div cdkOverlayOrigin class=\"ant-select-selector\">\n      <ng-container *ngIf=\"isMultiple\">\n        <nz-select-item\n          *ngFor=\"let node of selectedNodes | slice: 0:nzMaxTagCount; trackBy: trackValue\"\n          [@zoomMotion]\n          [@.disabled]=\"noAnimation?.nzNoAnimation\"\n          [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n          [deletable]=\"true\"\n          [disabled]=\"node.isDisabled || nzDisabled\"\n          [label]=\"nzDisplayWith(node)\"\n          (@zoomMotion.done)=\"updatePosition()\"\n          (delete)=\"removeSelected(node, true)\"\n        ></nz-select-item>\n\n        <nz-select-item\n          *ngIf=\"selectedNodes.length > nzMaxTagCount\"\n          [@zoomMotion]\n          (@zoomMotion.done)=\"updatePosition()\"\n          [@.disabled]=\"noAnimation?.nzNoAnimation\"\n          [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n          [contentTemplateOutlet]=\"nzMaxTagPlaceholder\"\n          [contentTemplateOutletContext]=\"selectedNodes | slice: nzMaxTagCount\"\n          [deletable]=\"false\"\n          [disabled]=\"false\"\n          [label]=\"'+ ' + (selectedNodes.length - nzMaxTagCount) + ' ...'\"\n        ></nz-select-item>\n      </ng-container>\n\n      <nz-select-search\n        *ngIf=\"nzShowSearch\"\n        (keydown)=\"onKeyDownInput($event)\"\n        (isComposingChange)=\"isComposing = $event\"\n        (valueChange)=\"setInputValue($event)\"\n        [value]=\"inputValue\"\n        [mirrorSync]=\"isMultiple\"\n        [disabled]=\"nzDisabled\"\n        [showInput]=\"nzOpen\"\n      >\n      </nz-select-search>\n\n      <nz-select-placeholder\n        *ngIf=\"nzPlaceHolder && selectedNodes.length === 0\"\n        [placeholder]=\"nzPlaceHolder\"\n        [style.display]=\"placeHolderDisplay\"\n      >\n      </nz-select-placeholder>\n\n      <nz-select-item\n        *ngIf=\"!isMultiple && selectedNodes.length === 1\"\n        [deletable]=\"false\"\n        [disabled]=\"false\"\n        [label]=\"nzDisplayWith(selectedNodes[0])\"\n      ></nz-select-item>\n\n      <nz-select-arrow *ngIf=\"!isMultiple\"></nz-select-arrow>\n\n      <nz-select-clear *ngIf=\"nzAllowClear\" (clear)=\"onClearSelection()\"></nz-select-clear>\n    </div>\n  `,\n  providers: [\n    NzTreeSelectService,\n    {\n      provide: NzTreeHigherOrderServiceToken,\n      useFactory: higherOrderServiceFactory,\n      deps: [[new Self(), Injector]]\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzTreeSelectComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-select-lg]': 'nzSize===\"large\"',\n    '[class.ant-select-sm]': 'nzSize===\"small\"',\n    '[class.ant-select-enabled]': '!nzDisabled',\n    '[class.ant-select-disabled]': 'nzDisabled',\n    '[class.ant-select-single]': '!isMultiple',\n    '[class.ant-select-show-arrow]': '!isMultiple',\n    '[class.ant-select-show-search]': '!isMultiple',\n    '[class.ant-select-multiple]': 'isMultiple',\n    '[class.ant-select-allow-clear]': 'nzAllowClear',\n    '[class.ant-select-open]': 'nzOpen',\n    '(click)': 'trigger()'\n  }\n})\nexport class NzTreeSelectComponent extends NzTreeBase implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\n  static ngAcceptInputType_nzAllowClear: BooleanInput;\n  static ngAcceptInputType_nzShowExpand: BooleanInput;\n  static ngAcceptInputType_nzShowLine: BooleanInput;\n  static ngAcceptInputType_nzDropdownMatchSelectWidth: BooleanInput;\n  static ngAcceptInputType_nzCheckable: BooleanInput;\n  static ngAcceptInputType_nzHideUnMatched: BooleanInput;\n  static ngAcceptInputType_nzShowIcon: BooleanInput;\n  static ngAcceptInputType_nzShowSearch: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzAsyncData: BooleanInput;\n  static ngAcceptInputType_nzMultiple: BooleanInput;\n  static ngAcceptInputType_nzDefaultExpandAll: BooleanInput;\n  static ngAcceptInputType_nzCheckStrictly: BooleanInput;\n\n  @Input() @InputBoolean() nzAllowClear: boolean = true;\n  @Input() @InputBoolean() nzShowExpand: boolean = true;\n  @Input() @InputBoolean() nzShowLine: boolean = false;\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, true) nzDropdownMatchSelectWidth: boolean;\n  @Input() @InputBoolean() nzCheckable: boolean = false;\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) nzHideUnMatched: boolean;\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) nzShowIcon: boolean;\n  @Input() @InputBoolean() nzShowSearch: boolean = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzAsyncData = false;\n  @Input() @InputBoolean() nzMultiple = false;\n  @Input() @InputBoolean() nzDefaultExpandAll = false;\n  @Input() @InputBoolean() nzCheckStrictly = false;\n  @Input() nzExpandedIcon: TemplateRef<{ $implicit: NzTreeNode }>;\n  @Input() nzNotFoundContent: string;\n  @Input() nzNodes: Array<NzTreeNode | NzTreeNodeOptions> = [];\n  @Input() nzOpen = false;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'default') nzSize: NzSizeLDSType;\n  @Input() nzPlaceHolder = '';\n  @Input() nzDropdownStyle: { [key: string]: string };\n  @Input() nzDropdownClassName: string;\n  @Input()\n  set nzExpandedKeys(value: string[]) {\n    this.expandedKeys = value;\n  }\n  get nzExpandedKeys(): string[] {\n    return this.expandedKeys;\n  }\n\n  @Input() nzDisplayWith: (node: NzTreeNode) => string | undefined = (node: NzTreeNode) => node.title;\n  @Input() nzMaxTagCount: number;\n  @Input() nzMaxTagPlaceholder: TemplateRef<{ $implicit: NzTreeNode[] }>;\n  @Output() readonly nzOpenChange = new EventEmitter<boolean>();\n  @Output() readonly nzCleared = new EventEmitter<void>();\n  @Output() readonly nzRemoved = new EventEmitter<NzTreeNode>();\n  @Output() readonly nzExpandChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzTreeClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzTreeCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\n\n  @ViewChild(NzSelectSearchComponent, { static: false }) nzSelectSearchComponent: NzSelectSearchComponent;\n  @ViewChild('treeRef', { static: false }) treeRef: NzTreeComponent;\n  @ViewChild(CdkOverlayOrigin, { static: true }) cdkOverlayOrigin: CdkOverlayOrigin;\n  @ViewChild(CdkConnectedOverlay, { static: false }) cdkConnectedOverlay: CdkConnectedOverlay;\n\n  @Input() nzTreeTemplate: TemplateRef<{ $implicit: NzTreeNode }>;\n  @ContentChild('nzTreeTemplate', { static: true }) nzTreeTemplateChild: TemplateRef<{ $implicit: NzTreeNode }>;\n  get treeTemplate(): TemplateRef<{ $implicit: NzTreeNode }> {\n    return this.nzTreeTemplate || this.nzTreeTemplateChild;\n  }\n\n  dropdownClassName = TREE_SELECT_DEFAULT_CLASS;\n  triggerWidth: number;\n  isComposing = false;\n  isDestroy = true;\n  isNotFound = false;\n  inputValue = '';\n  dropDownPosition: 'top' | 'center' | 'bottom' = 'bottom';\n  selectionChangeSubscription: Subscription;\n  selectedNodes: NzTreeNode[] = [];\n  expandedKeys: string[] = [];\n  value: string[] = [];\n\n  onChange: (value: string[] | string | null) => void;\n  onTouched: () => void = () => null;\n\n  get placeHolderDisplay(): string {\n    return this.inputValue || this.isComposing || this.selectedNodes.length ? 'none' : 'block';\n  }\n\n  get isMultiple(): boolean {\n    return this.nzMultiple || this.nzCheckable;\n  }\n\n  constructor(\n    nzTreeService: NzTreeSelectService,\n    public nzConfigService: NzConfigService,\n    private renderer: Renderer2,\n    private cdr: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {\n    super(nzTreeService);\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-select');\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-tree-select');\n  }\n\n  ngOnInit(): void {\n    this.isDestroy = false;\n    this.selectionChangeSubscription = this.subscribeSelectionChange();\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroy = true;\n    this.closeDropDown();\n    this.selectionChangeSubscription.unsubscribe();\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.nzDisabled = isDisabled;\n    this.closeDropDown();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzNodes, nzDropdownClassName } = changes;\n    if (nzNodes) {\n      this.updateSelectedNodes(true);\n    }\n    if (nzDropdownClassName) {\n      const className = this.nzDropdownClassName && this.nzDropdownClassName.trim();\n      this.dropdownClassName = className ? `${TREE_SELECT_DEFAULT_CLASS} ${className}` : TREE_SELECT_DEFAULT_CLASS;\n    }\n  }\n\n  writeValue(value: string[] | string): void {\n    if (isNotNil(value)) {\n      if (this.isMultiple && Array.isArray(value)) {\n        this.value = value;\n      } else {\n        this.value = [value as string];\n      }\n      this.updateSelectedNodes(true);\n    } else {\n      this.value = [];\n      this.selectedNodes.forEach(node => {\n        this.removeSelected(node, false);\n      });\n      this.selectedNodes = [];\n    }\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (_: string[] | string | null) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  trigger(): void {\n    if (this.nzDisabled || (!this.nzDisabled && this.nzOpen)) {\n      this.closeDropDown();\n    } else {\n      this.openDropdown();\n      if (this.nzShowSearch || this.isMultiple) {\n        this.focusOnInput();\n      }\n    }\n  }\n\n  openDropdown(): void {\n    if (!this.nzDisabled) {\n      this.nzOpen = true;\n      this.nzOpenChange.emit(this.nzOpen);\n      this.updateCdkConnectedOverlayStatus();\n      this.updatePosition();\n    }\n  }\n\n  closeDropDown(): void {\n    this.onTouched();\n    this.nzOpen = false;\n    this.inputValue = '';\n    this.nzOpenChange.emit(this.nzOpen);\n    this.cdr.markForCheck();\n  }\n\n  onKeyDownInput(e: KeyboardEvent): void {\n    const keyCode = e.keyCode;\n    const eventTarget = e.target as HTMLInputElement;\n    if (this.isMultiple && !eventTarget.value && keyCode === BACKSPACE) {\n      e.preventDefault();\n      if (this.selectedNodes.length) {\n        const removeNode = this.selectedNodes[this.selectedNodes.length - 1];\n        this.removeSelected(removeNode);\n      }\n    }\n  }\n\n  onExpandedKeysChange(value: NzFormatEmitEvent): void {\n    this.nzExpandChange.emit(value);\n    this.expandedKeys = [...value.keys!];\n  }\n\n  setInputValue(value: string): void {\n    this.inputValue = value;\n    this.updatePosition();\n  }\n\n  removeSelected(node: NzTreeNode, emit: boolean = true): void {\n    node.isSelected = false;\n    node.isChecked = false;\n    if (this.nzCheckable) {\n      this.nzTreeService.conduct(node);\n    } else {\n      this.nzTreeService.setSelectedNodeList(node, this.nzMultiple);\n    }\n\n    if (emit) {\n      this.nzRemoved.emit(node);\n    }\n  }\n\n  focusOnInput(): void {\n    if (this.nzSelectSearchComponent) {\n      this.nzSelectSearchComponent.focus();\n    }\n  }\n\n  subscribeSelectionChange(): Subscription {\n    return merge(\n      this.nzTreeClick.pipe(\n        tap((event: NzFormatEmitEvent) => {\n          const node = event.node!;\n          if (this.nzCheckable && !node.isDisabled && !node.isDisableCheckbox) {\n            node.isChecked = !node.isChecked;\n            node.isHalfChecked = false;\n            if (!this.nzCheckStrictly) {\n              this.nzTreeService.conduct(node);\n            }\n          }\n          if (this.nzCheckable) {\n            node.isSelected = false;\n          }\n        }),\n        filter((event: NzFormatEmitEvent) => {\n          const node = event.node!;\n          return this.nzCheckable ? !node.isDisabled && !node.isDisableCheckbox : !node.isDisabled && node.isSelectable;\n        })\n      ),\n      this.nzCheckable ? this.nzTreeCheckBoxChange : observableOf(),\n      this.nzCleared,\n      this.nzRemoved\n    ).subscribe(() => {\n      this.updateSelectedNodes();\n      const value = this.selectedNodes.map(node => node.key!);\n      this.value = [...value];\n      if (this.nzShowSearch || this.isMultiple) {\n        this.inputValue = '';\n        this.isNotFound = false;\n      }\n      if (this.isMultiple) {\n        this.onChange(value);\n        this.focusOnInput();\n        this.updatePosition();\n      } else {\n        this.closeDropDown();\n        this.onChange(value.length ? value[0] : null);\n      }\n    });\n  }\n\n  updateSelectedNodes(init: boolean = false): void {\n    if (init) {\n      const nodes = this.coerceTreeNodes(this.nzNodes);\n      this.nzTreeService.isMultiple = this.isMultiple;\n      this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n      this.nzTreeService.initTree(nodes);\n      if (this.nzCheckable) {\n        this.nzTreeService.conductCheck(this.value, this.nzCheckStrictly);\n      } else {\n        this.nzTreeService.conductSelectedKeys(this.value, this.isMultiple);\n      }\n    }\n\n    this.selectedNodes = [...(this.nzCheckable ? this.getCheckedNodeList() : this.getSelectedNodeList())];\n  }\n\n  updatePosition(): void {\n    setTimeout(() => {\n      if (this.cdkConnectedOverlay && this.cdkConnectedOverlay.overlayRef) {\n        this.cdkConnectedOverlay.overlayRef.updatePosition();\n      }\n    });\n  }\n\n  onPositionChange(position: ConnectedOverlayPositionChange): void {\n    this.dropDownPosition = position.connectionPair.originY;\n  }\n\n  onClearSelection(): void {\n    this.selectedNodes.forEach(node => {\n      this.removeSelected(node, false);\n    });\n    this.nzCleared.emit();\n  }\n\n  setSearchValues($event: NzFormatEmitEvent): void {\n    Promise.resolve().then(() => {\n      this.isNotFound = (this.nzShowSearch || this.isMultiple) && !!this.inputValue && $event.matchedKeys!.length === 0;\n    });\n  }\n\n  updateCdkConnectedOverlayStatus(): void {\n    this.triggerWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n  }\n\n  trackValue(_index: number, option: NzTreeNode): string {\n    return option.key!;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\n\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzTreeModule } from 'ng-zorro-antd/tree';\n\nimport { NzTreeSelectComponent } from './tree-select.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    FormsModule,\n    NzSelectModule,\n    NzTreeModule,\n    NzIconModule,\n    NzEmptyModule,\n    NzOverlayModule,\n    NzNoAnimationModule\n  ],\n  declarations: [NzTreeSelectComponent],\n  exports: [NzTreeSelectComponent]\n})\nexport class NzTreeSelectModule {}\n"]}