{"version":3,"file":"ng-zorro-antd-tree.js","sources":["ng:/ng-zorro-antd/tree/tree-indent.component.ts","ng:/ng-zorro-antd/tree/tree-node-checkbox.component.ts","ng:/ng-zorro-antd/tree/tree-node-switcher.component.ts","ng:/ng-zorro-antd/tree/tree-node-title.component.ts","ng:/ng-zorro-antd/tree/tree-node.component.ts","ng:/ng-zorro-antd/tree/tree.service.ts","ng:/ng-zorro-antd/tree/tree.component.ts","ng:/ng-zorro-antd/tree/tree.module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'nz-tree-indent',\n  exportAs: 'nzTreeIndent',\n  template: ` <span *ngFor=\"let i of listOfUnit; let index = index\" [ngClass]=\"unitMapOfClass(index)\"></span> `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[attr.aria-hidden]': 'true',\n    '[class.ant-tree-indent]': '!nzSelectMode',\n    '[class.ant-select-tree-indent]': 'nzSelectMode'\n  }\n})\nexport class NzTreeIndentComponent implements OnInit, OnChanges {\n  @Input() nzTreeLevel: number;\n  @Input() nzIsStart: boolean[];\n  @Input() nzIsEnd: boolean[];\n  @Input() nzSelectMode = false;\n\n  listOfUnit: number[] = [];\n\n  unitMapOfClass(index: number): { [key: string]: boolean } {\n    return {\n      [`ant-tree-indent-unit`]: !this.nzSelectMode,\n      [`ant-tree-indent-unit-start`]: !this.nzSelectMode && this.nzIsStart[index + 1],\n      [`ant-tree-indent-unit-end`]: !this.nzSelectMode && this.nzIsEnd[index + 1],\n      [`ant-select-tree-indent-unit`]: this.nzSelectMode,\n      [`ant-select-tree-indent-unit-start`]: this.nzSelectMode && this.nzIsStart[index + 1],\n      [`ant-select-tree-indent-unit-end`]: this.nzSelectMode && this.nzIsEnd[index + 1]\n    };\n  }\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzTreeLevel } = changes;\n    if (nzTreeLevel) {\n      this.listOfUnit = [...new Array(nzTreeLevel.currentValue || 0)];\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'nz-tree-node-checkbox',\n  template: ` <span [class.ant-tree-checkbox-inner]=\"!nzSelectMode\" [class.ant-select-tree-checkbox-inner]=\"nzSelectMode\"></span> `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-select-tree-checkbox]': `nzSelectMode`,\n    '[class.ant-select-tree-checkbox-checked]': `nzSelectMode && isChecked`,\n    '[class.ant-select-tree-checkbox-indeterminate]': `nzSelectMode && isHalfChecked`,\n    '[class.ant-select-tree-checkbox-disabled]': `nzSelectMode && (isDisabled || isDisableCheckbox)`,\n    '[class.ant-tree-checkbox]': `!nzSelectMode`,\n    '[class.ant-tree-checkbox-checked]': `!nzSelectMode && isChecked`,\n    '[class.ant-tree-checkbox-indeterminate]': `!nzSelectMode && isHalfChecked`,\n    '[class.ant-tree-checkbox-disabled]': `!nzSelectMode && (isDisabled || isDisableCheckbox)`\n  }\n})\nexport class NzTreeNodeCheckboxComponent {\n  @Input() nzSelectMode = false;\n  @Input() isChecked: boolean;\n  @Input() isHalfChecked: boolean;\n  @Input() isDisabled: boolean;\n  @Input() isDisableCheckbox: boolean;\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\nimport { NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\n\n@Component({\n  selector: 'nz-tree-node-switcher',\n  template: `\n    <ng-container *ngIf=\"isShowSwitchIcon\">\n      <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; context: { $implicit: context, origin: context.origin }\">\n          <i\n            nz-icon\n            nzType=\"caret-down\"\n            [class.ant-select-tree-switcher-icon]=\"nzSelectMode\"\n            [class.ant-tree-switcher-icon]=\"!nzSelectMode\"\n          ></i>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"nzShowLine\">\n      <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; context: { $implicit: context, origin: context.origin }\">\n          <i\n            *ngIf=\"isShowLineIcon\"\n            nz-icon\n            [nzType]=\"isSwitcherOpen ? 'minus-square' : 'plus-square'\"\n            class=\"ant-tree-switcher-line-icon\"\n          ></i>\n          <i *ngIf=\"!isShowLineIcon\" nz-icon nzType=\"file\" class=\"ant-tree-switcher-line-icon\"></i>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    <ng-template #loadingTemplate>\n      <i nz-icon nzType=\"loading\" [nzSpin]=\"true\" class=\"ant-tree-switcher-loading-icon\"></i>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-select-tree-switcher]': 'nzSelectMode',\n    '[class.ant-select-tree-switcher-noop]': 'nzSelectMode && isLeaf',\n    '[class.ant-select-tree-switcher_open]': 'nzSelectMode && isSwitcherOpen',\n    '[class.ant-select-tree-switcher_close]': 'nzSelectMode && isSwitcherClose',\n    '[class.ant-tree-switcher]': '!nzSelectMode',\n    '[class.ant-tree-switcher-noop]': '!nzSelectMode && isLeaf',\n    '[class.ant-tree-switcher_open]': '!nzSelectMode && isSwitcherOpen',\n    '[class.ant-tree-switcher_close]': '!nzSelectMode && isSwitcherClose'\n  }\n})\nexport class NzTreeNodeSwitcherComponent {\n  @Input() nzShowExpand: boolean;\n  @Input() nzShowLine: boolean;\n  @Input() nzExpandedIcon: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzSelectMode = false;\n  @Input() context: NzTreeNode;\n  @Input() isLeaf: boolean;\n  @Input() isLoading: boolean;\n  @Input() isExpanded: boolean;\n\n  get isShowLineIcon(): boolean {\n    return !this.isLeaf && this.nzShowLine;\n  }\n\n  get isShowSwitchIcon(): boolean {\n    return !this.isLeaf && !this.nzShowLine;\n  }\n\n  get isSwitcherOpen(): boolean {\n    return this.isExpanded && !this.isLeaf;\n  }\n\n  get isSwitcherClose(): boolean {\n    return !this.isExpanded && !this.isLeaf;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\nimport { NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\n\n@Component({\n  selector: 'nz-tree-node-title',\n  template: ` <ng-template [ngTemplateOutlet]=\"treeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: context, origin: context.origin }\">\n    </ng-template>\n    <ng-container *ngIf=\"!treeTemplate\">\n      <span\n        *ngIf=\"icon && showIcon\"\n        [class.ant-tree-icon__open]=\"isSwitcherOpen\"\n        [class.ant-tree-icon__close]=\"isSwitcherClose\"\n        [class.ant-tree-icon_loading]=\"isLoading\"\n        [class.ant-select-tree-iconEle]=\"selectMode\"\n        [class.ant-tree-iconEle]=\"!selectMode\"\n      >\n        <span\n          [class.ant-select-tree-iconEle]=\"selectMode\"\n          [class.ant-select-tree-icon__customize]=\"selectMode\"\n          [class.ant-tree-iconEle]=\"!selectMode\"\n          [class.ant-tree-icon__customize]=\"!selectMode\"\n        >\n          <i nz-icon *ngIf=\"icon\" [nzType]=\"icon\"></i>\n        </span>\n      </span>\n      <span class=\"ant-tree-title\" [innerHTML]=\"title | nzHighlight: matchedValue:'i':'font-highlight'\"> </span>\n    </ng-container>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[attr.title]': 'title',\n    '[attr.draggable]': 'canDraggable',\n    '[attr.aria-grabbed]': 'canDraggable',\n    '[class.draggable]': 'canDraggable',\n    '[class.ant-select-tree-node-content-wrapper]': `selectMode`,\n    '[class.ant-select-tree-node-content-wrapper-open]': `selectMode && isSwitcherOpen`,\n    '[class.ant-select-tree-node-content-wrapper-close]': `selectMode && isSwitcherClose`,\n    '[class.ant-select-tree-node-selected]': `selectMode && isSelected`,\n    '[class.ant-tree-node-content-wrapper]': `!selectMode`,\n    '[class.ant-tree-node-content-wrapper-open]': `!selectMode && isSwitcherOpen`,\n    '[class.ant-tree-node-content-wrapper-close]': `!selectMode && isSwitcherClose`,\n    '[class.ant-tree-node-selected]': `!selectMode && isSelected`\n  }\n})\nexport class NzTreeNodeTitleComponent {\n  @Input() searchValue: string;\n  @Input() treeTemplate: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() draggable: boolean;\n  @Input() showIcon: boolean;\n  @Input() selectMode = false;\n  @Input() context: NzTreeNode;\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() isLoading: boolean;\n  @Input() isSelected: boolean;\n  @Input() isDisabled: boolean;\n  @Input() isMatched: boolean;\n  @Input() isExpanded: boolean;\n  @Input() isLeaf: boolean;\n\n  get canDraggable(): boolean | null {\n    return this.draggable && !this.isDisabled ? true : null;\n  }\n\n  get matchedValue(): string {\n    return this.isMatched ? this.searchValue : '';\n  }\n\n  get isSwitcherOpen(): boolean {\n    return this.isExpanded && !this.isLeaf;\n  }\n\n  get isSwitcherClose(): boolean {\n    return !this.isExpanded && !this.isLeaf;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  SimpleChange,\n  TemplateRef\n} from '@angular/core';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\n\nimport { NzFormatBeforeDropEvent, NzFormatEmitEvent, NzTreeBaseService, NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'nz-tree-node',\n  exportAs: 'nzTreeNode',\n  template: `\n    <nz-tree-indent [nzTreeLevel]=\"nzTreeNode.level\" [nzSelectMode]=\"nzSelectMode\" [nzIsStart]=\"isStart\" [nzIsEnd]=\"isEnd\"></nz-tree-indent>\n    <nz-tree-node-switcher\n      *ngIf=\"nzShowExpand\"\n      [nzShowExpand]=\"nzShowExpand\"\n      [nzShowLine]=\"nzShowLine\"\n      [nzExpandedIcon]=\"nzExpandedIcon\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [context]=\"nzTreeNode\"\n      [isLeaf]=\"isLeaf\"\n      [isExpanded]=\"isExpanded\"\n      [isLoading]=\"isLoading\"\n      (click)=\"clickExpand($event)\"\n    ></nz-tree-node-switcher>\n    <nz-tree-node-checkbox\n      *ngIf=\"nzCheckable\"\n      (click)=\"clickCheckBox($event)\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [isChecked]=\"isChecked\"\n      [isHalfChecked]=\"isHalfChecked\"\n      [isDisabled]=\"isDisabled\"\n      [isDisableCheckbox]=\"isDisableCheckbox\"\n    ></nz-tree-node-checkbox>\n    <nz-tree-node-title\n      [icon]=\"icon\"\n      [title]=\"title\"\n      [isLoading]=\"isLoading\"\n      [isSelected]=\"isSelected\"\n      [isDisabled]=\"isDisabled\"\n      [isMatched]=\"isMatched\"\n      [isExpanded]=\"isExpanded\"\n      [isLeaf]=\"isLeaf\"\n      [searchValue]=\"nzSearchValue\"\n      [treeTemplate]=\"nzTreeTemplate\"\n      [draggable]=\"nzDraggable\"\n      [showIcon]=\"nzShowIcon\"\n      [selectMode]=\"nzSelectMode\"\n      [context]=\"nzTreeNode\"\n      (dblclick)=\"dblClick($event)\"\n      (click)=\"clickSelect($event)\"\n      (contextmenu)=\"contextMenu($event)\"\n    ></nz-tree-node-title>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-select-tree-treenode]': `nzSelectMode`,\n    '[class.ant-select-tree-treenode-disabled]': `nzSelectMode && isDisabled`,\n    '[class.ant-select-tree-treenode-switcher-open]': `nzSelectMode && isSwitcherOpen`,\n    '[class.ant-select-tree-treenode-switcher-close]': `nzSelectMode && isSwitcherClose`,\n    '[class.ant-select-tree-treenode-checkbox-checked]': `nzSelectMode && isChecked`,\n    '[class.ant-select-tree-treenode-checkbox-indeterminate]': `nzSelectMode && isHalfChecked`,\n    '[class.ant-select-tree-treenode-selected]': `nzSelectMode && isSelected`,\n    '[class.ant-select-tree-treenode-loading]': `nzSelectMode && isLoading`,\n    '[class.ant-tree-treenode]': `!nzSelectMode`,\n    '[class.ant-tree-treenode-disabled]': `!nzSelectMode && isDisabled`,\n    '[class.ant-tree-treenode-switcher-open]': `!nzSelectMode && isSwitcherOpen`,\n    '[class.ant-tree-treenode-switcher-close]': `!nzSelectMode && isSwitcherClose`,\n    '[class.ant-tree-treenode-checkbox-checked]': `!nzSelectMode && isChecked`,\n    '[class.ant-tree-treenode-checkbox-indeterminate]': `!nzSelectMode && isHalfChecked`,\n    '[class.ant-tree-treenode-selected]': `!nzSelectMode && isSelected`,\n    '[class.ant-tree-treenode-loading]': `!nzSelectMode && isLoading`,\n    '[style.display]': 'displayStyle',\n    '(mousedown)': 'onMousedown($event)'\n  }\n})\nexport class NzTreeNodeComponent implements OnInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_nzShowLine: BooleanInput;\n  static ngAcceptInputType_nzShowExpand: BooleanInput;\n  static ngAcceptInputType_nzCheckable: BooleanInput;\n  static ngAcceptInputType_nzAsyncData: BooleanInput;\n  static ngAcceptInputType_nzHideUnMatched: BooleanInput;\n  static ngAcceptInputType_nzNoAnimation: BooleanInput;\n  static ngAcceptInputType_nzSelectMode: BooleanInput;\n  static ngAcceptInputType_nzShowIcon: BooleanInput;\n\n  /**\n   * for global property\n   */\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() isLoading: boolean;\n  @Input() isSelected: boolean;\n  @Input() isDisabled: boolean;\n  @Input() isMatched: boolean;\n  @Input() isExpanded: boolean;\n  @Input() isLeaf: boolean;\n  @Input() isChecked: boolean;\n  @Input() isHalfChecked: boolean;\n  @Input() isDisableCheckbox: boolean;\n  @Input() isSelectable: boolean;\n  @Input() canHide: boolean;\n  @Input() isStart: boolean[];\n  @Input() isEnd: boolean[];\n  @Input() nzTreeNode: NzTreeNode;\n  @Input() @InputBoolean() nzShowLine: boolean;\n  @Input() @InputBoolean() nzShowExpand: boolean;\n  @Input() @InputBoolean() nzCheckable: boolean;\n  @Input() @InputBoolean() nzAsyncData: boolean;\n  @Input() @InputBoolean() nzHideUnMatched = false;\n  @Input() @InputBoolean() nzNoAnimation = false;\n  @Input() @InputBoolean() nzSelectMode = false;\n  @Input() @InputBoolean() nzShowIcon = false;\n  @Input() nzExpandedIcon: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzTreeTemplate: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzBeforeDrop: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\n  @Input() nzSearchValue = '';\n  @Input() nzDraggable: boolean;\n  @Output() readonly nzClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzDblClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzContextMenu = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzExpandChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragStart = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnter = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragOver = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragLeave = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDrop = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnd = new EventEmitter<NzFormatEmitEvent>();\n\n  /**\n   * drag var\n   */\n  destroy$ = new Subject();\n  dragPos = 2;\n  dragPosClass: { [key: string]: string } = {\n    '0': 'drag-over',\n    '1': 'drag-over-gap-bottom',\n    '-1': 'drag-over-gap-top'\n  };\n\n  /**\n   * default set\n   */\n  get displayStyle(): string {\n    // to hide unmatched nodes\n    return this.nzSearchValue && this.nzHideUnMatched && !this.isMatched && !this.isExpanded && this.canHide ? 'none' : '';\n  }\n\n  get isSwitcherOpen(): boolean {\n    return this.isExpanded && !this.isLeaf;\n  }\n\n  get isSwitcherClose(): boolean {\n    return !this.isExpanded && !this.isLeaf;\n  }\n\n  onMousedown(event: MouseEvent): void {\n    if (this.nzSelectMode) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * collapse node\n   * @param event\n   */\n  clickExpand(event: MouseEvent): void {\n    event.preventDefault();\n    if (!this.isLoading && !this.isLeaf) {\n      // set async state\n      if (this.nzAsyncData && this.nzTreeNode.children.length === 0 && !this.isExpanded) {\n        this.nzTreeNode.isLoading = true;\n      }\n      this.nzTreeNode.setExpanded(!this.isExpanded);\n    }\n    this.nzTreeService.setExpandedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('expand', this.nzTreeNode, event);\n    this.nzExpandChange.emit(eventNext);\n  }\n\n  clickSelect(event: MouseEvent): void {\n    event.preventDefault();\n    if (this.isSelectable && !this.isDisabled) {\n      this.nzTreeNode.isSelected = !this.nzTreeNode.isSelected;\n    }\n    this.nzTreeService.setSelectedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('click', this.nzTreeNode, event);\n    this.nzClick.emit(eventNext);\n  }\n\n  dblClick(event: MouseEvent): void {\n    event.preventDefault();\n    const eventNext = this.nzTreeService.formatEvent('dblclick', this.nzTreeNode, event);\n    this.nzDblClick.emit(eventNext);\n  }\n\n  contextMenu(event: MouseEvent): void {\n    event.preventDefault();\n    const eventNext = this.nzTreeService.formatEvent('contextmenu', this.nzTreeNode, event);\n    this.nzContextMenu.emit(eventNext);\n  }\n\n  /**\n   * check node\n   * @param event\n   */\n  clickCheckBox(event: MouseEvent): void {\n    event.preventDefault();\n    // return if node is disabled\n    if (this.isDisabled || this.isDisableCheckbox) {\n      return;\n    }\n    this.nzTreeNode.isChecked = !this.nzTreeNode.isChecked;\n    this.nzTreeNode.isHalfChecked = false;\n    this.nzTreeService.setCheckedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('check', this.nzTreeNode, event);\n    this.nzCheckBoxChange.emit(eventNext);\n  }\n\n  clearDragClass(): void {\n    const dragClass = ['drag-over-gap-top', 'drag-over-gap-bottom', 'drag-over'];\n    dragClass.forEach(e => {\n      this.renderer.removeClass(this.elementRef.nativeElement, e);\n    });\n  }\n\n  /**\n   * drag event\n   * @param e\n   */\n  handleDragStart(e: DragEvent): void {\n    try {\n      // ie throw error\n      // firefox-need-it\n      e.dataTransfer!.setData('text/plain', this.nzTreeNode.key!);\n    } catch (error) {\n      // empty\n    }\n    this.nzTreeService.setSelectedNode(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('dragstart', this.nzTreeNode, e);\n    this.nzOnDragStart.emit(eventNext);\n  }\n\n  handleDragEnter(e: DragEvent): void {\n    e.preventDefault();\n    // reset position\n    this.dragPos = 2;\n    this.ngZone.run(() => {\n      const eventNext = this.nzTreeService.formatEvent('dragenter', this.nzTreeNode, e);\n      this.nzOnDragEnter.emit(eventNext);\n    });\n  }\n\n  handleDragOver(e: DragEvent): void {\n    e.preventDefault();\n    const dropPosition = this.nzTreeService.calcDropPosition(e);\n    if (this.dragPos !== dropPosition) {\n      this.clearDragClass();\n      this.dragPos = dropPosition;\n      // leaf node will pass\n      if (!(this.dragPos === 0 && this.isLeaf)) {\n        this.renderer.addClass(this.elementRef.nativeElement, this.dragPosClass[this.dragPos]);\n      }\n    }\n    const eventNext = this.nzTreeService.formatEvent('dragover', this.nzTreeNode, e);\n    this.nzOnDragOver.emit(eventNext);\n  }\n\n  handleDragLeave(e: DragEvent): void {\n    e.preventDefault();\n    this.clearDragClass();\n    const eventNext = this.nzTreeService.formatEvent('dragleave', this.nzTreeNode, e);\n    this.nzOnDragLeave.emit(eventNext);\n  }\n\n  handleDragDrop(e: DragEvent): void {\n    this.ngZone.run(() => {\n      this.clearDragClass();\n      const node = this.nzTreeService.getSelectedNode();\n      if (!node || (node && node.key === this.nzTreeNode.key) || (this.dragPos === 0 && this.isLeaf)) {\n        return;\n      }\n      // pass if node is leafNo\n      const dropEvent = this.nzTreeService.formatEvent('drop', this.nzTreeNode, e);\n      const dragEndEvent = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n      if (this.nzBeforeDrop) {\n        this.nzBeforeDrop({\n          dragNode: this.nzTreeService.getSelectedNode()!,\n          node: this.nzTreeNode,\n          pos: this.dragPos\n        }).subscribe((canDrop: boolean) => {\n          if (canDrop) {\n            this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n          }\n          this.nzOnDrop.emit(dropEvent);\n          this.nzOnDragEnd.emit(dragEndEvent);\n        });\n      } else if (this.nzTreeNode) {\n        this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n        this.nzOnDrop.emit(dropEvent);\n      }\n    });\n  }\n\n  handleDragEnd(e: DragEvent): void {\n    e.preventDefault();\n    this.ngZone.run(() => {\n      // if user do not custom beforeDrop\n      if (!this.nzBeforeDrop) {\n        const eventNext = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n        this.nzOnDragEnd.emit(eventNext);\n      }\n    });\n  }\n\n  /**\n   * Listening to dragging events.\n   */\n  handDragEvent(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.nzDraggable) {\n        const nativeElement = this.elementRef.nativeElement;\n        this.destroy$ = new Subject();\n        fromEvent<DragEvent>(nativeElement, 'dragstart')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragStart(e));\n        fromEvent<DragEvent>(nativeElement, 'dragenter')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragEnter(e));\n        fromEvent<DragEvent>(nativeElement, 'dragover')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragOver(e));\n        fromEvent<DragEvent>(nativeElement, 'dragleave')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragLeave(e));\n        fromEvent<DragEvent>(nativeElement, 'drop')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragDrop(e));\n        fromEvent<DragEvent>(nativeElement, 'dragend')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragEnd(e));\n      } else {\n        this.destroy$.next();\n        this.destroy$.complete();\n      }\n    });\n  }\n\n  markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n\n  constructor(\n    public nzTreeService: NzTreeBaseService,\n    private ngZone: NgZone,\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {}\n\n  ngOnInit(): void {\n    this.nzTreeNode.component = this;\n  }\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n    const { nzDraggable } = changes;\n    if (nzDraggable) {\n      this.handDragEvent();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\nimport { NzTreeBaseService } from 'ng-zorro-antd/core/tree';\n\n@Injectable()\nexport class NzTreeService extends NzTreeBaseService {\n  constructor() {\n    super();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SkipSelf,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { treeCollapseMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport {\n  flattenTreeData,\n  NzFormatBeforeDropEvent,\n  NzFormatEmitEvent,\n  NzTreeBase,\n  NzTreeBaseService,\n  NzTreeHigherOrderServiceToken,\n  NzTreeNode,\n  NzTreeNodeKey,\n  NzTreeNodeOptions\n} from 'ng-zorro-antd/core/tree';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzTreeService } from './tree.service';\n\nexport function NzTreeServiceFactory(higherOrderService: NzTreeBaseService, treeService: NzTreeService): NzTreeBaseService {\n  return higherOrderService ? higherOrderService : treeService;\n}\n\nconst NZ_CONFIG_COMPONENT_NAME = 'tree';\n\n@Component({\n  selector: 'nz-tree',\n  exportAs: 'nzTree',\n  animations: [treeCollapseMotion],\n  template: `\n    <div role=\"tree\">\n      <input [ngStyle]=\"HIDDEN_STYLE\" />\n    </div>\n    <div [class.ant-select-tree-list]=\"nzSelectMode\" [class.ant-tree-list]=\"nzSelectMode\">\n      <div>\n        <cdk-virtual-scroll-viewport\n          *ngIf=\"nzVirtualHeight\"\n          [class.ant-select-tree-list-holder-inner]=\"nzSelectMode\"\n          [class.ant-tree-list-holder-inner]=\"nzSelectMode\"\n          [itemSize]=\"nzVirtualItemSize\"\n          [minBufferPx]=\"nzVirtualMinBufferPx\"\n          [maxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [style.height]=\"nzVirtualHeight\"\n        >\n          <ng-container *cdkVirtualFor=\"let node of nzFlattenNodes; trackBy: trackByFlattenNode\">\n            <ng-template [ngTemplateOutlet]=\"nodeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: node }\"></ng-template>\n          </ng-container>\n        </cdk-virtual-scroll-viewport>\n\n        <div\n          *ngIf=\"!nzVirtualHeight\"\n          [class.ant-select-tree-list-holder-inner]=\"nzSelectMode\"\n          [class.ant-tree-list-holder-inner]=\"nzSelectMode\"\n          [@.disabled]=\"beforeInit || noAnimation?.nzNoAnimation\"\n          [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n          [@treeCollapseMotion]=\"nzFlattenNodes.length\"\n        >\n          <ng-container *ngFor=\"let node of nzFlattenNodes; trackBy: trackByFlattenNode\">\n            <ng-template [ngTemplateOutlet]=\"nodeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: node }\"></ng-template>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n    <ng-template #nodeTemplate let-treeNode>\n      <nz-tree-node\n        [icon]=\"treeNode.icon\"\n        [title]=\"treeNode.title\"\n        [isLoading]=\"treeNode.isLoading\"\n        [isSelected]=\"treeNode.isSelected\"\n        [isDisabled]=\"treeNode.isDisabled\"\n        [isMatched]=\"treeNode.isMatched\"\n        [isExpanded]=\"treeNode.isExpanded\"\n        [isLeaf]=\"treeNode.isLeaf\"\n        [isStart]=\"treeNode.isStart\"\n        [isEnd]=\"treeNode.isEnd\"\n        [isChecked]=\"treeNode.isChecked\"\n        [isHalfChecked]=\"treeNode.isHalfChecked\"\n        [isDisableCheckbox]=\"treeNode.isDisableCheckbox\"\n        [isSelectable]=\"treeNode.isSelectable\"\n        [canHide]=\"treeNode.canHide\"\n        [nzTreeNode]=\"treeNode\"\n        [nzSelectMode]=\"nzSelectMode\"\n        [nzShowLine]=\"nzShowLine\"\n        [nzExpandedIcon]=\"nzExpandedIcon\"\n        [nzDraggable]=\"nzDraggable\"\n        [nzCheckable]=\"nzCheckable\"\n        [nzShowExpand]=\"nzShowExpand\"\n        [nzAsyncData]=\"nzAsyncData\"\n        [nzSearchValue]=\"nzSearchValue\"\n        [nzHideUnMatched]=\"nzHideUnMatched\"\n        [nzBeforeDrop]=\"nzBeforeDrop\"\n        [nzShowIcon]=\"nzShowIcon\"\n        [nzTreeTemplate]=\"nzTreeTemplate || nzTreeTemplateChild\"\n        (nzExpandChange)=\"eventTriggerChanged($event)\"\n        (nzClick)=\"eventTriggerChanged($event)\"\n        (nzDblClick)=\"eventTriggerChanged($event)\"\n        (nzContextMenu)=\"eventTriggerChanged($event)\"\n        (nzCheckBoxChange)=\"eventTriggerChanged($event)\"\n        (nzOnDragStart)=\"eventTriggerChanged($event)\"\n        (nzOnDragEnter)=\"eventTriggerChanged($event)\"\n        (nzOnDragOver)=\"eventTriggerChanged($event)\"\n        (nzOnDragLeave)=\"eventTriggerChanged($event)\"\n        (nzOnDragEnd)=\"eventTriggerChanged($event)\"\n        (nzOnDrop)=\"eventTriggerChanged($event)\"\n      >\n      </nz-tree-node>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NzTreeService,\n    {\n      provide: NzTreeBaseService,\n      useFactory: NzTreeServiceFactory,\n      deps: [[new SkipSelf(), new Optional(), NzTreeHigherOrderServiceToken], NzTreeService]\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzTreeComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-select-tree]': `nzSelectMode`,\n    '[class.ant-select-tree-show-line]': `nzSelectMode && nzShowLine`,\n    '[class.ant-select-tree-icon-hide]': `nzSelectMode && !nzShowIcon`,\n    '[class.ant-select-tree-block-node]': `nzSelectMode && nzBlockNode`,\n    '[class.ant-tree]': `!nzSelectMode`,\n    '[class.ant-tree-show-line]': `!nzSelectMode && nzShowLine`,\n    '[class.ant-tree-icon-hide]': `!nzSelectMode && !nzShowIcon`,\n    '[class.ant-tree-block-node]': `!nzSelectMode && nzBlockNode`,\n    '[class.draggable-tree]': `nzDraggable`\n  }\n})\nexport class NzTreeComponent extends NzTreeBase implements OnInit, OnDestroy, ControlValueAccessor, OnChanges, AfterViewInit {\n  static ngAcceptInputType_nzShowIcon: BooleanInput;\n  static ngAcceptInputType_nzHideUnMatched: BooleanInput;\n  static ngAcceptInputType_nzBlockNode: BooleanInput;\n  static ngAcceptInputType_nzExpandAll: BooleanInput;\n  static ngAcceptInputType_nzSelectMode: BooleanInput;\n  static ngAcceptInputType_nzCheckStrictly: BooleanInput;\n  static ngAcceptInputType_nzShowExpand: BooleanInput;\n  static ngAcceptInputType_nzShowLine: BooleanInput;\n  static ngAcceptInputType_nzCheckable: BooleanInput;\n  static ngAcceptInputType_nzAsyncData: BooleanInput;\n  static ngAcceptInputType_nzDraggable: BooleanInput;\n  static ngAcceptInputType_nzMultiple: BooleanInput;\n\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) nzShowIcon: boolean;\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) nzHideUnMatched: boolean;\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) nzBlockNode: boolean;\n  @Input() @InputBoolean() nzExpandAll = false;\n  @Input() @InputBoolean() nzSelectMode = false;\n  @Input() @InputBoolean() nzCheckStrictly = false;\n  @Input() @InputBoolean() nzShowExpand: boolean = true;\n  @Input() @InputBoolean() nzShowLine = false;\n  @Input() @InputBoolean() nzCheckable = false;\n  @Input() @InputBoolean() nzAsyncData = false;\n  @Input() @InputBoolean() nzDraggable: boolean = false;\n  @Input() @InputBoolean() nzMultiple = false;\n  @Input() nzExpandedIcon: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzVirtualItemSize = 28;\n  @Input() nzVirtualMaxBufferPx = 500;\n  @Input() nzVirtualMinBufferPx = 28;\n  @Input() nzVirtualHeight: number | boolean = false;\n  @Input() nzTreeTemplate: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzBeforeDrop: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\n  @Input() nzData: NzTreeNodeOptions[] | NzTreeNode[] = [];\n  @Input() nzExpandedKeys: NzTreeNodeKey[] = [];\n  @Input() nzSelectedKeys: NzTreeNodeKey[] = [];\n  @Input() nzCheckedKeys: NzTreeNodeKey[] = [];\n  @Input() nzSearchValue: string;\n  @Input() nzSearchFunc: (node: NzTreeNodeOptions) => boolean;\n  @ContentChild('nzTreeTemplate', { static: true }) nzTreeTemplateChild: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @ViewChild(CdkVirtualScrollViewport, { read: CdkVirtualScrollViewport }) cdkVirtualScrollViewport: CdkVirtualScrollViewport;\n  nzFlattenNodes: NzTreeNode[] = [];\n  beforeInit = true;\n\n  @Output() readonly nzExpandedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzSelectedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzCheckedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzSearchValueChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzDblClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzContextMenu = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzExpandChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragStart = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnter = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragOver = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragLeave = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDrop = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnd = new EventEmitter<NzFormatEmitEvent>();\n\n  HIDDEN_STYLE = {\n    width: 0,\n    height: 0,\n    display: 'flex',\n    overflow: 'hidden',\n    opacity: 0,\n    border: 0,\n    padding: 0,\n    margin: 0\n  };\n\n  destroy$ = new Subject();\n\n  onChange: (value: NzTreeNode[]) => void = () => null;\n  onTouched: () => void = () => null;\n\n  writeValue(value: NzTreeNode[]): void {\n    this.handleNzData(value);\n  }\n\n  registerOnChange(fn: (_: NzTreeNode[]) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Render all properties of nzTree\n   * @param changes: all changes from @Input\n   */\n  renderTreeProperties(changes: { [propertyName: string]: SimpleChange }): void {\n    let useDefaultExpandedKeys = false;\n    let expandAll = false;\n    const { nzData, nzExpandedKeys, nzSelectedKeys, nzCheckedKeys, nzCheckStrictly, nzExpandAll, nzMultiple, nzSearchValue } = changes;\n\n    if (nzExpandAll) {\n      useDefaultExpandedKeys = true;\n      expandAll = this.nzExpandAll;\n    }\n\n    if (nzMultiple) {\n      this.nzTreeService.isMultiple = this.nzMultiple;\n    }\n\n    if (nzCheckStrictly) {\n      this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n    }\n\n    if (nzData) {\n      this.handleNzData(this.nzData);\n    }\n\n    if (nzCheckedKeys || nzCheckStrictly) {\n      this.handleCheckedKeys(this.nzCheckedKeys);\n    }\n\n    if (nzExpandedKeys || nzExpandAll) {\n      useDefaultExpandedKeys = true;\n      this.handleExpandedKeys(expandAll || this.nzExpandedKeys);\n    }\n\n    if (nzSelectedKeys) {\n      this.handleSelectedKeys(this.nzSelectedKeys, this.nzMultiple);\n    }\n\n    if (nzSearchValue) {\n      if (!(nzSearchValue.firstChange && !this.nzSearchValue)) {\n        useDefaultExpandedKeys = false;\n        this.handleSearchValue(this.nzSearchValue, this.nzSearchFunc);\n        this.nzSearchValueChange.emit(this.nzTreeService.formatEvent('search', null, null));\n      }\n    }\n\n    // flatten data\n    const currentExpandedKeys = this.getExpandedNodeList().map(v => v.key);\n    const newExpandedKeys = useDefaultExpandedKeys ? expandAll || this.nzExpandedKeys : currentExpandedKeys;\n    this.handleFlattenNodes(this.nzTreeService.rootNodes, newExpandedKeys);\n  }\n\n  trackByFlattenNode(_: number, node: NzTreeNode): string {\n    return node.key;\n  }\n  // Deal with properties\n  /**\n   * nzData\n   * @param value\n   */\n  handleNzData(value: NzSafeAny[]): void {\n    if (Array.isArray(value)) {\n      const data = this.coerceTreeNodes(value);\n      this.nzTreeService.initTree(data);\n    }\n  }\n\n  handleFlattenNodes(data: NzTreeNode[], expandKeys: NzTreeNodeKey[] | true = []): void {\n    this.nzTreeService.flattenTreeData(data, expandKeys);\n  }\n\n  handleCheckedKeys(keys: NzTreeNodeKey[]): void {\n    this.nzTreeService.conductCheck(keys, this.nzCheckStrictly);\n  }\n\n  handleExpandedKeys(keys: NzTreeNodeKey[] | true = []): void {\n    this.nzTreeService.conductExpandedKeys(keys);\n  }\n\n  handleSelectedKeys(keys: NzTreeNodeKey[], isMulti: boolean): void {\n    this.nzTreeService.conductSelectedKeys(keys, isMulti);\n  }\n\n  handleSearchValue(value: string, searchFunc?: (node: NzTreeNodeOptions) => boolean): void {\n    const dataList = flattenTreeData(this.nzTreeService.rootNodes, true).map(v => v.data);\n    const checkIfMatched = (node: NzTreeNode): boolean => {\n      if (searchFunc) {\n        return searchFunc(node.origin);\n      }\n      return !value || !node.title.toLowerCase().includes(value.toLowerCase()) ? false : true;\n    };\n    dataList.forEach(v => {\n      v.isMatched = checkIfMatched(v);\n      v.canHide = !v.isMatched;\n      if (!v.isMatched) {\n        v.setExpanded(false);\n        this.nzTreeService.setExpandedNodeList(v);\n      } else {\n        // expand\n        this.nzTreeService.expandNodeAllParentBySearch(v);\n      }\n      this.nzTreeService.setMatchedNodeList(v);\n    });\n  }\n\n  /**\n   * Handle emit event\n   * @param event\n   * handle each event\n   */\n  eventTriggerChanged(event: NzFormatEmitEvent): void {\n    const node = event.node!;\n    switch (event.eventName) {\n      case 'expand':\n        this.renderTree();\n        this.nzExpandChange.emit(event);\n        break;\n      case 'click':\n        this.nzClick.emit(event);\n        break;\n      case 'dblclick':\n        this.nzDblClick.emit(event);\n        break;\n      case 'contextmenu':\n        this.nzContextMenu.emit(event);\n        break;\n      case 'check':\n        // Render checked state with nodes' property `isChecked`\n        this.nzTreeService.setCheckedNodeList(node);\n        if (!this.nzCheckStrictly) {\n          this.nzTreeService.conduct(node);\n        }\n        // Cause check method will rerender list, so we need recover it and next the new event to user\n        const eventNext = this.nzTreeService.formatEvent('check', node, event.event!);\n        this.nzCheckBoxChange.emit(eventNext);\n        break;\n      case 'dragstart':\n        // if node is expanded\n        if (node.isExpanded) {\n          node.setExpanded(!node.isExpanded);\n          this.renderTree();\n        }\n        this.nzOnDragStart.emit(event);\n        break;\n      case 'dragenter':\n        const selectedNode = this.nzTreeService.getSelectedNode();\n        if (selectedNode && selectedNode.key !== node.key && !node.isExpanded && !node.isLeaf) {\n          node.setExpanded(true);\n          this.renderTree();\n        }\n        this.nzOnDragEnter.emit(event);\n        break;\n      case 'dragover':\n        this.nzOnDragOver.emit(event);\n        break;\n      case 'dragleave':\n        this.nzOnDragLeave.emit(event);\n        break;\n      case 'dragend':\n        this.nzOnDragEnd.emit(event);\n        break;\n      case 'drop':\n        this.renderTree();\n        this.nzOnDrop.emit(event);\n        break;\n    }\n  }\n\n  /**\n   * Click expand icon\n   */\n  renderTree(): void {\n    this.handleFlattenNodes(\n      this.nzTreeService.rootNodes,\n      this.getExpandedNodeList().map(v => v.key)\n    );\n    this.cdr.markForCheck();\n  }\n  // Handle emit event end\n\n  constructor(\n    nzTreeService: NzTreeBaseService,\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {\n    super(nzTreeService);\n  }\n\n  ngOnInit(): void {\n    this.nzTreeService.flattenNodes$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n      this.nzFlattenNodes = data;\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n    this.renderTreeProperties(changes);\n  }\n\n  ngAfterViewInit(): void {\n    this.beforeInit = false;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzHighlightModule } from 'ng-zorro-antd/core/highlight';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzTreeIndentComponent } from './tree-indent.component';\nimport { NzTreeNodeCheckboxComponent } from './tree-node-checkbox.component';\nimport { NzTreeNodeSwitcherComponent } from './tree-node-switcher.component';\nimport { NzTreeNodeTitleComponent } from './tree-node-title.component';\nimport { NzTreeNodeComponent } from './tree-node.component';\nimport { NzTreeComponent } from './tree.component';\n\n@NgModule({\n  imports: [CommonModule, NzOutletModule, NzIconModule, NzNoAnimationModule, NzHighlightModule, ScrollingModule],\n  declarations: [\n    NzTreeComponent,\n    NzTreeNodeComponent,\n    NzTreeIndentComponent,\n    NzTreeNodeSwitcherComponent,\n    NzTreeNodeCheckboxComponent,\n    NzTreeNodeTitleComponent\n  ],\n  exports: [NzTreeComponent, NzTreeNodeComponent, NzTreeIndentComponent]\n})\nexport class NzTreeModule {}\n"]}