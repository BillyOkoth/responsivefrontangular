{"version":3,"file":"ng-zorro-antd-checkbox.js","sources":["ng:/ng-zorro-antd/checkbox/checkbox-wrapper.component.ts","ng:/ng-zorro-antd/checkbox/checkbox.component.ts","ng:/ng-zorro-antd/checkbox/checkbox-group.component.ts","ng:/ng-zorro-antd/checkbox/checkbox.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAuCE,oCAAY,QAAmB,EAAE,UAAsB;AACzD,QAjBqB,eAAU,GAAG,IAAI,YAAY,EAAe,CAAC;AAClE,QAAU,iBAAY,GAA0B,EAAE,CAAC;AACnD,QAeI,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,EAAE,oBAAoB,CAAC,CAAC;AACtE,KAAG;AACH;AACM;AAAwB;AAAmB;AAAQ,IAjBvD,gDAAW;AAAO;AAAwB;AAC/B;AAAQ,IADnB,UAAY,KAA0B;AAAI,QACxC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClC,KAAG;AAEH;AAAQ;AAAwB;AAAmB;AAC7C,IADJ,mDAAc;AAAO;AAAwB;AAClC;AAAQ,IADnB,UAAe,KAA0B;AAAI,QAC3C,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AAClE,KAAG;AAEH;AAAQ;AACF;AAAQ,IADZ,6CAAQ;AAAO;AACF;AAAQ,IADrB;AAAc;AACI,YAAV,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM;AAAM;AAA2B;AACpF;AAAY,QADwC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,SAAS,GAAA,EAAC,CAAC,GAAG;AAAM;AAChF;AAAuB;AAAY,QADwC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,OAAO,GAAA,EAAC;AACzG,QAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;AAC7C,KAAG,CAfK;AAAC;uCAVR,SAAS,SAAC,zDAUqB;QAT9B,QAAQ,EAAE,lBAUiD,gBAfkB,SAAS;UAKvD,VAL2D,gBAA/C,UAAU;GAMrD,HANwD;CAMhD,EAAE,mBAAmB,sBAC7B,5CAPkE;aAO/C,EAAE,KAAK,pBAP0F,6BAenH,MAAM;GAPP,HAOW;WAPI,EAAE,uBAAuB,CAAC,MAAM,sBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI,sBACrC,QAAQ,EAAE,qCAET,kBACF;;;;;;;;;;;;;;;;;oBAEkB;AAAC,IAmBpB,iCAAC;AACA,CA/BD,IA8BC;AACD;AAAa;AAAqB,IApBhC,gDAAgE;AAClE;AAAQ;AAAiB;AAAgB;AAAQ,IAA/C,kDAAiD;AACnD;AACC;AAAC;AAAI;AAAkC;AACT;AAO/B;AAAI;AACkC,IC+FpC,6BACU,UAAmC,EACvB,0BAAsD,EAClE,GAAsB,EACtB,YAA0B;AACnC,QAJS,eAAU,GAAV,UAAU,CAAyB;AAAC,QACxB,+BAA0B,GAA1B,0BAA0B,CAA4B;AAAC,QACnE,QAAG,GAAH,GAAG,CAAmB;AAAC,QACvB,iBAAY,GAAZ,YAAY,CAAc;AACtC,QA1DE,aAAQ;AAAQ;AACd;AAAY,QADW,eAAQ,EAAC;AACpC,QAAE,cAAS;AAAQ;AAChB;AAAY,QADc,eAAQ,EAAC;AACtC,QACqB,oBAAe,GAAG,IAAI,YAAY,EAAW,CAAC;AACnE,QAAW,YAAO,GAAqB,IAAI,CAAC;AAC5C,QAA2B,gBAAW,GAAG,KAAK,CAAC;AAC/C,QAA2B,eAAU,GAAG,KAAK,CAAC;AAC9C,QAA2B,oBAAe,GAAG,KAAK,CAAC;AACnD,QAA2B,cAAS,GAAG,KAAK,CAAC;AAC7C,KAiDM;AACN;AACO;AACD;AAAmB;AAAQ,IAnD/B,uCAAS;AAAO;AACf;AAAmB;AAChB,IAFJ,UAAU,CAAa;AAAI,QACzB,CAAC,CAAC,cAAc,EAAE,CAAC;AACvB,QAAI,IAAI,CAAC,KAAK,EAAE,CAAC;AACjB,QAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7C,KAAG;AAEH;AAAQ;AAA0B;AAC5B;AAAQ,IADZ,gDAAkB;AAAO;AACrB;AAAmB;AACpB,IAFH,UAAmB,OAAgB;AAAI,QACrC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAC1B,YAAM,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;AAC/B,YAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACpC,YAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAChD,YAAM,IAAI,IAAI,CAAC,0BAA0B,EAAE;AAC3C,gBAAQ,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,CAAC;AACnD,aAAO;AACP,SAAK;AACL,KAAG;AAEH;AAAQ;AAAwB;AAClB;AAAQ,IADpB,wCAAU;AAAO;AACb;AAAmB;AACpB,IAFH,UAAW,KAAc;AAAI,QAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC3B,QAAI,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAC5B,KAAG;AAEH;AAAQ;AAAqB;AAC1B;AAAQ,IADT,8CAAgB;AAAO;AACxB;AAAmB;AAEpB,IAHE,UAAiB,EAAgB;AAAI,QACnC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACvB,KAAG;AAEH;AAAQ;AAAqB;AAC5B;AAAQ,IADP,+CAAiB;AAAO;AAC1B;AAAmB;AACjB,IAFA,UAAkB,EAAiB;AAAI,QACrC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACxB,KAAG;AAEH;AAAQ;AAA2B;AAC3B;AAAQ,IADd,8CAAgB;AAAO;AACnB;AAAmB;AACxB,IAFC,UAAiB,QAAiB;AAAI,QACpC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;AAC/B,QAAI,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAC5B,KAAG;AAEH;AAAQ;AACC;AAAQ,IADf,mCAAK;AAAO;AACC;AAAQ,IADrB;AAAc,QACZ,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AAC9D,KAAG;AAEH;AAAQ;AACE;AAAQ,IADhB,kCAAI;AAAO;AACE;AAAQ,IADrB;AAAc,QACZ,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;AAC3C,KAAG;AAEH;AAAQ;AACI;AAAQ,IAMlB,sCAAQ;AAAO;AACF;AAAQ,IADrB;AAAc,QAAd,iBASC;AACH,QATI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS;AAAM;AAC9C;AACH;AAAY,QAFgC,UAAA,WAAW;AAAI,YACxE,IAAI,CAAC,WAAW,EAAE;AACxB,gBAAQ,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI;AAAM;AAEjC;AACY,gBAHgB,cAAM,OAAA,KAAI,CAAC,SAAS,EAAE,GAAA,EAAC,CAAC;AACvD,aAAO;AACP,SAAK,EAAC,CAAC;AACP,QAAI,IAAI,IAAI,CAAC,0BAA0B,EAAE;AACzC,YAAM,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AACxD,SAAK;AACL,KAAG;AACF;AAAQ;AACT;AAAQ,IADN,6CAAe;AAAO;AACT;AAAQ,IADrB;AAAc,QACZ,IAAI,IAAI,CAAC,WAAW,EAAE;AAC1B,YAAM,IAAI,CAAC,KAAK,EAAE,CAAC;AACnB,SAAK;AACL,KAAG;AAEH;AAAQ;AACL;AAAQ,IADT,yCAAW;AAAO;AACL;AAAQ,IADrB;AAAc,QACZ,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACtD,QAAI,IAAI,IAAI,CAAC,0BAA0B,EAAE;AACzC,YAAM,IAAI,CAAC,0BAA0B,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AAC3D,SAAK;AACL,KAAG,CAvFK;AAAC;gCAzCR,SAAS,SAAC,lDAyCqB;QAxC9B,QAAQ,EAAE,lBAwCoF,gBAzD9F,UAAU;GAiBe,sBACzB,QAAQ,EAAE,YAAY,sBACtB,rEAlBA,gBAaO,0BAA0B,uBAwG9B,QAAQ;QAnGQ,EAAE,KAAK,fAmGR,gBAxHlB,iBAAiB;AAsBjB,eAAe,EAAE,jBArBjB,gBALO,YAAY;SA0BqB,TA1BlB;AA0BmB,MAAM,sBAC/C,aAAa,zCA3BmB;AA2BjB,iBAAiB,CAAC,IAAI,sBACrC,QAAQ,EAAE,tDAzBX,+BAoEE,SAAS,SAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AAAO,kCACjD,MAAM;AAAK,0BACX,KAAK;AAAK,8BACV,KAAK;AAAK,6BACV,KAAK;AAAK,kCACV,KAAK;AAAK,4BACV,KAAK;AAAI;AAAO,IAHQ;AAAa,QAA5B,YAAY,EAAE;AAAE;AACN,4DADyB;AAC9C,IAA0B;AAAa,QAA5B,YAAY,EAAE;AAAE;AACL,2DADuB;AAC7C,IAA0B;AAAa,QAA5B,YAAY,EAAE;AAAE;AACV,gEADiC;GA3BhD,HA4BF,IAA0B;QA3BzB,SAAS,EAAE,nBA2B2B,QAA5B,YAAY,EAAE;qBA1BtB,rBA0BwB;SAzBtB,OAAO,EAAE,iBAAiB,nCA2BT,0DAFsB;KAxBvC,WAAW,EAAE,UAAU,6GAAC,cAAM,OAAA,mBAAmB,GAAA,EAAC,8BAClD,KAAK,EAAE,IAAI,0BACZ,sBACF,sBACD,IAAI,EAAE;aACJ,8BAA8B,EAAE,MAAM,0BACtC,sCAAsC,EAAE,WAAW,0BACnD,SAAS,EAAE,mBAAmB;gBAC/B,kBACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAgBD;AACA,IAwEA,0BAAC;AACA,CAlID,IAiIC;AACD;AAAa;AAAqB,IAxFhC,kDAAmD;AACrD;AAAqB,IAAnB,iDAAkD;AACpD;AAAqB,IAAnB,sDAAuD;AACzD;AAAqB,IAAnB,gDAAiD;AACnD;AACoB,IAAlB,uCAAkC;AACpC;AAAqB,IAAnB,wCAAoC;AACtC;AAAQ;AAAiB;AAAgB;AAAQ,IAA/C,2CAA8E;AAChF;AAAqB,IAAnB,8CAAiE;AACnE;AAAqB,IAAnB,sCAA0C;AAC5C;AAAqB,IAAnB,0CAA6C;AAC/C;AAAqB,IAAnB,yCAA4C;AAC9C;AAAqB,IAAnB,8CAAiD;AACnD;AAAqB,IAAnB,wCAA2C;AAC7C;AACO;AAAiB;AACnB;AAAQ,IA2CT,yCAA2C;AAAC;AACzC;AAAiB;AAAgB;AAAQ,IAA5C,yDAA0E;AAAC;AACxE;AAAiB;AACpB;AAAQ,IADR,kCAA8B;AAAC;AAC5B;AAAiB;AACvB;AAEA,IAHG,2CAAkC;AACtC;AAAE;AAAC;AACH;AAEY;AAA+C;AAK5C;AAAI;AAAI;AAAW;AAAI,wCC5HrC;AACD;AACY;AACQ,IAPlB,0CAAc;AAChB;AACI,IADF,0CAAc;AAChB;AACU,IADR,4CAAkB;AACpB;AAGM,IAHJ,6CAAmB;AACrB;AACA;AAGa,IAsCX,kCAAoB,UAAsB,EAAU,YAA0B,EAAU,GAAsB;AAAI,QAA9F,eAAU,GAAV,UAAU,CAAY;AAAC,QAAS,iBAAY,GAAZ,YAAY,CAAc;AAAC,QAAS,QAAG,GAAH,GAAG,CAAmB;AAAC,QAT/G,aAAQ;AAAQ;AACd;AAAY,QADW,eAAQ,EAAC;AACpC,QAAE,cAAS;AAAQ;AAChB;AAAY,QADc,eAAQ,EAAC;AACtC,QAAE,YAAO,GAAgC,EAAE,CAAC;AAC5C,QAA2B,eAAU,GAAG,KAAK,CAAC;AAC9C,KAKoH;AACpH;AACO;AACD;AAAyB;AAAmB;AAAQ,IAPxD,gDAAa;AAAO;AAAoB;AAAyB;AACrD;AAAQ,IADpB,UAAc,CAAS,EAAE,MAAiC;AAAI,QAC5D,OAAO,MAAM,CAAC,KAAK,CAAC;AACxB,KAAG;AAEH;AAAQ;AAAmB;AAAQ,IAEjC,2CAAQ;AAAO;AACF;AAAQ,IADrB;AAAc,QAAd,iBAMC;AACH,QANI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS;AAAM;AAC9C;AACH;AAAY,QAFgC,UAAA,WAAW;AAAI,YACxE,IAAI,CAAC,WAAW,EAAE;AACxB,gBAAQ,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI;AAAM;AAEjC;AAGO,gBALqB,cAAM,OAAA,KAAI,CAAC,SAAS,EAAE,GAAA,EAAC,CAAC;AACvD,aAAO;AACP,SAAK,EAAC,CAAC;AACP,KAAG;AAEH;AAAQ;AACL;AAAQ,IADT,8CAAW;AAAO;AACL;AAAQ,IADrB;AAAc,QACZ,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACtD,KAAG;AAEH;AAAQ;AAAwB;AAAmB;AACjD,IADA,6CAAU;AAAO;AAAwB;AACtC;AAAQ,IADX,UAAW,KAAkC;AAAI,QAC/C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACzB,QAAI,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAC5B,KAAG;AAEH;AAAQ;AAAqB;AAC1B;AAAQ,IADT,mDAAgB;AAAO;AACxB;AAAmB;AAEpB,IAHE,UAAiB,EAAgB;AAAI,QACnC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACvB,KAAG;AAEH;AAAQ;AAAqB;AAC5B;AAAQ,IADP,oDAAiB;AAAO;AAC1B;AAAmB;AACjB,IAFA,UAAkB,EAAiB;AAAI,QACrC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACxB,KAAG;AAEH;AAAQ;AAA2B;AAC3B;AAAQ,IADd,mDAAgB;AAAO;AACnB;AAAmB;AACxB,IAFC,UAAiB,QAAiB;AAAI,QACpC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;AAC/B,QAAI,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAC5B,KAAG,CA1CK;AAAC;qCA5BR,SAAS,SAAC,vDA4BqB;QA3B9B,QAAQ,EAAE,lBA4BF,gBAzC6B,UAAU;OAalB,sBAC7B,7BAdmD,gBAD5C,YAAY;KAeX,EAAE,iBAAiB,xBAfJ,gBAChB,iBAAiB;AAAG;AAe3B,mBAAmB,EAAE,KAAK,1BAfW;AAgBrC,aAAa,EAAE,iBAAiB,CAAC,IAAI,rCAhBgD,6BA8CpF,KAAK;AAAI;cA7BV,dA6BiB,IAAQ;KA7BjB,EAAE,PA6B4B,QAA5B,YAAY,EAAE;AAAE;AAEN,gEAFwB;sMAlB3C,sBACD,SAAS,EAAE,0BACT;iBACE,OAAO,EAAE,iBAAiB,8BAC1B,WAAW,EAAE,UAAU,6GAAC,cAAM;AAAA,wBAAwB,GAAA,EAAC;GACvD,KAAK,EAAE,IAAI,0BACZ,sBACF,sBACD,IAAI,EAAE,0BACJ;;aAA4B,EAAE,MAAM,sBACrC;iBACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAQD;AACA,IAmCA,+BAAC;AACA,CAxED,IAuEC;AACD;AAAa;AAAqB,IA3ChC,sDAAkD;AACpD;AACoB,IAAlB,4CAAkC;AACpC;AAAqB,IAAnB,6CAAoC;AACtC;AAAqB,IAAnB,2CAA0C;AAC5C;AAAqB,IAAnB,8CAA4C;AAC9C;AACO;AAAiB;AAAgB;AAAQ,IAIlC,8CAA8B;AAAC;AAAQ;AAAiB;AAAgB;AAAQ,IAAhD,gDAAkC;AAAC;AAAQ;AAAiB;AAEtG;AAAQ,IAFsE,uCAA8B;AAAC;AAAE;AAAC;AAElH;AACa;AAAsC;AAOjD;AAAI;AAC4B,ICxDpC;AACkB,KAIc;oDAL/B,QAAQ,SAAC;cACR,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,UAAU,CAAC,sBAChD,YAAY,EAAE,CAAC,mBAAmB,EAAE,wBAAwB,EAAE,0BAA0B,CAAC;CACzF,OAAO,EAAE,CAAC,mBAAmB,EAAE,wBAAwB,EAAE,0BAA0B,CAAC,kBACrF;;;;;;;;;;;;gDACQ;AAAC,IAAqB,uBAAC;AAC/B,CAND;AAAK;AAAC;AAAI;AACsB;AACnB;AACyC;AAAI;AAAC;AAAI;AAExD;AACY;AAAsI;AAAI;AAAC;AAAwG","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Output, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzCheckboxComponent } from './checkbox.component';\n\n@Component({\n  selector: 'nz-checkbox-wrapper',\n  exportAs: 'nzCheckboxWrapper',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-content></ng-content>\n  `\n})\nexport class NzCheckboxWrapperComponent {\n  @Output() readonly nzOnChange = new EventEmitter<NzSafeAny[]>();\n  private checkboxList: NzCheckboxComponent[] = [];\n\n  addCheckbox(value: NzCheckboxComponent): void {\n    this.checkboxList.push(value);\n  }\n\n  removeCheckbox(value: NzCheckboxComponent): void {\n    this.checkboxList.splice(this.checkboxList.indexOf(value), 1);\n  }\n\n  onChange(): void {\n    const listOfCheckedValue = this.checkboxList.filter(item => item.nzChecked).map(item => item.nzValue);\n    this.nzOnChange.emit(listOfCheckedValue);\n  }\n\n  constructor(renderer: Renderer2, elementRef: ElementRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-checkbox-group');\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BooleanInput, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { NzCheckboxWrapperComponent } from './checkbox-wrapper.component';\n\n@Component({\n  selector: '[nz-checkbox]',\n  exportAs: 'nzCheckbox',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span\n      class=\"ant-checkbox\"\n      [class.ant-checkbox-checked]=\"nzChecked && !nzIndeterminate\"\n      [class.ant-checkbox-disabled]=\"nzDisabled\"\n      [class.ant-checkbox-indeterminate]=\"nzIndeterminate\"\n    >\n      <input\n        #inputElement\n        type=\"checkbox\"\n        class=\"ant-checkbox-input\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [checked]=\"nzChecked\"\n        [ngModel]=\"nzChecked\"\n        [disabled]=\"nzDisabled\"\n        (ngModelChange)=\"innerCheckedChange($event)\"\n        (click)=\"$event.stopPropagation()\"\n      />\n      <span class=\"ant-checkbox-inner\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzCheckboxComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-checkbox-wrapper]': 'true',\n    '[class.ant-checkbox-wrapper-checked]': 'nzChecked',\n    '(click)': 'hostClick($event)'\n  }\n})\nexport class NzCheckboxComponent implements OnInit, ControlValueAccessor, OnDestroy, AfterViewInit {\n  static ngAcceptInputType_nzAutoFocus: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzIndeterminate: BooleanInput;\n  static ngAcceptInputType_nzChecked: BooleanInput;\n\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  @ViewChild('inputElement', { static: true }) private inputElement: ElementRef;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n  @Input() nzValue: NzSafeAny | null = null;\n  @Input() @InputBoolean() nzAutoFocus = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzIndeterminate = false;\n  @Input() @InputBoolean() nzChecked = false;\n\n  hostClick(e: MouseEvent): void {\n    e.preventDefault();\n    this.focus();\n    this.innerCheckedChange(!this.nzChecked);\n  }\n\n  innerCheckedChange(checked: boolean): void {\n    if (!this.nzDisabled) {\n      this.nzChecked = checked;\n      this.onChange(this.nzChecked);\n      this.nzCheckedChange.emit(this.nzChecked);\n      if (this.nzCheckboxWrapperComponent) {\n        this.nzCheckboxWrapperComponent.onChange();\n      }\n    }\n  }\n\n  writeValue(value: boolean): void {\n    this.nzChecked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n  }\n\n  blur(): void {\n    this.inputElement.nativeElement.blur();\n  }\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    @Optional() private nzCheckboxWrapperComponent: NzCheckboxWrapperComponent,\n    private cdr: ChangeDetectorRef,\n    private focusMonitor: FocusMonitor\n  ) {}\n\n  ngOnInit(): void {\n    this.focusMonitor.monitor(this.elementRef, true).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n    if (this.nzCheckboxWrapperComponent) {\n      this.nzCheckboxWrapperComponent.addCheckbox(this);\n    }\n  }\n  ngAfterViewInit(): void {\n    if (this.nzAutoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    if (this.nzCheckboxWrapperComponent) {\n      this.nzCheckboxWrapperComponent.removeCheckbox(this);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ChangeDetectorRef, Component, ElementRef, forwardRef, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BooleanInput, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nexport interface NzCheckBoxOptionInterface {\n  label: string;\n  value: string;\n  checked?: boolean;\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'nz-checkbox-group',\n  exportAs: 'nzCheckboxGroup',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <label\n      nz-checkbox\n      class=\"ant-checkbox-group-item\"\n      *ngFor=\"let o of options; trackBy: trackByOption\"\n      [nzDisabled]=\"o.disabled || nzDisabled\"\n      [(nzChecked)]=\"o.checked\"\n      (nzCheckedChange)=\"onChange(options)\"\n    >\n      <span>{{ o.label }}</span>\n    </label>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzCheckboxGroupComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-checkbox-group]': 'true'\n  }\n})\nexport class NzCheckboxGroupComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  options: NzCheckBoxOptionInterface[] = [];\n  @Input() @InputBoolean() nzDisabled = false;\n\n  trackByOption(_: number, option: NzCheckBoxOptionInterface): string {\n    return option.value;\n  }\n\n  constructor(private elementRef: ElementRef, private focusMonitor: FocusMonitor, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.focusMonitor.monitor(this.elementRef, true).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  writeValue(value: NzCheckBoxOptionInterface[]): void {\n    this.options = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NzCheckboxGroupComponent } from './checkbox-group.component';\nimport { NzCheckboxWrapperComponent } from './checkbox-wrapper.component';\nimport { NzCheckboxComponent } from './checkbox.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, A11yModule],\n  declarations: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent],\n  exports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent]\n})\nexport class NzCheckboxModule {}\n"]}