/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectorRef, NgZone, OnChanges, OnDestroy, QueryList, TemplateRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class NzListItemExtraComponent {
    constructor();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzListItemExtraComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzListItemExtraComponent, "nz-list-item-extra, [nz-list-item-extra]", ["nzListItemExtra"], {}, {}, never, ["*"]>;
}
export declare class NzListItemActionComponent {
    templateRef: TemplateRef<void>;
    constructor();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzListItemActionComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzListItemActionComponent, "nz-list-item-action", ["nzListItemAction"], {}, {}, never, ["*"]>;
}
export declare class NzListItemActionsComponent implements OnChanges, OnDestroy {
    private ngZone;
    private cdr;
    nzActions: Array<TemplateRef<void>>;
    nzListItemActions: QueryList<NzListItemActionComponent>;
    actions: Array<TemplateRef<void>>;
    private destroy$;
    private inputActionChanges$;
    private contentChildrenChanges$;
    constructor(ngZone: NgZone, cdr: ChangeDetectorRef);
    ngOnChanges(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzListItemActionsComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzListItemActionsComponent, "ul[nz-list-item-actions]", ["nzListItemActions"], { "nzActions": "nzActions"; }, {}, ["nzListItemActions"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1pdGVtLWNlbGwuZC50cyIsInNvdXJjZXMiOlsibGlzdC1pdGVtLWNlbGwuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWxpYmFiYS5jb20gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBOZ1pvbmUsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBRdWVyeUxpc3QsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOekxpc3RJdGVtRXh0cmFDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKCk7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOekxpc3RJdGVtQWN0aW9uQ29tcG9uZW50IHtcbiAgICB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8dm9pZD47XG4gICAgY29uc3RydWN0b3IoKTtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE56TGlzdEl0ZW1BY3Rpb25zQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgbmdab25lO1xuICAgIHByaXZhdGUgY2RyO1xuICAgIG56QWN0aW9uczogQXJyYXk8VGVtcGxhdGVSZWY8dm9pZD4+O1xuICAgIG56TGlzdEl0ZW1BY3Rpb25zOiBRdWVyeUxpc3Q8TnpMaXN0SXRlbUFjdGlvbkNvbXBvbmVudD47XG4gICAgYWN0aW9uczogQXJyYXk8VGVtcGxhdGVSZWY8dm9pZD4+O1xuICAgIHByaXZhdGUgZGVzdHJveSQ7XG4gICAgcHJpdmF0ZSBpbnB1dEFjdGlvbkNoYW5nZXMkO1xuICAgIHByaXZhdGUgY29udGVudENoaWxkcmVuQ2hhbmdlcyQ7XG4gICAgY29uc3RydWN0b3Iobmdab25lOiBOZ1pvbmUsIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nT25DaGFuZ2VzKCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbiJdfQ==