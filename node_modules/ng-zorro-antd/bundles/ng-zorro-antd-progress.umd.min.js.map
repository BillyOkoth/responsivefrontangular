{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ng-zorro-antd/progress/utils.ts","ng://ng-zorro-antd/progress/progress.component.ts","ng://ng-zorro-antd/progress/progress.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","sortGradient","gradients","tempArr","keys","forEach","value","formatKey","replace","isNaN","push","sort","a","b","handleLinearGradient","strokeColor","_a","from","_b","to","_c","direction","rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","map","join","gradientIdSeed","statusIconNameMap","Map","statusColorMap","defaultFormatter","NzProgressComponent","nzConfigService","this","nzWidth","nzPercent","nzType","steps","lineGradient","isGradient","isSteps","gradientId","progressCirclePath","trackByFn","index","cachedStatus","inferredStatus","destroy$","Subject","nzFormat","nzStatus","nzStrokeWidth","nzSize","ngOnChanges","changes","nzSteps","nzGapPosition","nzStrokeLinecap","nzStrokeColor","nzGapDegree","nzSuccessPercent","parseInt","toString","isNotNil","undefined","updateIcon","setStrokeColor","getCirclePaths","currentValue","getSteps","ngOnInit","_this","getConfigChangeEventForComponent","pipe","takeUntil","subscribe","ngOnDestroy","next","complete","ret","get","status","icon","isCircleStyle","current","Math","floor","stepWidth","color","stepStyle","backgroundColor","width","height","strokeWidth","values","radius","gapPosition","len","PI","gapDegree","beginPositionX","beginPositionY","endPositionX","endPositionY","pathString","trailPathStyle","strokeDasharray","strokeDashoffset","transition","isSuccessPercent","stroke","strokePathStyle","reverse","circleGradient","offset","Component","args","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","selector","exportAs","preserveWhitespaces","template","NzConfigService","Input","WithConfig","InputNumber","NzProgressModule","NgModule","exports","declarations","imports","CommonModule","NzIconModule","NzOutletModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NzProgressColorGradient, NzProgressGradientProgress } from './typings';\n\nfunction stripPercentToNumber(percent: string): number {\n  return +percent.replace('%', '');\n}\n\nexport const sortGradient = (gradients: NzProgressGradientProgress) => {\n  let tempArr: Array<{ key: number; value: string }> = [];\n\n  Object.keys(gradients).forEach(key => {\n    const value = gradients[key];\n    const formatKey = stripPercentToNumber(key);\n    if (!isNaN(formatKey)) {\n      tempArr.push({\n        key: formatKey,\n        value\n      });\n    }\n  });\n\n  tempArr = tempArr.sort((a, b) => a.key - b.key);\n  return tempArr;\n};\n\nexport const handleCircleGradient = (strokeColor: NzProgressGradientProgress): Array<{ offset: string; color: string }> => {\n  return sortGradient(strokeColor).map(({ key, value }) => ({ offset: `${key}%`, color: value }));\n};\n\nexport const handleLinearGradient = (strokeColor: NzProgressColorGradient) => {\n  const { from = '#1890ff', to = '#1890ff', direction = 'to right', ...rest } = strokeColor;\n  if (Object.keys(rest).length !== 0) {\n    const sortedGradients = sortGradient(rest as NzProgressGradientProgress)\n      .map(({ key, value }) => `${value} ${key}%`)\n      .join(', ');\n    return `linear-gradient(${direction}, ${sortedGradients})`;\n  }\n  return `linear-gradient(${direction}, ${from}, ${to})`;\n};\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NgStyleInterface, NumberInput } from 'ng-zorro-antd/core/types';\nimport { InputNumber, isNotNil } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport {\n  NzProgressCirclePath,\n  NzProgressColorGradient,\n  NzProgressFormatter,\n  NzProgressGapPositionType,\n  NzProgressGradientProgress,\n  NzProgressStatusType,\n  NzProgressStepItem,\n  NzProgressStrokeColorType,\n  NzProgressStrokeLinecapType,\n  NzProgressTypeType\n} from './typings';\nimport { handleCircleGradient, handleLinearGradient } from './utils';\n\nlet gradientIdSeed = 0;\n\nconst NZ_CONFIG_COMPONENT_NAME = 'progress';\nconst statusIconNameMap = new Map([\n  ['success', 'check'],\n  ['exception', 'close']\n]);\nconst statusColorMap = new Map([\n  ['normal', '#108ee9'],\n  ['exception', '#ff5500'],\n  ['success', '#87d068']\n]);\nconst defaultFormatter: NzProgressFormatter = (p: number): string => `${p}%`;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-progress',\n  exportAs: 'nzProgress',\n  preserveWhitespaces: false,\n  template: `\n    <ng-template #progressInfoTemplate>\n      <span class=\"ant-progress-text\" *ngIf=\"nzShowInfo\">\n        <ng-container *ngIf=\"status === 'exception' || (status === 'success' && !nzFormat); else formatTemplate\">\n          <i nz-icon [nzType]=\"icon\"></i>\n        </ng-container>\n        <ng-template #formatTemplate>\n          <ng-container *nzStringTemplateOutlet=\"formatter; context: { $implicit: nzPercent }\">\n            {{ $any(formatter)(nzPercent) }}\n          </ng-container>\n        </ng-template>\n      </span>\n    </ng-template>\n\n    <div\n      [ngClass]=\"'ant-progress ant-progress-status-' + status\"\n      [class.ant-progress-line]=\"nzType == 'line'\"\n      [class.ant-progress-small]=\"nzSize == 'small'\"\n      [class.ant-progress-show-info]=\"nzShowInfo\"\n      [class.ant-progress-circle]=\"isCircleStyle\"\n      [class.ant-progress-steps]=\"isSteps\"\n    >\n      <!-- line progress -->\n      <div *ngIf=\"nzType === 'line'\">\n        <ng-container *ngIf=\"!isSteps\">\n          <div class=\"ant-progress-outer\" *ngIf=\"!isSteps\">\n            <div class=\"ant-progress-inner\">\n              <div\n                class=\"ant-progress-bg\"\n                [style.width.%]=\"nzPercent\"\n                [style.border-radius]=\"nzStrokeLinecap === 'round' ? '100px' : '0'\"\n                [style.background]=\"!isGradient ? nzStrokeColor : null\"\n                [style.background-image]=\"isGradient ? lineGradient : null\"\n                [style.height.px]=\"strokeWidth\"\n              ></div>\n              <div\n                *ngIf=\"nzSuccessPercent || nzSuccessPercent === 0\"\n                class=\"ant-progress-success-bg\"\n                [style.width.%]=\"nzSuccessPercent\"\n                [style.border-radius]=\"nzStrokeLinecap === 'round' ? '100px' : '0'\"\n                [style.height.px]=\"strokeWidth\"\n              ></div>\n            </div>\n          </div>\n          <ng-template [ngTemplateOutlet]=\"progressInfoTemplate\"></ng-template>\n        </ng-container>\n        <!-- Step style progress -->\n        <div class=\"ant-progress-steps-outer\" *ngIf=\"isSteps\">\n          <div *ngFor=\"let step of steps; let i = index\" class=\"ant-progress-steps-item\" [ngStyle]=\"step\"></div>\n          <ng-template [ngTemplateOutlet]=\"progressInfoTemplate\"></ng-template>\n        </div>\n      </div>\n\n      <!-- circle / dashboard progress -->\n      <div\n        [style.width.px]=\"this.nzWidth\"\n        [style.height.px]=\"this.nzWidth\"\n        [style.fontSize.px]=\"this.nzWidth * 0.15 + 6\"\n        class=\"ant-progress-inner\"\n        [class.ant-progress-circle-gradient]=\"isGradient\"\n        *ngIf=\"isCircleStyle\"\n      >\n        <svg class=\"ant-progress-circle \" viewBox=\"0 0 100 100\">\n          <defs *ngIf=\"isGradient\">\n            <linearGradient [id]=\"'gradient-' + gradientId\" x1=\"100%\" y1=\"0%\" x2=\"0%\" y2=\"0%\">\n              <stop *ngFor=\"let i of circleGradient\" [attr.offset]=\"i.offset\" [attr.stop-color]=\"i.color\"></stop>\n            </linearGradient>\n          </defs>\n          <path\n            class=\"ant-progress-circle-trail\"\n            stroke=\"#f3f3f3\"\n            fill-opacity=\"0\"\n            [attr.stroke-width]=\"strokeWidth\"\n            [attr.d]=\"pathString\"\n            [ngStyle]=\"trailPathStyle\"\n          ></path>\n          <path\n            *ngFor=\"let p of progressCirclePath; trackBy: trackByFn\"\n            class=\"ant-progress-circle-path\"\n            fill-opacity=\"0\"\n            [attr.d]=\"pathString\"\n            [attr.stroke-linecap]=\"nzStrokeLinecap\"\n            [attr.stroke]=\"p.stroke\"\n            [attr.stroke-width]=\"nzPercent ? strokeWidth : 0\"\n            [ngStyle]=\"p.strokePathStyle\"\n          ></path>\n        </svg>\n        <ng-template [ngTemplateOutlet]=\"progressInfoTemplate\"></ng-template>\n      </div>\n    </div>\n  `\n})\nexport class NzProgressComponent implements OnChanges, OnInit, OnDestroy {\n  static ngAcceptInputType_nzSuccessPercent: NumberInput;\n  static ngAcceptInputType_nzPercent: NumberInput;\n  static ngAcceptInputType_nzStrokeWidth: NumberInput;\n  static ngAcceptInputType_nzGapDegree: NumberInput;\n  static ngAcceptInputType_nzSteps: NumberInput;\n\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, true) nzShowInfo: boolean;\n  @Input() nzWidth = 132;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzStrokeColor: NzProgressStrokeColorType;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'default') nzSize: 'default' | 'small';\n  @Input() nzFormat?: NzProgressFormatter;\n  @Input() @InputNumber() nzSuccessPercent?: number;\n  @Input() @InputNumber() nzPercent: number = 0;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputNumber() nzStrokeWidth: number;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputNumber() nzGapDegree: number;\n  @Input() nzStatus: NzProgressStatusType;\n  @Input() nzType: NzProgressTypeType = 'line';\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'top') nzGapPosition: NzProgressGapPositionType;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'round') nzStrokeLinecap: NzProgressStrokeLinecapType;\n\n  @Input() @InputNumber() nzSteps?: number;\n\n  steps: NzProgressStepItem[] = [];\n\n  /** Gradient style when `nzType` is `line`. */\n  lineGradient: string | null = null;\n\n  /** If user uses gradient color. */\n  isGradient = false;\n\n  /** If the linear progress is a step progress. */\n  isSteps = false;\n\n  /**\n   * Each progress whose `nzType` is circle or dashboard should have unique id to\n   * define `<linearGradient>`.\n   */\n  gradientId = gradientIdSeed++;\n\n  /** Paths to rendered in the template. */\n  progressCirclePath: NzProgressCirclePath[] = [];\n\n  circleGradient: Array<{ offset: string; color: string }>;\n\n  trailPathStyle: NgStyleInterface;\n\n  pathString: string;\n\n  icon: string;\n\n  trackByFn = (index: number) => `${index}`;\n\n  get formatter(): NzProgressFormatter {\n    return this.nzFormat || defaultFormatter;\n  }\n\n  get status(): NzProgressStatusType {\n    return this.nzStatus || this.inferredStatus;\n  }\n\n  get strokeWidth(): number {\n    return this.nzStrokeWidth || (this.nzType === 'line' && this.nzSize !== 'small' ? 8 : 6);\n  }\n\n  get isCircleStyle(): boolean {\n    return this.nzType === 'circle' || this.nzType === 'dashboard';\n  }\n\n  private cachedStatus: NzProgressStatusType = 'normal';\n  private inferredStatus: NzProgressStatusType = 'normal';\n  private destroy$ = new Subject<void>();\n\n  constructor(public nzConfigService: NzConfigService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzSteps, nzGapPosition, nzStrokeLinecap, nzStrokeColor, nzGapDegree, nzType, nzStatus, nzPercent, nzSuccessPercent } = changes;\n\n    if (nzStatus) {\n      this.cachedStatus = this.nzStatus || this.cachedStatus;\n    }\n\n    if (nzPercent || nzSuccessPercent) {\n      const fillAll = parseInt(this.nzPercent.toString(), 10) >= 100;\n      if (fillAll) {\n        if ((isNotNil(this.nzSuccessPercent) && this.nzSuccessPercent! >= 100) || this.nzSuccessPercent === undefined) {\n          this.inferredStatus = 'success';\n        }\n      } else {\n        this.inferredStatus = this.cachedStatus;\n      }\n    }\n\n    if (nzStatus || nzPercent || nzSuccessPercent) {\n      this.updateIcon();\n    }\n\n    if (nzStrokeColor) {\n      this.setStrokeColor();\n    }\n\n    if (nzGapPosition || nzStrokeLinecap || nzGapDegree || nzType || nzPercent || nzStrokeColor) {\n      this.getCirclePaths();\n    }\n\n    if (nzSteps) {\n      this.isSteps = isNotNil(nzSteps.currentValue);\n      this.getSteps();\n    }\n  }\n\n  ngOnInit(): void {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.updateIcon();\n        this.setStrokeColor();\n        this.getCirclePaths();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private updateIcon(): void {\n    const ret = statusIconNameMap.get(this.status);\n    this.icon = ret ? ret + (this.isCircleStyle ? '-o' : '-circle-fill') : '';\n  }\n\n  /**\n   * Calculate step render configs.\n   */\n  private getSteps(): void {\n    const current = Math.floor(this.nzSteps! * (this.nzPercent / 100));\n    const stepWidth = this.nzSize === 'small' ? 2 : 14;\n\n    for (let i = 0; i < this.nzSteps!; i++) {\n      let color;\n      if (i <= current - 1) {\n        color = this.nzStrokeColor;\n      }\n      const stepStyle = {\n        backgroundColor: `${color}`,\n        width: `${stepWidth}px`,\n        height: `${this.strokeWidth}px`\n      };\n      this.steps.push(stepStyle);\n    }\n  }\n\n  /**\n   * Calculate paths when the type is circle or dashboard.\n   */\n  private getCirclePaths(): void {\n    if (!this.isCircleStyle) {\n      return;\n    }\n\n    const values = isNotNil(this.nzSuccessPercent) ? [this.nzSuccessPercent!, this.nzPercent] : [this.nzPercent];\n\n    // Calculate shared styles.\n    const radius = 50 - this.strokeWidth / 2;\n    const gapPosition = this.nzGapPosition || (this.nzType === 'circle' ? 'top' : 'bottom');\n    const len = Math.PI * 2 * radius;\n    const gapDegree = this.nzGapDegree || (this.nzType === 'circle' ? 0 : 75);\n\n    let beginPositionX = 0;\n    let beginPositionY = -radius;\n    let endPositionX = 0;\n    let endPositionY = radius * -2;\n\n    switch (gapPosition) {\n      case 'left':\n        beginPositionX = -radius;\n        beginPositionY = 0;\n        endPositionX = radius * 2;\n        endPositionY = 0;\n        break;\n      case 'right':\n        beginPositionX = radius;\n        beginPositionY = 0;\n        endPositionX = radius * -2;\n        endPositionY = 0;\n        break;\n      case 'bottom':\n        beginPositionY = radius;\n        endPositionY = radius * 2;\n        break;\n      default:\n    }\n\n    this.pathString = `M 50,50 m ${beginPositionX},${beginPositionY}\n       a ${radius},${radius} 0 1 1 ${endPositionX},${-endPositionY}\n       a ${radius},${radius} 0 1 1 ${-endPositionX},${endPositionY}`;\n\n    this.trailPathStyle = {\n      strokeDasharray: `${len - gapDegree}px ${len}px`,\n      strokeDashoffset: `-${gapDegree / 2}px`,\n      transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s'\n    };\n\n    // Calculate styles for each path.\n    this.progressCirclePath = values\n      .map((value, index) => {\n        const isSuccessPercent = values.length === 2 && index === 0;\n        return {\n          stroke: this.isGradient && !isSuccessPercent ? `url(#gradient-${this.gradientId})` : null,\n          strokePathStyle: {\n            stroke: !this.isGradient ? (isSuccessPercent ? statusColorMap.get('success') : (this.nzStrokeColor as string)) : null,\n            transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s',\n            strokeDasharray: `${((value || 0) / 100) * (len - gapDegree)}px ${len}px`,\n            strokeDashoffset: `-${gapDegree / 2}px`\n          }\n        };\n      })\n      .reverse();\n  }\n\n  private setStrokeColor(): void {\n    const color = this.nzStrokeColor;\n    const isGradient = (this.isGradient = !!color && typeof color !== 'string');\n    if (isGradient && !this.isCircleStyle) {\n      this.lineGradient = handleLinearGradient(color as NzProgressColorGradient);\n    } else if (isGradient && this.isCircleStyle) {\n      this.circleGradient = handleCircleGradient(this.nzStrokeColor as NzProgressGradientProgress);\n    } else {\n      this.lineGradient = null;\n      this.circleGradient = [];\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzProgressComponent } from './progress.component';\n\n@NgModule({\n  exports: [NzProgressComponent],\n  declarations: [NzProgressComponent],\n  imports: [CommonModule, NzIconModule, NzOutletModule]\n})\nexport class NzProgressModule {}\n"]}