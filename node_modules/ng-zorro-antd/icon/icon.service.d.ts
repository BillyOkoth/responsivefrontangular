/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { HttpBackend } from '@angular/common/http';
import { InjectionToken, RendererFactory2 } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { IconDefinition, IconService } from '@ant-design/icons-angular';
import { NzConfigService } from 'ng-zorro-antd/core/config';
import { NzSafeAny } from 'ng-zorro-antd/core/types';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export interface NzIconfontOption {
    scriptUrl: string;
}
export declare const NZ_ICONS: InjectionToken<unknown>;
export declare const NZ_ICON_DEFAULT_TWOTONE_COLOR: InjectionToken<unknown>;
export declare const DEFAULT_TWOTONE_COLOR = "#1890ff";
/**
 * It should be a global singleton, otherwise registered icons could not be found.
 */
export declare class NzIconService extends IconService {
    protected nzConfigService: NzConfigService;
    configUpdated$: Subject<void>;
    private iconfontCache;
    normalizeSvgElement(svg: SVGElement): void;
    fetchFromIconfont(opt: NzIconfontOption): void;
    createIconfontIcon(type: string): SVGElement;
    constructor(rendererFactory: RendererFactory2, sanitizer: DomSanitizer, nzConfigService: NzConfigService, handler: HttpBackend, _document: NzSafeAny, icons?: IconDefinition[]);
    private onConfigChange;
    private configDefaultTheme;
    private configDefaultTwotoneColor;
    private getConfig;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzIconService, [null, null, null, { optional: true; }, { optional: true; }, { optional: true; }]>;
}
export declare const NZ_ICONS_PATCH: InjectionToken<unknown>;
export declare class NzIconPatchService {
    private extraIcons;
    private rootIconService;
    patched: boolean;
    constructor(extraIcons: IconDefinition[], rootIconService: NzIconService);
    doPatch(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzIconPatchService, [{ self: true; }, null]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NzIconPatchService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbImljb24uc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBIdHRwQmFja2VuZCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IEluamVjdGlvblRva2VuLCBSZW5kZXJlckZhY3RvcnkyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEb21TYW5pdGl6ZXIgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7IEljb25EZWZpbml0aW9uLCBJY29uU2VydmljZSB9IGZyb20gJ0BhbnQtZGVzaWduL2ljb25zLWFuZ3VsYXInO1xuaW1wb3J0IHsgTnpDb25maWdTZXJ2aWNlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL2NvbmZpZyc7XG5pbXBvcnQgeyBOelNhZmVBbnkgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuZXhwb3J0IGludGVyZmFjZSBOekljb25mb250T3B0aW9uIHtcbiAgICBzY3JpcHRVcmw6IHN0cmluZztcbn1cbmV4cG9ydCBkZWNsYXJlIGNvbnN0IE5aX0lDT05TOiBJbmplY3Rpb25Ub2tlbjx1bmtub3duPjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IE5aX0lDT05fREVGQVVMVF9UV09UT05FX0NPTE9SOiBJbmplY3Rpb25Ub2tlbjx1bmtub3duPjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IERFRkFVTFRfVFdPVE9ORV9DT0xPUiA9IFwiIzE4OTBmZlwiO1xuLyoqXG4gKiBJdCBzaG91bGQgYmUgYSBnbG9iYWwgc2luZ2xldG9uLCBvdGhlcndpc2UgcmVnaXN0ZXJlZCBpY29ucyBjb3VsZCBub3QgYmUgZm91bmQuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE56SWNvblNlcnZpY2UgZXh0ZW5kcyBJY29uU2VydmljZSB7XG4gICAgcHJvdGVjdGVkIG56Q29uZmlnU2VydmljZTogTnpDb25maWdTZXJ2aWNlO1xuICAgIGNvbmZpZ1VwZGF0ZWQkOiBTdWJqZWN0PHZvaWQ+O1xuICAgIHByaXZhdGUgaWNvbmZvbnRDYWNoZTtcbiAgICBub3JtYWxpemVTdmdFbGVtZW50KHN2ZzogU1ZHRWxlbWVudCk6IHZvaWQ7XG4gICAgZmV0Y2hGcm9tSWNvbmZvbnQob3B0OiBOekljb25mb250T3B0aW9uKTogdm9pZDtcbiAgICBjcmVhdGVJY29uZm9udEljb24odHlwZTogc3RyaW5nKTogU1ZHRWxlbWVudDtcbiAgICBjb25zdHJ1Y3RvcihyZW5kZXJlckZhY3Rvcnk6IFJlbmRlcmVyRmFjdG9yeTIsIHNhbml0aXplcjogRG9tU2FuaXRpemVyLCBuekNvbmZpZ1NlcnZpY2U6IE56Q29uZmlnU2VydmljZSwgaGFuZGxlcjogSHR0cEJhY2tlbmQsIF9kb2N1bWVudDogTnpTYWZlQW55LCBpY29ucz86IEljb25EZWZpbml0aW9uW10pO1xuICAgIHByaXZhdGUgb25Db25maWdDaGFuZ2U7XG4gICAgcHJpdmF0ZSBjb25maWdEZWZhdWx0VGhlbWU7XG4gICAgcHJpdmF0ZSBjb25maWdEZWZhdWx0VHdvdG9uZUNvbG9yO1xuICAgIHByaXZhdGUgZ2V0Q29uZmlnO1xufVxuZXhwb3J0IGRlY2xhcmUgY29uc3QgTlpfSUNPTlNfUEFUQ0g6IEluamVjdGlvblRva2VuPHVua25vd24+O1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpJY29uUGF0Y2hTZXJ2aWNlIHtcbiAgICBwcml2YXRlIGV4dHJhSWNvbnM7XG4gICAgcHJpdmF0ZSByb290SWNvblNlcnZpY2U7XG4gICAgcGF0Y2hlZDogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcihleHRyYUljb25zOiBJY29uRGVmaW5pdGlvbltdLCByb290SWNvblNlcnZpY2U6IE56SWNvblNlcnZpY2UpO1xuICAgIGRvUGF0Y2goKTogdm9pZDtcbn1cbiJdfQ==