/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ElementRef, EventEmitter, OnChanges, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';
import { NzSafeAny } from 'ng-zorro-antd/core/types';
import { PaginationItemRenderContext } from './pagination.types';
import * as ɵngcc0 from '@angular/core';
export declare class NzPaginationSimpleComponent implements OnChanges {
    template: TemplateRef<NzSafeAny>;
    itemRender: TemplateRef<PaginationItemRenderContext> | null;
    disabled: boolean;
    locale: NzSafeAny;
    total: number;
    pageIndex: number;
    pageSize: number;
    readonly pageIndexChange: EventEmitter<number>;
    lastIndex: number;
    isFirstIndex: boolean;
    isLastIndex: boolean;
    constructor(renderer: Renderer2, elementRef: ElementRef);
    jumpToPageViaInput($event: Event): void;
    prePage(): void;
    nextPage(): void;
    onPageIndexChange(index: number): void;
    updateBindingValue(): void;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzPaginationSimpleComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzPaginationSimpleComponent, "nz-pagination-simple", never, { "itemRender": "itemRender"; "disabled": "disabled"; "locale": "locale"; "total": "total"; "pageIndex": "pageIndex"; "pageSize": "pageSize"; }, { "pageIndexChange": "pageIndexChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi1zaW1wbGUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBhZ2luYXRpb24tc2ltcGxlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBbGliYWJhLmNvbSBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIFJlbmRlcmVyMiwgU2ltcGxlQ2hhbmdlcywgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE56U2FmZUFueSB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS90eXBlcyc7XG5pbXBvcnQgeyBQYWdpbmF0aW9uSXRlbVJlbmRlckNvbnRleHQgfSBmcm9tICcuL3BhZ2luYXRpb24udHlwZXMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpQYWdpbmF0aW9uU2ltcGxlQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgICB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8TnpTYWZlQW55PjtcbiAgICBpdGVtUmVuZGVyOiBUZW1wbGF0ZVJlZjxQYWdpbmF0aW9uSXRlbVJlbmRlckNvbnRleHQ+IHwgbnVsbDtcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICBsb2NhbGU6IE56U2FmZUFueTtcbiAgICB0b3RhbDogbnVtYmVyO1xuICAgIHBhZ2VJbmRleDogbnVtYmVyO1xuICAgIHBhZ2VTaXplOiBudW1iZXI7XG4gICAgcmVhZG9ubHkgcGFnZUluZGV4Q2hhbmdlOiBFdmVudEVtaXR0ZXI8bnVtYmVyPjtcbiAgICBsYXN0SW5kZXg6IG51bWJlcjtcbiAgICBpc0ZpcnN0SW5kZXg6IGJvb2xlYW47XG4gICAgaXNMYXN0SW5kZXg6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IocmVuZGVyZXI6IFJlbmRlcmVyMiwgZWxlbWVudFJlZjogRWxlbWVudFJlZik7XG4gICAganVtcFRvUGFnZVZpYUlucHV0KCRldmVudDogRXZlbnQpOiB2b2lkO1xuICAgIHByZVBhZ2UoKTogdm9pZDtcbiAgICBuZXh0UGFnZSgpOiB2b2lkO1xuICAgIG9uUGFnZUluZGV4Q2hhbmdlKGluZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIHVwZGF0ZUJpbmRpbmdWYWx1ZSgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xufVxuIl19