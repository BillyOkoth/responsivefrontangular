{"version":3,"file":"ng-zorro-antd-form.js","sources":["ng://ng-zorro-antd/form/form.directive.ts","ng://ng-zorro-antd/form/form-item.component.ts","ng://ng-zorro-antd/form/form-control.component.ts","ng://ng-zorro-antd/form/form-label.component.ts","ng://ng-zorro-antd/form/form-split.component.ts","ng://ng-zorro-antd/form/form-text.component.ts","ng://ng-zorro-antd/form/form.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, ElementRef, Input, OnChanges, OnDestroy, Renderer2, SimpleChange, SimpleChanges } from '@angular/core';\n\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, InputObservable } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'form';\n\n@Directive({\n  selector: '[nz-form]',\n  exportAs: 'nzForm',\n  host: {\n    '[class.ant-form-horizontal]': `nzLayout === 'horizontal'`,\n    '[class.ant-form-vertical]': `nzLayout === 'vertical'`,\n    '[class.ant-form-inline]': `nzLayout === 'inline'`\n  }\n})\nexport class NzFormDirective implements OnChanges, OnDestroy, InputObservable {\n  static ngAcceptInputType_nzNoColon: BooleanInput;\n  static ngAcceptInputType_nzDisableAutoTips: BooleanInput;\n\n  @Input() nzLayout: 'horizontal' | 'vertical' | 'inline' = 'horizontal';\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) @InputBoolean() nzNoColon: boolean;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, {}) nzAutoTips: Record<string, Record<string, string>>;\n  @Input() @InputBoolean() nzDisableAutoTips = false;\n\n  destroy$ = new Subject();\n  private inputChanges$ = new Subject<SimpleChanges>();\n\n  getInputObservable<K extends keyof this>(changeType: K): Observable<SimpleChange> {\n    return this.inputChanges$.pipe(\n      filter(changes => changeType in changes),\n      map(value => value[changeType as string])\n    );\n  }\n\n  constructor(public nzConfigService: NzConfigService, elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(elementRef.nativeElement, 'ant-form');\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.inputChanges$.next(changes);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\nimport { Subject } from 'rxjs';\n\nexport type NzFormControlStatusType = 'success' | 'error' | 'warning' | 'validating' | null;\n\n/** should add nz-row directive to host, track https://github.com/angular/angular/issues/8785 **/\n@Component({\n  selector: 'nz-form-item',\n  exportAs: 'nzFormItem',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.ant-form-item-has-success]': 'status === \"success\"',\n    '[class.ant-form-item-has-warning]': 'status === \"warning\"',\n    '[class.ant-form-item-has-error]': 'status === \"error\"',\n    '[class.ant-form-item-is-validating]': 'status === \"validating\"',\n    '[class.ant-form-item-has-feedback]': 'hasFeedback && status',\n    '[class.ant-form-item-with-help]': 'withHelpClass'\n  },\n  template: `\n    <ng-content></ng-content>\n  `\n})\nexport class NzFormItemComponent implements OnDestroy, OnDestroy {\n  /**\n   * @deprecated 10.0.0. 'nzFlex' is deprecated and going to be removed in 10.0.0.\n   */\n  @Input() set nzFlex(_: boolean) {\n    warnDeprecation(`'nzFlex' is deprecated and going to be removed in 10.0.0.`);\n  }\n\n  status: NzFormControlStatusType = null;\n  hasFeedback = false;\n  withHelpClass = false;\n\n  private destroy$ = new Subject();\n\n  setWithHelpViaTips(value: boolean): void {\n    this.withHelpClass = value;\n    this.cdr.markForCheck();\n  }\n\n  setStatus(status: NzFormControlStatusType): void {\n    this.status = status;\n    this.cdr.markForCheck();\n  }\n\n  setHasFeedback(hasFeedback: boolean): void {\n    this.hasFeedback = hasFeedback;\n    this.cdr.markForCheck();\n  }\n\n  constructor(elementRef: ElementRef, renderer: Renderer2, private cdr: ChangeDetectorRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item');\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  Host,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { FormControl, FormControlDirective, FormControlName, NgControl, NgModel } from '@angular/forms';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { toBoolean } from 'ng-zorro-antd/core/util';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { filter, startWith, takeUntil, tap } from 'rxjs/operators';\nimport { NzFormDirective } from './form.directive';\n\nimport { NzFormControlStatusType, NzFormItemComponent } from './form-item.component';\n\nconst iconTypeMap = {\n  error: 'close-circle-fill',\n  validating: 'loading',\n  success: 'check-circle-fill',\n  warning: 'exclamation-circle-fill'\n} as const;\n\n@Component({\n  selector: 'nz-form-control',\n  exportAs: 'nzFormControl',\n  preserveWhitespaces: false,\n  animations: [helpMotion],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"ant-form-item-control-input\">\n      <div class=\"ant-form-item-control-input-content\">\n        <ng-content></ng-content>\n      </div>\n      <span class=\"ant-form-item-children-icon\">\n        <i *ngIf=\"nzHasFeedback && iconType\" nz-icon [nzType]=\"iconType\"></i>\n      </span>\n    </div>\n    <div class=\"ant-form-item-explain\" *ngIf=\"innerTip\">\n      <div @helpMotion>\n        <ng-container *nzStringTemplateOutlet=\"innerTip; context: { $implicit: validateControl }\">{{ innerTip }}</ng-container>\n      </div>\n    </div>\n    <div class=\"ant-form-item-extra\" *ngIf=\"nzExtra\">\n      <ng-container *nzStringTemplateOutlet=\"nzExtra\">{{ nzExtra }}</ng-container>\n    </div>\n  `\n})\nexport class NzFormControlComponent implements OnDestroy, OnInit, AfterContentInit, OnDestroy {\n  static ngAcceptInputType_nzHasFeedback: BooleanInput;\n  static ngAcceptInputType_nzRequired: BooleanInput;\n  static ngAcceptInputType_nzNoColon: BooleanInput;\n  static ngAcceptInputType_nzDisableAutoTips: BooleanInput;\n\n  private _hasFeedback = false;\n  private validateChanges: Subscription = Subscription.EMPTY;\n  private validateString: string | null = null;\n  private status: NzFormControlStatusType = null;\n  private destroyed$ = new Subject<void>();\n  private localeId: string;\n  private autoErrorTip: string;\n\n  private get disableAutoTips(): boolean {\n    return this.nzDisableAutoTips !== 'default' ? toBoolean(this.nzDisableAutoTips) : this.nzFormDirective?.nzDisableAutoTips;\n  }\n\n  validateControl: FormControl | NgModel | null = null;\n  iconType: typeof iconTypeMap[keyof typeof iconTypeMap] | null = null;\n  innerTip: string | TemplateRef<{ $implicit: FormControl | NgModel }> | null = null;\n\n  @ContentChild(NgControl, { static: false }) defaultValidateControl: FormControlName | FormControlDirective;\n  @Input() nzSuccessTip: string | TemplateRef<{ $implicit: FormControl | NgModel }>;\n  @Input() nzWarningTip: string | TemplateRef<{ $implicit: FormControl | NgModel }>;\n  @Input() nzErrorTip: string | TemplateRef<{ $implicit: FormControl | NgModel }>;\n  @Input() nzValidatingTip: string | TemplateRef<{ $implicit: FormControl | NgModel }>;\n  @Input() nzExtra: string | TemplateRef<void>;\n  @Input() nzAutoTips: Record<string, Record<string, string>> = {};\n  @Input() nzDisableAutoTips: boolean | 'default' = 'default';\n\n  @Input()\n  set nzHasFeedback(value: boolean) {\n    this._hasFeedback = toBoolean(value);\n    if (this.nzFormItemComponent) {\n      this.nzFormItemComponent.setHasFeedback(this._hasFeedback);\n    }\n  }\n\n  get nzHasFeedback(): boolean {\n    return this._hasFeedback;\n  }\n\n  @Input()\n  set nzValidateStatus(value: string | FormControl | FormControlName | NgModel) {\n    if (value instanceof FormControl || value instanceof NgModel) {\n      this.validateControl = value;\n      this.validateString = null;\n      this.watchControl();\n    } else if (value instanceof FormControlName) {\n      this.validateControl = value.control;\n      this.validateString = null;\n      this.watchControl();\n    } else {\n      this.validateString = value;\n      this.validateControl = null;\n      this.setStatus();\n    }\n  }\n\n  private watchControl(): void {\n    this.validateChanges.unsubscribe();\n    /** miss detect https://github.com/angular/angular/issues/10887 **/\n    if (this.validateControl && this.validateControl.statusChanges) {\n      this.validateChanges = this.validateControl.statusChanges.pipe(startWith(null), takeUntil(this.destroyed$)).subscribe(_ => {\n        if (this.disableAutoTips) {\n          this.setStatus();\n          this.cdr.markForCheck();\n        } else {\n          this.updateAutoTip();\n        }\n      });\n    }\n  }\n\n  private setStatus(): void {\n    this.status = this.getControlStatus(this.validateString);\n    this.iconType = this.status ? iconTypeMap[this.status] : null;\n    this.innerTip = this.getInnerTip(this.status);\n    if (this.nzFormItemComponent) {\n      this.nzFormItemComponent.setWithHelpViaTips(!!this.innerTip);\n      this.nzFormItemComponent.setStatus(this.status);\n    }\n  }\n\n  private getControlStatus(validateString: string | null): NzFormControlStatusType {\n    let status: NzFormControlStatusType;\n\n    if (validateString === 'warning' || this.validateControlStatus('INVALID', 'warning')) {\n      status = 'warning';\n    } else if (validateString === 'error' || this.validateControlStatus('INVALID')) {\n      status = 'error';\n    } else if (validateString === 'validating' || validateString === 'pending' || this.validateControlStatus('PENDING')) {\n      status = 'validating';\n    } else if (validateString === 'success' || this.validateControlStatus('VALID')) {\n      status = 'success';\n    } else {\n      status = null;\n    }\n\n    return status;\n  }\n\n  private validateControlStatus(validStatus: string, statusType?: NzFormControlStatusType): boolean {\n    if (!this.validateControl) {\n      return false;\n    } else {\n      const { dirty, touched, status } = this.validateControl;\n      return (!!dirty || !!touched) && (statusType ? this.validateControl.hasError(statusType) : status === validStatus);\n    }\n  }\n\n  private getInnerTip(status: NzFormControlStatusType): string | TemplateRef<{ $implicit: FormControl | NgModel }> | null {\n    switch (status) {\n      case 'error':\n        return (!this.disableAutoTips && this.autoErrorTip) || this.nzErrorTip;\n      case 'validating':\n        return this.nzValidatingTip;\n      case 'success':\n        return this.nzSuccessTip;\n      case 'warning':\n        return this.nzWarningTip;\n      default:\n        return null;\n    }\n  }\n\n  private updateAutoTip(): void {\n    this.updateAutoErrorTip();\n    this.setStatus();\n    this.cdr.markForCheck();\n  }\n\n  private updateAutoErrorTip(): void {\n    if (this.validateControl) {\n      const errors = this.validateControl.errors || {};\n      let autoErrorTip = '';\n      for (const key in errors) {\n        if (errors.hasOwnProperty(key)) {\n          autoErrorTip =\n            errors[key][this.localeId] ??\n            this.nzAutoTips?.[this.localeId]?.[key] ??\n            this.nzFormDirective?.nzAutoTips?.[this.localeId]?.[key];\n        }\n        if (!!autoErrorTip) {\n          break;\n        }\n      }\n      this.autoErrorTip = autoErrorTip;\n    }\n  }\n\n  private subscribeAutoTips(observable: Observable<NzSafeAny>): void {\n    observable?.pipe(takeUntil(this.destroyed$)).subscribe(() => {\n      if (!this.disableAutoTips) {\n        this.updateAutoTip();\n      }\n    });\n  }\n\n  constructor(\n    elementRef: ElementRef,\n    @Optional() @Host() private nzFormItemComponent: NzFormItemComponent,\n    private cdr: ChangeDetectorRef,\n    renderer: Renderer2,\n    i18n: NzI18nService,\n    @Optional() @Host() private nzFormDirective: NzFormDirective\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item-control');\n\n    this.subscribeAutoTips(i18n.localeChange.pipe(tap(locale => (this.localeId = locale.locale))));\n    this.subscribeAutoTips(this.nzFormDirective?.getInputObservable('nzAutoTips'));\n    this.subscribeAutoTips(\n      this.nzFormDirective?.getInputObservable('nzDisableAutoTips').pipe(filter(() => this.nzDisableAutoTips === 'default'))\n    );\n  }\n\n  ngOnInit(): void {\n    this.setStatus();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.validateControl && !this.validateString) {\n      if (this.defaultValidateControl instanceof FormControlDirective) {\n        this.nzValidateStatus = this.defaultValidateControl.control;\n      } else {\n        this.nzValidateStatus = this.defaultValidateControl;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  SkipSelf,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\n\nimport { InputBoolean, toBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { NzFormDirective } from './form.directive';\n\n@Component({\n  selector: 'nz-form-label',\n  exportAs: 'nzFormLabel',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <label [attr.for]=\"nzFor\" [class.ant-form-item-no-colon]=\"nzNoColon\" [class.ant-form-item-required]=\"nzRequired\">\n      <ng-content></ng-content>\n    </label>\n  `\n})\nexport class NzFormLabelComponent implements OnDestroy {\n  static ngAcceptInputType_nzRequired: BooleanInput;\n  static ngAcceptInputType_nzNoColon: BooleanInput;\n\n  @Input() nzFor: string;\n  @Input() @InputBoolean() nzRequired = false;\n  @Input()\n  set nzNoColon(value: boolean) {\n    this.noColon = toBoolean(value);\n  }\n  get nzNoColon(): boolean {\n    return this.noColon !== 'default' ? this.noColon : this.nzFormDirective?.nzNoColon;\n  }\n\n  noColon: boolean | 'default' = 'default';\n\n  private destroy$ = new Subject();\n\n  constructor(\n    elementRef: ElementRef,\n    renderer: Renderer2,\n    private cdr: ChangeDetectorRef,\n    @Optional() @SkipSelf() private nzFormDirective: NzFormDirective\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item-label');\n\n    if (this.nzFormDirective) {\n      this.nzFormDirective\n        .getInputObservable('nzNoColon')\n        .pipe(\n          filter(() => this.noColon === 'default'),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => this.cdr.markForCheck());\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-form-split',\n  exportAs: 'nzFormSplit',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-content></ng-content>\n  `\n})\nexport class NzFormSplitComponent {\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-split');\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-form-text',\n  exportAs: 'nzFormText',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-content></ng-content>\n  `\n})\nexport class NzFormTextComponent {\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-text');\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzFormControlComponent } from './form-control.component';\nimport { NzFormItemComponent } from './form-item.component';\nimport { NzFormLabelComponent } from './form-label.component';\nimport { NzFormSplitComponent } from './form-split.component';\nimport { NzFormTextComponent } from './form-text.component';\nimport { NzFormDirective } from './form.directive';\n\n@NgModule({\n  declarations: [\n    NzFormDirective,\n    NzFormItemComponent,\n    NzFormLabelComponent,\n    NzFormControlComponent,\n    NzFormTextComponent,\n    NzFormSplitComponent\n  ],\n  exports: [\n    NzGridModule,\n    NzFormDirective,\n    NzFormItemComponent,\n    NzFormLabelComponent,\n    NzFormControlComponent,\n    NzFormTextComponent,\n    NzFormSplitComponent\n  ],\n  imports: [CommonModule, NzGridModule, NzIconModule, LayoutModule, PlatformModule, NzOutletModule]\n})\nexport class NzFormModule {}\n"],"names":[],"mappings":"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"}