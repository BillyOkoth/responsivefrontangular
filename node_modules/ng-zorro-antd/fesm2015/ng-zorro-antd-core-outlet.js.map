{"version":3,"file":"ng-zorro-antd-core-outlet.js","sources":["ng://ng-zorro-antd/core/outlet/string_template_outlet.directive.ts","ng://ng-zorro-antd/core/outlet/outlet.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, EmbeddedViewRef, Input, OnChanges, SimpleChange, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Directive({\n  selector: '[nzStringTemplateOutlet]',\n  exportAs: 'nzStringTemplateOutlet'\n})\nexport class NzStringTemplateOutletDirective implements OnChanges {\n  private embeddedViewRef: EmbeddedViewRef<NzSafeAny> | null = null;\n  @Input() nzStringTemplateOutletContext: NzSafeAny | null = null;\n  @Input() nzStringTemplateOutlet: string | TemplateRef<NzSafeAny> | null = null;\n\n  private recreateView(): void {\n    this.viewContainer.clear();\n    const isTemplateRef = this.nzStringTemplateOutlet instanceof TemplateRef;\n    const templateRef = (isTemplateRef ? this.nzStringTemplateOutlet : this.templateRef) as NzSafeAny;\n    this.embeddedViewRef = this.viewContainer.createEmbeddedView(templateRef, this.nzStringTemplateOutletContext);\n  }\n\n  private updateContext(): void {\n    const newCtx = this.nzStringTemplateOutletContext;\n    const oldCtx = this.embeddedViewRef!.context as NzSafeAny;\n    if (newCtx) {\n      for (const propName of Object.keys(newCtx)) {\n        oldCtx[propName] = newCtx[propName];\n      }\n    }\n  }\n\n  constructor(private viewContainer: ViewContainerRef, private templateRef: TemplateRef<NzSafeAny>) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const shouldRecreateView = (ctxChanges: SimpleChanges): boolean => {\n      const { nzStringTemplateOutletContext, nzStringTemplateOutlet } = ctxChanges;\n      let shouldOutletRecreate = false;\n      if (nzStringTemplateOutlet) {\n        if (nzStringTemplateOutlet.firstChange) {\n          shouldOutletRecreate = true;\n        } else {\n          const isPreviousOutletTemplate = nzStringTemplateOutlet.previousValue instanceof TemplateRef;\n          const isCurrentOutletTemplate = nzStringTemplateOutlet.currentValue instanceof TemplateRef;\n          shouldOutletRecreate = isPreviousOutletTemplate || isCurrentOutletTemplate;\n        }\n      }\n      const hasContextShapeChanged = (ctxChange: SimpleChange): boolean => {\n        const prevCtxKeys = Object.keys(ctxChange.previousValue || {});\n        const currCtxKeys = Object.keys(ctxChange.currentValue || {});\n        if (prevCtxKeys.length === currCtxKeys.length) {\n          for (const propName of currCtxKeys) {\n            if (prevCtxKeys.indexOf(propName) === -1) {\n              return true;\n            }\n          }\n          return false;\n        } else {\n          return true;\n        }\n      };\n      const shouldContextRecreate = nzStringTemplateOutletContext && hasContextShapeChanged(nzStringTemplateOutletContext);\n      return shouldContextRecreate || shouldOutletRecreate;\n    };\n    const recreateView = shouldRecreateView(changes);\n    if (recreateView) {\n      /** recreate view when context shape or outlet change **/\n      this.recreateView();\n    } else {\n      /** update context **/\n      this.updateContext();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzStringTemplateOutletDirective } from './string_template_outlet.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [NzStringTemplateOutletDirective],\n  declarations: [NzStringTemplateOutletDirective]\n})\nexport class NzOutletModule {}\n"],"names":[],"mappings":"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"}