/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Platform } from '@angular/cdk/platform';
import { ChangeDetectorRef, NgZone, OnChanges, TemplateRef } from '@angular/core';
import { NgClassType, NzSafeAny } from 'ng-zorro-antd/core/types';
import { Observable } from 'rxjs';
import { ShowUploadListInterface, UploadFile, UploadListType } from './interface';
import * as ɵngcc0 from '@angular/core';
declare type UploadListIconType = '' | 'uploading' | 'thumbnail';
interface UploadListFile extends UploadFile {
    isImageUrl?: boolean;
    isUploading?: boolean;
    iconType?: UploadListIconType;
    listItemNameCls?: NgClassType;
    showDownload?: boolean;
}
export declare class NzUploadListComponent implements OnChanges {
    private cdr;
    private doc;
    private ngZone;
    private platform;
    list: UploadListFile[];
    private get showPic();
    locale: NzSafeAny;
    listType: UploadListType;
    set items(list: UploadFile[]);
    icons: ShowUploadListInterface;
    onPreview: (file: UploadFile) => void;
    onRemove: (file: UploadFile) => void;
    onDownload: (file: UploadFile) => void;
    previewFile: (file: UploadFile) => Observable<string>;
    iconRender: TemplateRef<void>;
    private genErr;
    private extname;
    isImageUrl(file: UploadFile): boolean;
    private getIconType;
    private previewImage;
    private genThumb;
    private listItemNameCls;
    private showDownload;
    private fixData;
    handlePreview(file: UploadFile, e: Event): void;
    handleRemove(file: UploadFile, e: Event): void;
    handleDownload(file: UploadFile): void;
    constructor(cdr: ChangeDetectorRef, doc: NzSafeAny, ngZone: NgZone, platform: Platform);
    detectChanges(): void;
    ngOnChanges(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzUploadListComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzUploadListComponent, "nz-upload-list", ["nzUploadList"], { "locale": "locale"; "items": "items"; "listType": "listType"; "icons": "icons"; "onPreview": "onPreview"; "onRemove": "onRemove"; "onDownload": "onDownload"; "previewFile": "previewFile"; "iconRender": "iconRender"; }, {}, never, never>;
}
export {};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBsb2FkLWxpc3QuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInVwbG9hZC1saXN0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWxpYmFiYS5jb20gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IFBsYXRmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3BsYXRmb3JtJztcbmltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBOZ1pvbmUsIE9uQ2hhbmdlcywgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nQ2xhc3NUeXBlLCBOelNhZmVBbnkgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgU2hvd1VwbG9hZExpc3RJbnRlcmZhY2UsIFVwbG9hZEZpbGUsIFVwbG9hZExpc3RUeXBlIH0gZnJvbSAnLi9pbnRlcmZhY2UnO1xuZGVjbGFyZSB0eXBlIFVwbG9hZExpc3RJY29uVHlwZSA9ICcnIHwgJ3VwbG9hZGluZycgfCAndGh1bWJuYWlsJztcbmludGVyZmFjZSBVcGxvYWRMaXN0RmlsZSBleHRlbmRzIFVwbG9hZEZpbGUge1xuICAgIGlzSW1hZ2VVcmw/OiBib29sZWFuO1xuICAgIGlzVXBsb2FkaW5nPzogYm9vbGVhbjtcbiAgICBpY29uVHlwZT86IFVwbG9hZExpc3RJY29uVHlwZTtcbiAgICBsaXN0SXRlbU5hbWVDbHM/OiBOZ0NsYXNzVHlwZTtcbiAgICBzaG93RG93bmxvYWQ/OiBib29sZWFuO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpVcGxvYWRMaXN0Q29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgICBwcml2YXRlIGNkcjtcbiAgICBwcml2YXRlIGRvYztcbiAgICBwcml2YXRlIG5nWm9uZTtcbiAgICBwcml2YXRlIHBsYXRmb3JtO1xuICAgIGxpc3Q6IFVwbG9hZExpc3RGaWxlW107XG4gICAgcHJpdmF0ZSBnZXQgc2hvd1BpYygpO1xuICAgIGxvY2FsZTogTnpTYWZlQW55O1xuICAgIGxpc3RUeXBlOiBVcGxvYWRMaXN0VHlwZTtcbiAgICBzZXQgaXRlbXMobGlzdDogVXBsb2FkRmlsZVtdKTtcbiAgICBpY29uczogU2hvd1VwbG9hZExpc3RJbnRlcmZhY2U7XG4gICAgb25QcmV2aWV3OiAoZmlsZTogVXBsb2FkRmlsZSkgPT4gdm9pZDtcbiAgICBvblJlbW92ZTogKGZpbGU6IFVwbG9hZEZpbGUpID0+IHZvaWQ7XG4gICAgb25Eb3dubG9hZDogKGZpbGU6IFVwbG9hZEZpbGUpID0+IHZvaWQ7XG4gICAgcHJldmlld0ZpbGU6IChmaWxlOiBVcGxvYWRGaWxlKSA9PiBPYnNlcnZhYmxlPHN0cmluZz47XG4gICAgaWNvblJlbmRlcjogVGVtcGxhdGVSZWY8dm9pZD47XG4gICAgcHJpdmF0ZSBnZW5FcnI7XG4gICAgcHJpdmF0ZSBleHRuYW1lO1xuICAgIGlzSW1hZ2VVcmwoZmlsZTogVXBsb2FkRmlsZSk6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBnZXRJY29uVHlwZTtcbiAgICBwcml2YXRlIHByZXZpZXdJbWFnZTtcbiAgICBwcml2YXRlIGdlblRodW1iO1xuICAgIHByaXZhdGUgbGlzdEl0ZW1OYW1lQ2xzO1xuICAgIHByaXZhdGUgc2hvd0Rvd25sb2FkO1xuICAgIHByaXZhdGUgZml4RGF0YTtcbiAgICBoYW5kbGVQcmV2aWV3KGZpbGU6IFVwbG9hZEZpbGUsIGU6IEV2ZW50KTogdm9pZDtcbiAgICBoYW5kbGVSZW1vdmUoZmlsZTogVXBsb2FkRmlsZSwgZTogRXZlbnQpOiB2b2lkO1xuICAgIGhhbmRsZURvd25sb2FkKGZpbGU6IFVwbG9hZEZpbGUpOiB2b2lkO1xuICAgIGNvbnN0cnVjdG9yKGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIGRvYzogTnpTYWZlQW55LCBuZ1pvbmU6IE5nWm9uZSwgcGxhdGZvcm06IFBsYXRmb3JtKTtcbiAgICBkZXRlY3RDaGFuZ2VzKCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoKTogdm9pZDtcbn1cbmV4cG9ydCB7fTtcbiJdfQ==