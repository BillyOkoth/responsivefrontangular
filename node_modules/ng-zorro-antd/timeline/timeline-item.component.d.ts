/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectorRef, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';
import { NzTimelineMode } from './timeline.component';
import * as ɵngcc0 from '@angular/core';
declare const TimelineTimeDefaultColors: readonly ["red", "blue", "green", "grey", "gray"];
export declare type NzTimelineItemColor = typeof TimelineTimeDefaultColors[number];
export declare class NzTimelineItemComponent implements OnChanges {
    private cdr;
    template: TemplateRef<void>;
    nzColor: NzTimelineItemColor;
    nzDot: string | TemplateRef<void>;
    isLast: boolean;
    borderColor: string | null;
    position: NzTimelineMode | undefined;
    constructor(cdr: ChangeDetectorRef);
    ngOnChanges(changes: SimpleChanges): void;
    detectChanges(): void;
    private updateCustomColor;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzTimelineItemComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzTimelineItemComponent, "nz-timeline-item, [nz-timeline-item]", ["nzTimelineItem"], { "nzColor": "nzColor"; "nzDot": "nzDot"; }, {}, never, ["*"]>;
}
export {};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZWxpbmUtaXRlbS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidGltZWxpbmUtaXRlbS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBbGliYWJhLmNvbSBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcywgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE56VGltZWxpbmVNb2RlIH0gZnJvbSAnLi90aW1lbGluZS5jb21wb25lbnQnO1xuZGVjbGFyZSBjb25zdCBUaW1lbGluZVRpbWVEZWZhdWx0Q29sb3JzOiByZWFkb25seSBbXCJyZWRcIiwgXCJibHVlXCIsIFwiZ3JlZW5cIiwgXCJncmV5XCIsIFwiZ3JheVwiXTtcbmV4cG9ydCBkZWNsYXJlIHR5cGUgTnpUaW1lbGluZUl0ZW1Db2xvciA9IHR5cGVvZiBUaW1lbGluZVRpbWVEZWZhdWx0Q29sb3JzW251bWJlcl07XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOelRpbWVsaW5lSXRlbUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBjZHI7XG4gICAgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPHZvaWQ+O1xuICAgIG56Q29sb3I6IE56VGltZWxpbmVJdGVtQ29sb3I7XG4gICAgbnpEb3Q6IHN0cmluZyB8IFRlbXBsYXRlUmVmPHZvaWQ+O1xuICAgIGlzTGFzdDogYm9vbGVhbjtcbiAgICBib3JkZXJDb2xvcjogc3RyaW5nIHwgbnVsbDtcbiAgICBwb3NpdGlvbjogTnpUaW1lbGluZU1vZGUgfCB1bmRlZmluZWQ7XG4gICAgY29uc3RydWN0b3IoY2RyOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgZGV0ZWN0Q2hhbmdlcygpOiB2b2lkO1xuICAgIHByaXZhdGUgdXBkYXRlQ3VzdG9tQ29sb3I7XG59XG5leHBvcnQge307XG4iXX0=