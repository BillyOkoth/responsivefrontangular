/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Platform } from '@angular/cdk/platform';
import { AfterContentInit, ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from '@angular/core';
import { NzBreakpointKey, NzBreakpointService } from 'ng-zorro-antd/core/services';
import { BooleanInput } from 'ng-zorro-antd/core/types';
import { NzMenuDirective } from 'ng-zorro-antd/menu';
import * as ɵngcc0 from '@angular/core';
export declare class NzSiderComponent implements OnInit, OnDestroy, OnChanges, AfterContentInit {
    private platform;
    private cdr;
    private breakpointService;
    static ngAcceptInputType_nzReverseArrow: BooleanInput;
    static ngAcceptInputType_nzCollapsible: BooleanInput;
    static ngAcceptInputType_nzCollapsed: BooleanInput;
    private destroy$;
    nzMenuDirective: NzMenuDirective | null;
    readonly nzCollapsedChange: EventEmitter<any>;
    nzWidth: string | number;
    nzTheme: 'light' | 'dark';
    nzCollapsedWidth: number;
    nzBreakpoint: NzBreakpointKey | null;
    nzZeroTrigger: TemplateRef<void> | null;
    nzTrigger: TemplateRef<void> | undefined | null;
    nzReverseArrow: boolean;
    nzCollapsible: boolean;
    nzCollapsed: boolean;
    matchBreakPoint: boolean;
    flexSetting: string | null;
    widthSetting: string | null;
    updateStyleMap(): void;
    updateMenuInlineCollapsed(): void;
    setCollapsed(collapsed: boolean): void;
    constructor(platform: Platform, cdr: ChangeDetectorRef, breakpointService: NzBreakpointService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzSiderComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzSiderComponent, "nz-sider", ["nzSider"], { "nzWidth": "nzWidth"; "nzTheme": "nzTheme"; "nzCollapsedWidth": "nzCollapsedWidth"; "nzBreakpoint": "nzBreakpoint"; "nzZeroTrigger": "nzZeroTrigger"; "nzTrigger": "nzTrigger"; "nzReverseArrow": "nzReverseArrow"; "nzCollapsible": "nzCollapsible"; "nzCollapsed": "nzCollapsed"; }, { "nzCollapsedChange": "nzCollapsedChange"; }, ["nzMenuDirective"], ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInNpZGVyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBQbGF0Zm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9wbGF0Zm9ybSc7XG5pbXBvcnQgeyBBZnRlckNvbnRlbnRJbml0LCBDaGFuZ2VEZXRlY3RvclJlZiwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBTaW1wbGVDaGFuZ2VzLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTnpCcmVha3BvaW50S2V5LCBOekJyZWFrcG9pbnRTZXJ2aWNlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3NlcnZpY2VzJztcbmltcG9ydCB7IEJvb2xlYW5JbnB1dCB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS90eXBlcyc7XG5pbXBvcnQgeyBOek1lbnVEaXJlY3RpdmUgfSBmcm9tICduZy16b3Jyby1hbnRkL21lbnUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpTaWRlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMsIEFmdGVyQ29udGVudEluaXQge1xuICAgIHByaXZhdGUgcGxhdGZvcm07XG4gICAgcHJpdmF0ZSBjZHI7XG4gICAgcHJpdmF0ZSBicmVha3BvaW50U2VydmljZTtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpSZXZlcnNlQXJyb3c6IEJvb2xlYW5JbnB1dDtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpDb2xsYXBzaWJsZTogQm9vbGVhbklucHV0O1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9uekNvbGxhcHNlZDogQm9vbGVhbklucHV0O1xuICAgIHByaXZhdGUgZGVzdHJveSQ7XG4gICAgbnpNZW51RGlyZWN0aXZlOiBOek1lbnVEaXJlY3RpdmUgfCBudWxsO1xuICAgIHJlYWRvbmx5IG56Q29sbGFwc2VkQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBueldpZHRoOiBzdHJpbmcgfCBudW1iZXI7XG4gICAgbnpUaGVtZTogJ2xpZ2h0JyB8ICdkYXJrJztcbiAgICBuekNvbGxhcHNlZFdpZHRoOiBudW1iZXI7XG4gICAgbnpCcmVha3BvaW50OiBOekJyZWFrcG9pbnRLZXkgfCBudWxsO1xuICAgIG56WmVyb1RyaWdnZXI6IFRlbXBsYXRlUmVmPHZvaWQ+IHwgbnVsbDtcbiAgICBuelRyaWdnZXI6IFRlbXBsYXRlUmVmPHZvaWQ+IHwgdW5kZWZpbmVkIHwgbnVsbDtcbiAgICBuelJldmVyc2VBcnJvdzogYm9vbGVhbjtcbiAgICBuekNvbGxhcHNpYmxlOiBib29sZWFuO1xuICAgIG56Q29sbGFwc2VkOiBib29sZWFuO1xuICAgIG1hdGNoQnJlYWtQb2ludDogYm9vbGVhbjtcbiAgICBmbGV4U2V0dGluZzogc3RyaW5nIHwgbnVsbDtcbiAgICB3aWR0aFNldHRpbmc6IHN0cmluZyB8IG51bGw7XG4gICAgdXBkYXRlU3R5bGVNYXAoKTogdm9pZDtcbiAgICB1cGRhdGVNZW51SW5saW5lQ29sbGFwc2VkKCk6IHZvaWQ7XG4gICAgc2V0Q29sbGFwc2VkKGNvbGxhcHNlZDogYm9vbGVhbik6IHZvaWQ7XG4gICAgY29uc3RydWN0b3IocGxhdGZvcm06IFBsYXRmb3JtLCBjZHI6IENoYW5nZURldGVjdG9yUmVmLCBicmVha3BvaW50U2VydmljZTogTnpCcmVha3BvaW50U2VydmljZSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19