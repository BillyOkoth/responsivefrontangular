{"version":3,"file":"calendar.pipe.js","sources":["calendar.pipe.ts"],"names":[],"mappings":"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","sourcesContent":["/* angular2-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport { Pipe, ChangeDetectorRef, PipeTransform, EventEmitter, OnDestroy, NgZone } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n// under systemjs, moment is actually exported as the default export, so we account for that\r\nconst momentConstructor: (value?: any) => moment.Moment = (<any>moment).default || moment;\r\n\r\n@Pipe({ name: 'amCalendar', pure: false })\r\nexport class CalendarPipe implements PipeTransform, OnDestroy {\r\n\r\n  /**\r\n   * @private Internal reference counter, so we can clean up when no instances are in use\r\n   * @type {number}\r\n   */\r\n  private static refs: number = 0;\r\n\r\n  private static timer: number;\r\n  private static midnight: EventEmitter<Date>;\r\n\r\n  private midnightSub: Subscription;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private ngZone: NgZone) {\r\n    // using a single static timer for all instances of this pipe for performance reasons\r\n    CalendarPipe.initTimer(ngZone);\r\n\r\n    CalendarPipe.refs++;\r\n\r\n    // values such as Today will need to be replaced with Yesterday after midnight,\r\n    // so make sure we subscribe to an EventEmitter that we set up to emit at midnight\r\n    this.midnightSub = CalendarPipe.midnight.subscribe(() => {\r\n      this.ngZone.run(() => this.cdRef.markForCheck());\r\n    });\r\n  }\r\n\r\n  transform(value: Date | moment.Moment, ...args: any[]): any {\r\n    let formats: any = null;\r\n    let referenceTime: any = null;\r\n\r\n    for (let i = 0, len = args.length; i < len; i++) {\r\n      if (args[i] !== null) {\r\n        if (typeof args[i] === 'object' && !moment.isMoment(args[i])) {\r\n          formats = args[i];\r\n        } else {\r\n          referenceTime = momentConstructor(args[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return momentConstructor(value).calendar(referenceTime, formats);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (CalendarPipe.refs > 0) {\r\n      CalendarPipe.refs--;\r\n    }\r\n\r\n    if (CalendarPipe.refs === 0) {\r\n      CalendarPipe.removeTimer();\r\n    }\r\n\r\n    this.midnightSub.unsubscribe();\r\n  }\r\n\r\n  private static initTimer(ngZone: NgZone) {\r\n    // initialize the timer\r\n    if (!CalendarPipe.midnight) {\r\n      CalendarPipe.midnight = new EventEmitter<Date>();\r\n      if (typeof window !== 'undefined') {\r\n        let timeToUpdate = CalendarPipe._getMillisecondsUntilUpdate();\r\n        CalendarPipe.timer = ngZone.runOutsideAngular(() => {\r\n          return window.setTimeout(() => {\r\n            // emit the current date\r\n            CalendarPipe.midnight.emit(new Date());\r\n\r\n            // refresh the timer\r\n            CalendarPipe.removeTimer();\r\n            CalendarPipe.initTimer(ngZone);\r\n          }, timeToUpdate);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private static removeTimer() {\r\n    if (CalendarPipe.timer) {\r\n      window.clearTimeout(CalendarPipe.timer);\r\n      CalendarPipe.timer = null;\r\n      CalendarPipe.midnight = null;\r\n    }\r\n  }\r\n\r\n  private static _getMillisecondsUntilUpdate() {\r\n    var now = momentConstructor();\r\n    var tomorrow = momentConstructor().startOf('day').add(1, 'days');\r\n    var timeToMidnight = tomorrow.valueOf() - now.valueOf();\r\n    return timeToMidnight + 1000; // 1 second after midnight\r\n  }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}