{"version":3,"file":"subtract.pipe.js","sources":["subtract.pipe.ts"],"names":[],"mappings":";AAAA,6DAA6D;;AAC7D;AAEkB;AAIY;AACgC;AAGxC;AAIK;AAAG;AAb9B,sCAAqE;AACrE,+BAAiC;AAGjC;AAAgD,IAAhD;AAA0B,IAO1B,CAAC;AACD,IAPI,gCAAS,GAAT,UAAU,KAAU,EAAE,MAAgC,EAAE,IAA+B;AAAI,QACvF,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,IAAI,CAAC,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC;AAC3G,YAAY,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;AACxE,QAAQ,CAAC;AACT,QAAQ,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACpD,IAAI,CAAC;IANQ,YAAY,wBADxB,WAAI,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,QAChB;GAAY,CAOxB;;;;gDACD;AACA,IAFA,mBAAC;AAED,CAFC,AAPD,IAOC;AAPY,oCAAY;AAAC","sourcesContent":["/* angular2-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, ChangeDetectorRef, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amSubtract' })\r\nexport class SubtractPipe implements PipeTransform {\r\n    transform(value: any, amount: moment.DurationInputArg1, unit?: moment.DurationInputArg2): any {\r\n        if (typeof amount === 'undefined' || (typeof amount === 'number' && typeof unit === 'undefined')) {\r\n            throw new Error('SubtractPipe: missing required arguments');\r\n        }\r\n        return moment(value).subtract(amount, unit);\r\n    }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}