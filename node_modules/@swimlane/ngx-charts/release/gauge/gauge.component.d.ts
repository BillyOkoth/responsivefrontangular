import { ElementRef, AfterViewInit, EventEmitter, TemplateRef } from '@angular/core';
import { BaseChartComponent } from '../common/base-chart.component';
import { ViewDimensions } from '../common/view-dimensions.helper';
import { ColorHelper } from '../common/color.helper';
import * as ɵngcc0 from '@angular/core';
export declare class GaugeComponent extends BaseChartComponent implements AfterViewInit {
    legend: boolean;
    legendTitle: string;
    legendPosition: string;
    min: number;
    max: number;
    textValue: string;
    units: string;
    bigSegments: number;
    smallSegments: number;
    results: any[];
    showAxis: boolean;
    startAngle: number;
    angleSpan: number;
    activeEntries: any[];
    axisTickFormatting: any;
    tooltipDisabled: boolean;
    valueFormatting: (value: any) => string;
    showText: boolean;
    margin: any[];
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    tooltipTemplate: TemplateRef<any>;
    textEl: ElementRef;
    dims: ViewDimensions;
    domain: any[];
    valueDomain: any;
    valueScale: any;
    colors: ColorHelper;
    transform: string;
    outerRadius: number;
    textRadius: number;
    resizeScale: number;
    rotation: string;
    textTransform: string;
    cornerRadius: number;
    arcs: any[];
    displayValue: string;
    legendOptions: any;
    ngAfterViewInit(): void;
    update(): void;
    getArcs(): any[];
    getDomain(): any[];
    getValueDomain(): any[];
    getValueScale(): any;
    getDisplayValue(): string;
    scaleText(repeat?: boolean): void;
    onClick(data: any): void;
    getLegendOptions(): any;
    setColors(): void;
    onActivate(item: any): void;
    onDeactivate(item: any): void;
    isActive(entry: any): boolean;
    trackBy(index: any, item: any): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GaugeComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<GaugeComponent, "ngx-charts-gauge", never, { "margin": "margin"; "startAngle": "startAngle"; "angleSpan": "angleSpan"; "min": "min"; "max": "max"; "activeEntries": "activeEntries"; "legend": "legend"; "legendTitle": "legendTitle"; "legendPosition": "legendPosition"; "textValue": "textValue"; "units": "units"; "bigSegments": "bigSegments"; "smallSegments": "smallSegments"; "results": "results"; "showAxis": "showAxis"; "axisTickFormatting": "axisTickFormatting"; "tooltipDisabled": "tooltipDisabled"; "valueFormatting": "valueFormatting"; "showText": "showText"; }, { "activate": "activate"; "deactivate": "deactivate"; }, ["tooltipTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2F1Z2UuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImdhdWdlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBBZnRlclZpZXdJbml0LCBFdmVudEVtaXR0ZXIsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEJhc2VDaGFydENvbXBvbmVudCB9IGZyb20gJy4uL2NvbW1vbi9iYXNlLWNoYXJ0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFZpZXdEaW1lbnNpb25zIH0gZnJvbSAnLi4vY29tbW9uL3ZpZXctZGltZW5zaW9ucy5oZWxwZXInO1xyXG5pbXBvcnQgeyBDb2xvckhlbHBlciB9IGZyb20gJy4uL2NvbW1vbi9jb2xvci5oZWxwZXInO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBHYXVnZUNvbXBvbmVudCBleHRlbmRzIEJhc2VDaGFydENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xyXG4gICAgbGVnZW5kOiBib29sZWFuO1xyXG4gICAgbGVnZW5kVGl0bGU6IHN0cmluZztcclxuICAgIGxlZ2VuZFBvc2l0aW9uOiBzdHJpbmc7XHJcbiAgICBtaW46IG51bWJlcjtcclxuICAgIG1heDogbnVtYmVyO1xyXG4gICAgdGV4dFZhbHVlOiBzdHJpbmc7XHJcbiAgICB1bml0czogc3RyaW5nO1xyXG4gICAgYmlnU2VnbWVudHM6IG51bWJlcjtcclxuICAgIHNtYWxsU2VnbWVudHM6IG51bWJlcjtcclxuICAgIHJlc3VsdHM6IGFueVtdO1xyXG4gICAgc2hvd0F4aXM6IGJvb2xlYW47XHJcbiAgICBzdGFydEFuZ2xlOiBudW1iZXI7XHJcbiAgICBhbmdsZVNwYW46IG51bWJlcjtcclxuICAgIGFjdGl2ZUVudHJpZXM6IGFueVtdO1xyXG4gICAgYXhpc1RpY2tGb3JtYXR0aW5nOiBhbnk7XHJcbiAgICB0b29sdGlwRGlzYWJsZWQ6IGJvb2xlYW47XHJcbiAgICB2YWx1ZUZvcm1hdHRpbmc6ICh2YWx1ZTogYW55KSA9PiBzdHJpbmc7XHJcbiAgICBzaG93VGV4dDogYm9vbGVhbjtcclxuICAgIG1hcmdpbjogYW55W107XHJcbiAgICBhY3RpdmF0ZTogRXZlbnRFbWl0dGVyPGFueT47XHJcbiAgICBkZWFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIHRvb2x0aXBUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcclxuICAgIHRleHRFbDogRWxlbWVudFJlZjtcclxuICAgIGRpbXM6IFZpZXdEaW1lbnNpb25zO1xyXG4gICAgZG9tYWluOiBhbnlbXTtcclxuICAgIHZhbHVlRG9tYWluOiBhbnk7XHJcbiAgICB2YWx1ZVNjYWxlOiBhbnk7XHJcbiAgICBjb2xvcnM6IENvbG9ySGVscGVyO1xyXG4gICAgdHJhbnNmb3JtOiBzdHJpbmc7XHJcbiAgICBvdXRlclJhZGl1czogbnVtYmVyO1xyXG4gICAgdGV4dFJhZGl1czogbnVtYmVyO1xyXG4gICAgcmVzaXplU2NhbGU6IG51bWJlcjtcclxuICAgIHJvdGF0aW9uOiBzdHJpbmc7XHJcbiAgICB0ZXh0VHJhbnNmb3JtOiBzdHJpbmc7XHJcbiAgICBjb3JuZXJSYWRpdXM6IG51bWJlcjtcclxuICAgIGFyY3M6IGFueVtdO1xyXG4gICAgZGlzcGxheVZhbHVlOiBzdHJpbmc7XHJcbiAgICBsZWdlbmRPcHRpb25zOiBhbnk7XHJcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcclxuICAgIHVwZGF0ZSgpOiB2b2lkO1xyXG4gICAgZ2V0QXJjcygpOiBhbnlbXTtcclxuICAgIGdldERvbWFpbigpOiBhbnlbXTtcclxuICAgIGdldFZhbHVlRG9tYWluKCk6IGFueVtdO1xyXG4gICAgZ2V0VmFsdWVTY2FsZSgpOiBhbnk7XHJcbiAgICBnZXREaXNwbGF5VmFsdWUoKTogc3RyaW5nO1xyXG4gICAgc2NhbGVUZXh0KHJlcGVhdD86IGJvb2xlYW4pOiB2b2lkO1xyXG4gICAgb25DbGljayhkYXRhOiBhbnkpOiB2b2lkO1xyXG4gICAgZ2V0TGVnZW5kT3B0aW9ucygpOiBhbnk7XHJcbiAgICBzZXRDb2xvcnMoKTogdm9pZDtcclxuICAgIG9uQWN0aXZhdGUoaXRlbTogYW55KTogdm9pZDtcclxuICAgIG9uRGVhY3RpdmF0ZShpdGVtOiBhbnkpOiB2b2lkO1xyXG4gICAgaXNBY3RpdmUoZW50cnk6IGFueSk6IGJvb2xlYW47XHJcbiAgICB0cmFja0J5KGluZGV4OiBhbnksIGl0ZW06IGFueSk6IHN0cmluZztcclxufVxyXG4iXX0=