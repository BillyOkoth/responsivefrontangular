import { EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export interface CardModel {
    x: any;
    y: any;
    width: number;
    height: number;
    color: string;
    label: string;
    data: any;
    tooltipText: string;
}
export declare class CardSeriesComponent implements OnChanges {
    data: any[];
    slots: any[];
    dims: any;
    colors: any;
    innerPadding: number;
    cardColor: any;
    bandColor: any;
    emptyColor: string;
    textColor: any;
    valueFormatting: any;
    labelFormatting: any;
    animations: boolean;
    select: EventEmitter<{}>;
    cards: CardModel[];
    emptySlots: any[];
    medianSize: number;
    ngOnChanges(changes: SimpleChanges): void;
    update(): void;
    getCards(): any[];
    trackBy(index: any, card: any): string;
    onClick(data: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CardSeriesComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CardSeriesComponent, "g[ngx-charts-card-series]", never, { "innerPadding": "innerPadding"; "emptyColor": "emptyColor"; "animations": "animations"; "data": "data"; "slots": "slots"; "dims": "dims"; "colors": "colors"; "cardColor": "cardColor"; "bandColor": "bandColor"; "textColor": "textColor"; "valueFormatting": "valueFormatting"; "labelFormatting": "labelFormatting"; }, { "select": "select"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC1zZXJpZXMuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNhcmQtc2VyaWVzLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuZXhwb3J0IGludGVyZmFjZSBDYXJkTW9kZWwge1xyXG4gICAgeDogYW55O1xyXG4gICAgeTogYW55O1xyXG4gICAgd2lkdGg6IG51bWJlcjtcclxuICAgIGhlaWdodDogbnVtYmVyO1xyXG4gICAgY29sb3I6IHN0cmluZztcclxuICAgIGxhYmVsOiBzdHJpbmc7XHJcbiAgICBkYXRhOiBhbnk7XHJcbiAgICB0b29sdGlwVGV4dDogc3RyaW5nO1xyXG59XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENhcmRTZXJpZXNDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xyXG4gICAgZGF0YTogYW55W107XHJcbiAgICBzbG90czogYW55W107XHJcbiAgICBkaW1zOiBhbnk7XHJcbiAgICBjb2xvcnM6IGFueTtcclxuICAgIGlubmVyUGFkZGluZzogbnVtYmVyO1xyXG4gICAgY2FyZENvbG9yOiBhbnk7XHJcbiAgICBiYW5kQ29sb3I6IGFueTtcclxuICAgIGVtcHR5Q29sb3I6IHN0cmluZztcclxuICAgIHRleHRDb2xvcjogYW55O1xyXG4gICAgdmFsdWVGb3JtYXR0aW5nOiBhbnk7XHJcbiAgICBsYWJlbEZvcm1hdHRpbmc6IGFueTtcclxuICAgIGFuaW1hdGlvbnM6IGJvb2xlYW47XHJcbiAgICBzZWxlY3Q6IEV2ZW50RW1pdHRlcjx7fT47XHJcbiAgICBjYXJkczogQ2FyZE1vZGVsW107XHJcbiAgICBlbXB0eVNsb3RzOiBhbnlbXTtcclxuICAgIG1lZGlhblNpemU6IG51bWJlcjtcclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xyXG4gICAgdXBkYXRlKCk6IHZvaWQ7XHJcbiAgICBnZXRDYXJkcygpOiBhbnlbXTtcclxuICAgIHRyYWNrQnkoaW5kZXg6IGFueSwgY2FyZDogYW55KTogc3RyaW5nO1xyXG4gICAgb25DbGljayhkYXRhOiBhbnkpOiB2b2lkO1xyXG59XHJcbiJdfQ==