import { TemplateRef, EventEmitter } from '@angular/core';
import { ViewDimensions } from '../common/view-dimensions.helper';
import { ColorHelper } from '../common/color.helper';
import { BaseChartComponent } from '../common/base-chart.component';
import { DataItem } from '../models/chart-data.model';
import * as ɵngcc0 from '@angular/core';
export declare class PieGridComponent extends BaseChartComponent {
    designatedTotal: number;
    tooltipDisabled: boolean;
    tooltipText: (o: any) => any;
    label: string;
    minWidth: number;
    activeEntries: any[];
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    dims: ViewDimensions;
    data: any[];
    transform: string;
    series: any[];
    domain: any[];
    colorScale: ColorHelper;
    margin: number[];
    tooltipTemplate: TemplateRef<any>;
    update(): void;
    defaultTooltipText({ data }: {
        data: any;
    }): string;
    getDomain(): any[];
    getSeries(): any[];
    getTotal(): any;
    onClick(data: DataItem): void;
    setColors(): void;
    onActivate(item: any, fromLegend?: boolean): void;
    onDeactivate(item: any, fromLegend?: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PieGridComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PieGridComponent, "ngx-charts-pie-grid", never, { "tooltipText": "tooltipText"; "activeEntries": "activeEntries"; "designatedTotal": "designatedTotal"; "tooltipDisabled": "tooltipDisabled"; "label": "label"; "minWidth": "minWidth"; }, { "activate": "activate"; "deactivate": "deactivate"; }, ["tooltipTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGllLWdyaWQuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBpZS1ncmlkLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGVtcGxhdGVSZWYsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBWaWV3RGltZW5zaW9ucyB9IGZyb20gJy4uL2NvbW1vbi92aWV3LWRpbWVuc2lvbnMuaGVscGVyJztcclxuaW1wb3J0IHsgQ29sb3JIZWxwZXIgfSBmcm9tICcuLi9jb21tb24vY29sb3IuaGVscGVyJztcclxuaW1wb3J0IHsgQmFzZUNoYXJ0Q29tcG9uZW50IH0gZnJvbSAnLi4vY29tbW9uL2Jhc2UtY2hhcnQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRGF0YUl0ZW0gfSBmcm9tICcuLi9tb2RlbHMvY2hhcnQtZGF0YS5tb2RlbCc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBpZUdyaWRDb21wb25lbnQgZXh0ZW5kcyBCYXNlQ2hhcnRDb21wb25lbnQge1xyXG4gICAgZGVzaWduYXRlZFRvdGFsOiBudW1iZXI7XHJcbiAgICB0b29sdGlwRGlzYWJsZWQ6IGJvb2xlYW47XHJcbiAgICB0b29sdGlwVGV4dDogKG86IGFueSkgPT4gYW55O1xyXG4gICAgbGFiZWw6IHN0cmluZztcclxuICAgIG1pbldpZHRoOiBudW1iZXI7XHJcbiAgICBhY3RpdmVFbnRyaWVzOiBhbnlbXTtcclxuICAgIGFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIGRlYWN0aXZhdGU6IEV2ZW50RW1pdHRlcjxhbnk+O1xyXG4gICAgZGltczogVmlld0RpbWVuc2lvbnM7XHJcbiAgICBkYXRhOiBhbnlbXTtcclxuICAgIHRyYW5zZm9ybTogc3RyaW5nO1xyXG4gICAgc2VyaWVzOiBhbnlbXTtcclxuICAgIGRvbWFpbjogYW55W107XHJcbiAgICBjb2xvclNjYWxlOiBDb2xvckhlbHBlcjtcclxuICAgIG1hcmdpbjogbnVtYmVyW107XHJcbiAgICB0b29sdGlwVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XHJcbiAgICB1cGRhdGUoKTogdm9pZDtcclxuICAgIGRlZmF1bHRUb29sdGlwVGV4dCh7IGRhdGEgfToge1xyXG4gICAgICAgIGRhdGE6IGFueTtcclxuICAgIH0pOiBzdHJpbmc7XHJcbiAgICBnZXREb21haW4oKTogYW55W107XHJcbiAgICBnZXRTZXJpZXMoKTogYW55W107XHJcbiAgICBnZXRUb3RhbCgpOiBhbnk7XHJcbiAgICBvbkNsaWNrKGRhdGE6IERhdGFJdGVtKTogdm9pZDtcclxuICAgIHNldENvbG9ycygpOiB2b2lkO1xyXG4gICAgb25BY3RpdmF0ZShpdGVtOiBhbnksIGZyb21MZWdlbmQ/OiBib29sZWFuKTogdm9pZDtcclxuICAgIG9uRGVhY3RpdmF0ZShpdGVtOiBhbnksIGZyb21MZWdlbmQ/OiBib29sZWFuKTogdm9pZDtcclxufVxyXG4iXX0=