import { EventEmitter, ElementRef, SimpleChanges, OnChanges } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class PieArcComponent implements OnChanges {
    fill: any;
    startAngle: number;
    endAngle: number;
    innerRadius: any;
    outerRadius: any;
    cornerRadius: number;
    value: any;
    max: any;
    data: any;
    explodeSlices: boolean;
    gradient: boolean;
    animate: boolean;
    pointerEvents: boolean;
    isActive: boolean;
    select: EventEmitter<{}>;
    activate: EventEmitter<{}>;
    deactivate: EventEmitter<{}>;
    dblclick: EventEmitter<{}>;
    element: HTMLElement;
    path: any;
    startOpacity: number;
    radialGradientId: string;
    linearGradientId: string;
    gradientFill: string;
    initialized: boolean;
    private _timeout;
    constructor(element: ElementRef);
    ngOnChanges(changes: SimpleChanges): void;
    getGradient(): any;
    getPointerEvents(): "auto" | "none";
    update(): void;
    calculateArc(): any;
    loadAnimation(): void;
    updateAnimation(): void;
    onClick(): void;
    onDblClick(event: MouseEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PieArcComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PieArcComponent, "g[ngx-charts-pie-arc]", never, { "startAngle": "startAngle"; "endAngle": "endAngle"; "cornerRadius": "cornerRadius"; "explodeSlices": "explodeSlices"; "gradient": "gradient"; "animate": "animate"; "pointerEvents": "pointerEvents"; "isActive": "isActive"; "fill": "fill"; "innerRadius": "innerRadius"; "outerRadius": "outerRadius"; "value": "value"; "max": "max"; "data": "data"; }, { "select": "select"; "activate": "activate"; "deactivate": "deactivate"; "dblclick": "dblclick"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGllLWFyYy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicGllLWFyYy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIEVsZW1lbnRSZWYsIFNpbXBsZUNoYW5nZXMsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQaWVBcmNDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xyXG4gICAgZmlsbDogYW55O1xyXG4gICAgc3RhcnRBbmdsZTogbnVtYmVyO1xyXG4gICAgZW5kQW5nbGU6IG51bWJlcjtcclxuICAgIGlubmVyUmFkaXVzOiBhbnk7XHJcbiAgICBvdXRlclJhZGl1czogYW55O1xyXG4gICAgY29ybmVyUmFkaXVzOiBudW1iZXI7XHJcbiAgICB2YWx1ZTogYW55O1xyXG4gICAgbWF4OiBhbnk7XHJcbiAgICBkYXRhOiBhbnk7XHJcbiAgICBleHBsb2RlU2xpY2VzOiBib29sZWFuO1xyXG4gICAgZ3JhZGllbnQ6IGJvb2xlYW47XHJcbiAgICBhbmltYXRlOiBib29sZWFuO1xyXG4gICAgcG9pbnRlckV2ZW50czogYm9vbGVhbjtcclxuICAgIGlzQWN0aXZlOiBib29sZWFuO1xyXG4gICAgc2VsZWN0OiBFdmVudEVtaXR0ZXI8e30+O1xyXG4gICAgYWN0aXZhdGU6IEV2ZW50RW1pdHRlcjx7fT47XHJcbiAgICBkZWFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8e30+O1xyXG4gICAgZGJsY2xpY2s6IEV2ZW50RW1pdHRlcjx7fT47XHJcbiAgICBlbGVtZW50OiBIVE1MRWxlbWVudDtcclxuICAgIHBhdGg6IGFueTtcclxuICAgIHN0YXJ0T3BhY2l0eTogbnVtYmVyO1xyXG4gICAgcmFkaWFsR3JhZGllbnRJZDogc3RyaW5nO1xyXG4gICAgbGluZWFyR3JhZGllbnRJZDogc3RyaW5nO1xyXG4gICAgZ3JhZGllbnRGaWxsOiBzdHJpbmc7XHJcbiAgICBpbml0aWFsaXplZDogYm9vbGVhbjtcclxuICAgIHByaXZhdGUgX3RpbWVvdXQ7XHJcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50OiBFbGVtZW50UmVmKTtcclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xyXG4gICAgZ2V0R3JhZGllbnQoKTogYW55O1xyXG4gICAgZ2V0UG9pbnRlckV2ZW50cygpOiBcImF1dG9cIiB8IFwibm9uZVwiO1xyXG4gICAgdXBkYXRlKCk6IHZvaWQ7XHJcbiAgICBjYWxjdWxhdGVBcmMoKTogYW55O1xyXG4gICAgbG9hZEFuaW1hdGlvbigpOiB2b2lkO1xyXG4gICAgdXBkYXRlQW5pbWF0aW9uKCk6IHZvaWQ7XHJcbiAgICBvbkNsaWNrKCk6IHZvaWQ7XHJcbiAgICBvbkRibENsaWNrKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZDtcclxufVxyXG4iXX0=