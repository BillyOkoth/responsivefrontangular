import { SimpleChanges, EventEmitter, OnChanges, TemplateRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class PieSeriesComponent implements OnChanges {
    colors: any;
    series: any;
    dims: any;
    innerRadius: number;
    outerRadius: number;
    explodeSlices: any;
    showLabels: any;
    gradient: boolean;
    activeEntries: any[];
    labelFormatting: any;
    trimLabels: boolean;
    maxLabelLength: number;
    tooltipText: (o: any) => any;
    tooltipDisabled: boolean;
    tooltipTemplate: TemplateRef<any>;
    animations: boolean;
    select: EventEmitter<{}>;
    activate: EventEmitter<{}>;
    deactivate: EventEmitter<{}>;
    dblclick: EventEmitter<{}>;
    max: number;
    data: any;
    ngOnChanges(changes: SimpleChanges): void;
    update(): void;
    midAngle(d: any): number;
    outerArc(): any;
    calculateLabelPositions(pieData: any): any;
    labelVisible(myArc: any): boolean;
    getTooltipTitle(a: any): any;
    labelText(myArc: any): string;
    label(myArc: any): string;
    defaultTooltipText(myArc: any): string;
    color(myArc: any): any;
    trackBy(index: any, item: any): string;
    onClick(data: any): void;
    isActive(entry: any): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PieSeriesComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PieSeriesComponent, "g[ngx-charts-pie-series]", never, { "series": "series"; "innerRadius": "innerRadius"; "outerRadius": "outerRadius"; "trimLabels": "trimLabels"; "maxLabelLength": "maxLabelLength"; "tooltipDisabled": "tooltipDisabled"; "animations": "animations"; "tooltipText": "tooltipText"; "colors": "colors"; "dims": "dims"; "explodeSlices": "explodeSlices"; "showLabels": "showLabels"; "gradient": "gradient"; "activeEntries": "activeEntries"; "labelFormatting": "labelFormatting"; "tooltipTemplate": "tooltipTemplate"; }, { "select": "select"; "activate": "activate"; "deactivate": "deactivate"; "dblclick": "dblclick"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGllLXNlcmllcy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicGllLXNlcmllcy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTaW1wbGVDaGFuZ2VzLCBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUGllU2VyaWVzQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcclxuICAgIGNvbG9yczogYW55O1xyXG4gICAgc2VyaWVzOiBhbnk7XHJcbiAgICBkaW1zOiBhbnk7XHJcbiAgICBpbm5lclJhZGl1czogbnVtYmVyO1xyXG4gICAgb3V0ZXJSYWRpdXM6IG51bWJlcjtcclxuICAgIGV4cGxvZGVTbGljZXM6IGFueTtcclxuICAgIHNob3dMYWJlbHM6IGFueTtcclxuICAgIGdyYWRpZW50OiBib29sZWFuO1xyXG4gICAgYWN0aXZlRW50cmllczogYW55W107XHJcbiAgICBsYWJlbEZvcm1hdHRpbmc6IGFueTtcclxuICAgIHRyaW1MYWJlbHM6IGJvb2xlYW47XHJcbiAgICBtYXhMYWJlbExlbmd0aDogbnVtYmVyO1xyXG4gICAgdG9vbHRpcFRleHQ6IChvOiBhbnkpID0+IGFueTtcclxuICAgIHRvb2x0aXBEaXNhYmxlZDogYm9vbGVhbjtcclxuICAgIHRvb2x0aXBUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcclxuICAgIGFuaW1hdGlvbnM6IGJvb2xlYW47XHJcbiAgICBzZWxlY3Q6IEV2ZW50RW1pdHRlcjx7fT47XHJcbiAgICBhY3RpdmF0ZTogRXZlbnRFbWl0dGVyPHt9PjtcclxuICAgIGRlYWN0aXZhdGU6IEV2ZW50RW1pdHRlcjx7fT47XHJcbiAgICBkYmxjbGljazogRXZlbnRFbWl0dGVyPHt9PjtcclxuICAgIG1heDogbnVtYmVyO1xyXG4gICAgZGF0YTogYW55O1xyXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XHJcbiAgICB1cGRhdGUoKTogdm9pZDtcclxuICAgIG1pZEFuZ2xlKGQ6IGFueSk6IG51bWJlcjtcclxuICAgIG91dGVyQXJjKCk6IGFueTtcclxuICAgIGNhbGN1bGF0ZUxhYmVsUG9zaXRpb25zKHBpZURhdGE6IGFueSk6IGFueTtcclxuICAgIGxhYmVsVmlzaWJsZShteUFyYzogYW55KTogYm9vbGVhbjtcclxuICAgIGdldFRvb2x0aXBUaXRsZShhOiBhbnkpOiBhbnk7XHJcbiAgICBsYWJlbFRleHQobXlBcmM6IGFueSk6IHN0cmluZztcclxuICAgIGxhYmVsKG15QXJjOiBhbnkpOiBzdHJpbmc7XHJcbiAgICBkZWZhdWx0VG9vbHRpcFRleHQobXlBcmM6IGFueSk6IHN0cmluZztcclxuICAgIGNvbG9yKG15QXJjOiBhbnkpOiBhbnk7XHJcbiAgICB0cmFja0J5KGluZGV4OiBhbnksIGl0ZW06IGFueSk6IHN0cmluZztcclxuICAgIG9uQ2xpY2soZGF0YTogYW55KTogdm9pZDtcclxuICAgIGlzQWN0aXZlKGVudHJ5OiBhbnkpOiBib29sZWFuO1xyXG59XHJcbiJdfQ==