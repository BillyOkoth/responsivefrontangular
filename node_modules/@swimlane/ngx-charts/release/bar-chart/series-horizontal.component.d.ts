import { EventEmitter, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';
import { DataItem } from '../models/chart-data.model';
import * as ɵngcc0 from '@angular/core';
export declare class SeriesHorizontal implements OnChanges {
    bars: any;
    x: any;
    y: any;
    barsForDataLabels: Array<{
        x: number;
        y: number;
        width: number;
        height: number;
        total: number;
        series: string;
    }>;
    dims: any;
    type: string;
    series: any;
    xScale: any;
    yScale: any;
    colors: any;
    tooltipDisabled: boolean;
    gradient: boolean;
    activeEntries: any[];
    seriesName: string;
    tooltipTemplate: TemplateRef<any>;
    roundEdges: boolean;
    animations: boolean;
    showDataLabel: boolean;
    dataLabelFormatting: any;
    noBarWhenZero: boolean;
    select: EventEmitter<{}>;
    activate: EventEmitter<{}>;
    deactivate: EventEmitter<{}>;
    dataLabelWidthChanged: EventEmitter<{}>;
    tooltipPlacement: string;
    tooltipType: string;
    ngOnChanges(changes: SimpleChanges): void;
    update(): void;
    updateDataLabels(): void;
    updateTooltipSettings(): void;
    isActive(entry: any): boolean;
    getLabel(dataItem: any): string;
    trackBy(index: any, bar: any): any;
    trackDataLabelBy(index: any, barLabel: any): string;
    click(data: DataItem): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SeriesHorizontal, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SeriesHorizontal, "g[ngx-charts-series-horizontal]", never, { "type": "type"; "tooltipDisabled": "tooltipDisabled"; "animations": "animations"; "showDataLabel": "showDataLabel"; "noBarWhenZero": "noBarWhenZero"; "dims": "dims"; "series": "series"; "xScale": "xScale"; "yScale": "yScale"; "colors": "colors"; "gradient": "gradient"; "activeEntries": "activeEntries"; "seriesName": "seriesName"; "tooltipTemplate": "tooltipTemplate"; "roundEdges": "roundEdges"; "dataLabelFormatting": "dataLabelFormatting"; }, { "select": "select"; "activate": "activate"; "deactivate": "deactivate"; "dataLabelWidthChanged": "dataLabelWidthChanged"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyaWVzLWhvcml6b250YWwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInNlcmllcy1ob3Jpem9udGFsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IERhdGFJdGVtIH0gZnJvbSAnLi4vbW9kZWxzL2NoYXJ0LWRhdGEubW9kZWwnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTZXJpZXNIb3Jpem9udGFsIGltcGxlbWVudHMgT25DaGFuZ2VzIHtcclxuICAgIGJhcnM6IGFueTtcclxuICAgIHg6IGFueTtcclxuICAgIHk6IGFueTtcclxuICAgIGJhcnNGb3JEYXRhTGFiZWxzOiBBcnJheTx7XHJcbiAgICAgICAgeDogbnVtYmVyO1xyXG4gICAgICAgIHk6IG51bWJlcjtcclxuICAgICAgICB3aWR0aDogbnVtYmVyO1xyXG4gICAgICAgIGhlaWdodDogbnVtYmVyO1xyXG4gICAgICAgIHRvdGFsOiBudW1iZXI7XHJcbiAgICAgICAgc2VyaWVzOiBzdHJpbmc7XHJcbiAgICB9PjtcclxuICAgIGRpbXM6IGFueTtcclxuICAgIHR5cGU6IHN0cmluZztcclxuICAgIHNlcmllczogYW55O1xyXG4gICAgeFNjYWxlOiBhbnk7XHJcbiAgICB5U2NhbGU6IGFueTtcclxuICAgIGNvbG9yczogYW55O1xyXG4gICAgdG9vbHRpcERpc2FibGVkOiBib29sZWFuO1xyXG4gICAgZ3JhZGllbnQ6IGJvb2xlYW47XHJcbiAgICBhY3RpdmVFbnRyaWVzOiBhbnlbXTtcclxuICAgIHNlcmllc05hbWU6IHN0cmluZztcclxuICAgIHRvb2x0aXBUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcclxuICAgIHJvdW5kRWRnZXM6IGJvb2xlYW47XHJcbiAgICBhbmltYXRpb25zOiBib29sZWFuO1xyXG4gICAgc2hvd0RhdGFMYWJlbDogYm9vbGVhbjtcclxuICAgIGRhdGFMYWJlbEZvcm1hdHRpbmc6IGFueTtcclxuICAgIG5vQmFyV2hlblplcm86IGJvb2xlYW47XHJcbiAgICBzZWxlY3Q6IEV2ZW50RW1pdHRlcjx7fT47XHJcbiAgICBhY3RpdmF0ZTogRXZlbnRFbWl0dGVyPHt9PjtcclxuICAgIGRlYWN0aXZhdGU6IEV2ZW50RW1pdHRlcjx7fT47XHJcbiAgICBkYXRhTGFiZWxXaWR0aENoYW5nZWQ6IEV2ZW50RW1pdHRlcjx7fT47XHJcbiAgICB0b29sdGlwUGxhY2VtZW50OiBzdHJpbmc7XHJcbiAgICB0b29sdGlwVHlwZTogc3RyaW5nO1xyXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XHJcbiAgICB1cGRhdGUoKTogdm9pZDtcclxuICAgIHVwZGF0ZURhdGFMYWJlbHMoKTogdm9pZDtcclxuICAgIHVwZGF0ZVRvb2x0aXBTZXR0aW5ncygpOiB2b2lkO1xyXG4gICAgaXNBY3RpdmUoZW50cnk6IGFueSk6IGJvb2xlYW47XHJcbiAgICBnZXRMYWJlbChkYXRhSXRlbTogYW55KTogc3RyaW5nO1xyXG4gICAgdHJhY2tCeShpbmRleDogYW55LCBiYXI6IGFueSk6IGFueTtcclxuICAgIHRyYWNrRGF0YUxhYmVsQnkoaW5kZXg6IGFueSwgYmFyTGFiZWw6IGFueSk6IHN0cmluZztcclxuICAgIGNsaWNrKGRhdGE6IERhdGFJdGVtKTogdm9pZDtcclxufVxyXG4iXX0=