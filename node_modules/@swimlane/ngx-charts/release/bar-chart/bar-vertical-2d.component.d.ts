import { EventEmitter, TemplateRef } from '@angular/core';
import { ViewDimensions } from '../common/view-dimensions.helper';
import { ColorHelper } from '../common/color.helper';
import { BaseChartComponent } from '../common/base-chart.component';
import * as ɵngcc0 from '@angular/core';
export declare class BarVertical2DComponent extends BaseChartComponent {
    legend: boolean;
    legendTitle: string;
    legendPosition: string;
    xAxis: any;
    yAxis: any;
    showXAxisLabel: any;
    showYAxisLabel: any;
    xAxisLabel: any;
    yAxisLabel: any;
    tooltipDisabled: boolean;
    scaleType: string;
    gradient: boolean;
    showGridLines: boolean;
    activeEntries: any[];
    schemeType: string;
    trimXAxisTicks: boolean;
    trimYAxisTicks: boolean;
    rotateXAxisTicks: boolean;
    maxXAxisTickLength: number;
    maxYAxisTickLength: number;
    xAxisTickFormatting: any;
    yAxisTickFormatting: any;
    xAxisTicks: any[];
    yAxisTicks: any[];
    groupPadding: number;
    barPadding: number;
    roundDomains: boolean;
    roundEdges: boolean;
    yScaleMax: number;
    showDataLabel: boolean;
    dataLabelFormatting: any;
    noBarWhenZero: boolean;
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    tooltipTemplate: TemplateRef<any>;
    dims: ViewDimensions;
    groupDomain: any[];
    innerDomain: any[];
    valuesDomain: any[];
    groupScale: any;
    innerScale: any;
    valueScale: any;
    transform: string;
    colors: ColorHelper;
    margin: number[];
    xAxisHeight: number;
    yAxisWidth: number;
    legendOptions: any;
    dataLabelMaxHeight: any;
    update(): void;
    onDataLabelMaxHeightChanged(event: any, groupIndex: any): void;
    getGroupScale(): any;
    getInnerScale(): any;
    getValueScale(): any;
    getGroupDomain(): any[];
    getInnerDomain(): any[];
    getValueDomain(): number[];
    groupTransform(group: any): string;
    onClick(data: any, group?: any): void;
    trackBy(index: any, item: any): any;
    setColors(): void;
    getLegendOptions(): {
        scaleType: string;
        colors: any;
        domain: any[];
        title: any;
        position: string;
    };
    updateYAxisWidth({ width }: {
        width: any;
    }): void;
    updateXAxisHeight({ height }: {
        height: any;
    }): void;
    onActivate(event: any, group: any, fromLegend?: boolean): void;
    onDeactivate(event: any, group: any, fromLegend?: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BarVertical2DComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BarVertical2DComponent, "ngx-charts-bar-vertical-2d", never, { "activeEntries": "activeEntries"; "legend": "legend"; "legendTitle": "legendTitle"; "legendPosition": "legendPosition"; "xAxis": "xAxis"; "yAxis": "yAxis"; "showXAxisLabel": "showXAxisLabel"; "showYAxisLabel": "showYAxisLabel"; "xAxisLabel": "xAxisLabel"; "yAxisLabel": "yAxisLabel"; "tooltipDisabled": "tooltipDisabled"; "scaleType": "scaleType"; "gradient": "gradient"; "showGridLines": "showGridLines"; "schemeType": "schemeType"; "trimXAxisTicks": "trimXAxisTicks"; "trimYAxisTicks": "trimYAxisTicks"; "rotateXAxisTicks": "rotateXAxisTicks"; "maxXAxisTickLength": "maxXAxisTickLength"; "maxYAxisTickLength": "maxYAxisTickLength"; "xAxisTickFormatting": "xAxisTickFormatting"; "yAxisTickFormatting": "yAxisTickFormatting"; "xAxisTicks": "xAxisTicks"; "yAxisTicks": "yAxisTicks"; "groupPadding": "groupPadding"; "barPadding": "barPadding"; "roundDomains": "roundDomains"; "roundEdges": "roundEdges"; "yScaleMax": "yScaleMax"; "showDataLabel": "showDataLabel"; "dataLabelFormatting": "dataLabelFormatting"; "noBarWhenZero": "noBarWhenZero"; }, { "activate": "activate"; "deactivate": "deactivate"; }, ["tooltipTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFyLXZlcnRpY2FsLTJkLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJiYXItdmVydGljYWwtMmQuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFZpZXdEaW1lbnNpb25zIH0gZnJvbSAnLi4vY29tbW9uL3ZpZXctZGltZW5zaW9ucy5oZWxwZXInO1xyXG5pbXBvcnQgeyBDb2xvckhlbHBlciB9IGZyb20gJy4uL2NvbW1vbi9jb2xvci5oZWxwZXInO1xyXG5pbXBvcnQgeyBCYXNlQ2hhcnRDb21wb25lbnQgfSBmcm9tICcuLi9jb21tb24vYmFzZS1jaGFydC5jb21wb25lbnQnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBCYXJWZXJ0aWNhbDJEQ29tcG9uZW50IGV4dGVuZHMgQmFzZUNoYXJ0Q29tcG9uZW50IHtcclxuICAgIGxlZ2VuZDogYm9vbGVhbjtcclxuICAgIGxlZ2VuZFRpdGxlOiBzdHJpbmc7XHJcbiAgICBsZWdlbmRQb3NpdGlvbjogc3RyaW5nO1xyXG4gICAgeEF4aXM6IGFueTtcclxuICAgIHlBeGlzOiBhbnk7XHJcbiAgICBzaG93WEF4aXNMYWJlbDogYW55O1xyXG4gICAgc2hvd1lBeGlzTGFiZWw6IGFueTtcclxuICAgIHhBeGlzTGFiZWw6IGFueTtcclxuICAgIHlBeGlzTGFiZWw6IGFueTtcclxuICAgIHRvb2x0aXBEaXNhYmxlZDogYm9vbGVhbjtcclxuICAgIHNjYWxlVHlwZTogc3RyaW5nO1xyXG4gICAgZ3JhZGllbnQ6IGJvb2xlYW47XHJcbiAgICBzaG93R3JpZExpbmVzOiBib29sZWFuO1xyXG4gICAgYWN0aXZlRW50cmllczogYW55W107XHJcbiAgICBzY2hlbWVUeXBlOiBzdHJpbmc7XHJcbiAgICB0cmltWEF4aXNUaWNrczogYm9vbGVhbjtcclxuICAgIHRyaW1ZQXhpc1RpY2tzOiBib29sZWFuO1xyXG4gICAgcm90YXRlWEF4aXNUaWNrczogYm9vbGVhbjtcclxuICAgIG1heFhBeGlzVGlja0xlbmd0aDogbnVtYmVyO1xyXG4gICAgbWF4WUF4aXNUaWNrTGVuZ3RoOiBudW1iZXI7XHJcbiAgICB4QXhpc1RpY2tGb3JtYXR0aW5nOiBhbnk7XHJcbiAgICB5QXhpc1RpY2tGb3JtYXR0aW5nOiBhbnk7XHJcbiAgICB4QXhpc1RpY2tzOiBhbnlbXTtcclxuICAgIHlBeGlzVGlja3M6IGFueVtdO1xyXG4gICAgZ3JvdXBQYWRkaW5nOiBudW1iZXI7XHJcbiAgICBiYXJQYWRkaW5nOiBudW1iZXI7XHJcbiAgICByb3VuZERvbWFpbnM6IGJvb2xlYW47XHJcbiAgICByb3VuZEVkZ2VzOiBib29sZWFuO1xyXG4gICAgeVNjYWxlTWF4OiBudW1iZXI7XHJcbiAgICBzaG93RGF0YUxhYmVsOiBib29sZWFuO1xyXG4gICAgZGF0YUxhYmVsRm9ybWF0dGluZzogYW55O1xyXG4gICAgbm9CYXJXaGVuWmVybzogYm9vbGVhbjtcclxuICAgIGFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIGRlYWN0aXZhdGU6IEV2ZW50RW1pdHRlcjxhbnk+O1xyXG4gICAgdG9vbHRpcFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgZGltczogVmlld0RpbWVuc2lvbnM7XHJcbiAgICBncm91cERvbWFpbjogYW55W107XHJcbiAgICBpbm5lckRvbWFpbjogYW55W107XHJcbiAgICB2YWx1ZXNEb21haW46IGFueVtdO1xyXG4gICAgZ3JvdXBTY2FsZTogYW55O1xyXG4gICAgaW5uZXJTY2FsZTogYW55O1xyXG4gICAgdmFsdWVTY2FsZTogYW55O1xyXG4gICAgdHJhbnNmb3JtOiBzdHJpbmc7XHJcbiAgICBjb2xvcnM6IENvbG9ySGVscGVyO1xyXG4gICAgbWFyZ2luOiBudW1iZXJbXTtcclxuICAgIHhBeGlzSGVpZ2h0OiBudW1iZXI7XHJcbiAgICB5QXhpc1dpZHRoOiBudW1iZXI7XHJcbiAgICBsZWdlbmRPcHRpb25zOiBhbnk7XHJcbiAgICBkYXRhTGFiZWxNYXhIZWlnaHQ6IGFueTtcclxuICAgIHVwZGF0ZSgpOiB2b2lkO1xyXG4gICAgb25EYXRhTGFiZWxNYXhIZWlnaHRDaGFuZ2VkKGV2ZW50OiBhbnksIGdyb3VwSW5kZXg6IGFueSk6IHZvaWQ7XHJcbiAgICBnZXRHcm91cFNjYWxlKCk6IGFueTtcclxuICAgIGdldElubmVyU2NhbGUoKTogYW55O1xyXG4gICAgZ2V0VmFsdWVTY2FsZSgpOiBhbnk7XHJcbiAgICBnZXRHcm91cERvbWFpbigpOiBhbnlbXTtcclxuICAgIGdldElubmVyRG9tYWluKCk6IGFueVtdO1xyXG4gICAgZ2V0VmFsdWVEb21haW4oKTogbnVtYmVyW107XHJcbiAgICBncm91cFRyYW5zZm9ybShncm91cDogYW55KTogc3RyaW5nO1xyXG4gICAgb25DbGljayhkYXRhOiBhbnksIGdyb3VwPzogYW55KTogdm9pZDtcclxuICAgIHRyYWNrQnkoaW5kZXg6IGFueSwgaXRlbTogYW55KTogYW55O1xyXG4gICAgc2V0Q29sb3JzKCk6IHZvaWQ7XHJcbiAgICBnZXRMZWdlbmRPcHRpb25zKCk6IHtcclxuICAgICAgICBzY2FsZVR5cGU6IHN0cmluZztcclxuICAgICAgICBjb2xvcnM6IGFueTtcclxuICAgICAgICBkb21haW46IGFueVtdO1xyXG4gICAgICAgIHRpdGxlOiBhbnk7XHJcbiAgICAgICAgcG9zaXRpb246IHN0cmluZztcclxuICAgIH07XHJcbiAgICB1cGRhdGVZQXhpc1dpZHRoKHsgd2lkdGggfToge1xyXG4gICAgICAgIHdpZHRoOiBhbnk7XHJcbiAgICB9KTogdm9pZDtcclxuICAgIHVwZGF0ZVhBeGlzSGVpZ2h0KHsgaGVpZ2h0IH06IHtcclxuICAgICAgICBoZWlnaHQ6IGFueTtcclxuICAgIH0pOiB2b2lkO1xyXG4gICAgb25BY3RpdmF0ZShldmVudDogYW55LCBncm91cDogYW55LCBmcm9tTGVnZW5kPzogYm9vbGVhbik6IHZvaWQ7XHJcbiAgICBvbkRlYWN0aXZhdGUoZXZlbnQ6IGFueSwgZ3JvdXA6IGFueSwgZnJvbUxlZ2VuZD86IGJvb2xlYW4pOiB2b2lkO1xyXG59XHJcbiJdfQ==