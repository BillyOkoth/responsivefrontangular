import { EventEmitter, OnChanges, TemplateRef } from '@angular/core';
import { DataItem } from '../models/chart-data.model';
import * as ɵngcc0 from '@angular/core';
export declare enum D0Types {
    positive = "positive",
    negative = "negative"
}
export declare class SeriesVerticalComponent implements OnChanges {
    dims: any;
    type: string;
    series: any;
    xScale: any;
    yScale: any;
    colors: any;
    gradient: boolean;
    activeEntries: any[];
    seriesName: string;
    tooltipDisabled: boolean;
    tooltipTemplate: TemplateRef<any>;
    roundEdges: boolean;
    animations: boolean;
    showDataLabel: boolean;
    dataLabelFormatting: any;
    noBarWhenZero: boolean;
    select: EventEmitter<{}>;
    activate: EventEmitter<{}>;
    deactivate: EventEmitter<{}>;
    dataLabelHeightChanged: EventEmitter<{}>;
    tooltipPlacement: string;
    tooltipType: string;
    bars: any;
    x: any;
    y: any;
    barsForDataLabels: Array<{
        x: number;
        y: number;
        width: number;
        height: number;
        total: number;
        series: string;
    }>;
    ngOnChanges(changes: any): void;
    update(): void;
    updateDataLabels(): void;
    updateTooltipSettings(): void;
    isActive(entry: any): boolean;
    onClick(data: DataItem): void;
    getLabel(dataItem: any): string;
    trackBy(index: any, bar: any): string;
    trackDataLabelBy(index: any, barLabel: any): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SeriesVerticalComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SeriesVerticalComponent, "g[ngx-charts-series-vertical]", never, { "type": "type"; "tooltipDisabled": "tooltipDisabled"; "animations": "animations"; "showDataLabel": "showDataLabel"; "noBarWhenZero": "noBarWhenZero"; "dims": "dims"; "series": "series"; "xScale": "xScale"; "yScale": "yScale"; "colors": "colors"; "gradient": "gradient"; "activeEntries": "activeEntries"; "seriesName": "seriesName"; "tooltipTemplate": "tooltipTemplate"; "roundEdges": "roundEdges"; "dataLabelFormatting": "dataLabelFormatting"; }, { "select": "select"; "activate": "activate"; "deactivate": "deactivate"; "dataLabelHeightChanged": "dataLabelHeightChanged"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyaWVzLXZlcnRpY2FsLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzZXJpZXMtdmVydGljYWwuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEYXRhSXRlbSB9IGZyb20gJy4uL21vZGVscy9jaGFydC1kYXRhLm1vZGVsJztcclxuZXhwb3J0IGRlY2xhcmUgZW51bSBEMFR5cGVzIHtcclxuICAgIHBvc2l0aXZlID0gXCJwb3NpdGl2ZVwiLFxyXG4gICAgbmVnYXRpdmUgPSBcIm5lZ2F0aXZlXCJcclxufVxyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTZXJpZXNWZXJ0aWNhbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XHJcbiAgICBkaW1zOiBhbnk7XHJcbiAgICB0eXBlOiBzdHJpbmc7XHJcbiAgICBzZXJpZXM6IGFueTtcclxuICAgIHhTY2FsZTogYW55O1xyXG4gICAgeVNjYWxlOiBhbnk7XHJcbiAgICBjb2xvcnM6IGFueTtcclxuICAgIGdyYWRpZW50OiBib29sZWFuO1xyXG4gICAgYWN0aXZlRW50cmllczogYW55W107XHJcbiAgICBzZXJpZXNOYW1lOiBzdHJpbmc7XHJcbiAgICB0b29sdGlwRGlzYWJsZWQ6IGJvb2xlYW47XHJcbiAgICB0b29sdGlwVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XHJcbiAgICByb3VuZEVkZ2VzOiBib29sZWFuO1xyXG4gICAgYW5pbWF0aW9uczogYm9vbGVhbjtcclxuICAgIHNob3dEYXRhTGFiZWw6IGJvb2xlYW47XHJcbiAgICBkYXRhTGFiZWxGb3JtYXR0aW5nOiBhbnk7XHJcbiAgICBub0JhcldoZW5aZXJvOiBib29sZWFuO1xyXG4gICAgc2VsZWN0OiBFdmVudEVtaXR0ZXI8e30+O1xyXG4gICAgYWN0aXZhdGU6IEV2ZW50RW1pdHRlcjx7fT47XHJcbiAgICBkZWFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8e30+O1xyXG4gICAgZGF0YUxhYmVsSGVpZ2h0Q2hhbmdlZDogRXZlbnRFbWl0dGVyPHt9PjtcclxuICAgIHRvb2x0aXBQbGFjZW1lbnQ6IHN0cmluZztcclxuICAgIHRvb2x0aXBUeXBlOiBzdHJpbmc7XHJcbiAgICBiYXJzOiBhbnk7XHJcbiAgICB4OiBhbnk7XHJcbiAgICB5OiBhbnk7XHJcbiAgICBiYXJzRm9yRGF0YUxhYmVsczogQXJyYXk8e1xyXG4gICAgICAgIHg6IG51bWJlcjtcclxuICAgICAgICB5OiBudW1iZXI7XHJcbiAgICAgICAgd2lkdGg6IG51bWJlcjtcclxuICAgICAgICBoZWlnaHQ6IG51bWJlcjtcclxuICAgICAgICB0b3RhbDogbnVtYmVyO1xyXG4gICAgICAgIHNlcmllczogc3RyaW5nO1xyXG4gICAgfT47XHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBhbnkpOiB2b2lkO1xyXG4gICAgdXBkYXRlKCk6IHZvaWQ7XHJcbiAgICB1cGRhdGVEYXRhTGFiZWxzKCk6IHZvaWQ7XHJcbiAgICB1cGRhdGVUb29sdGlwU2V0dGluZ3MoKTogdm9pZDtcclxuICAgIGlzQWN0aXZlKGVudHJ5OiBhbnkpOiBib29sZWFuO1xyXG4gICAgb25DbGljayhkYXRhOiBEYXRhSXRlbSk6IHZvaWQ7XHJcbiAgICBnZXRMYWJlbChkYXRhSXRlbTogYW55KTogc3RyaW5nO1xyXG4gICAgdHJhY2tCeShpbmRleDogYW55LCBiYXI6IGFueSk6IHN0cmluZztcclxuICAgIHRyYWNrRGF0YUxhYmVsQnkoaW5kZXg6IGFueSwgYmFyTGFiZWw6IGFueSk6IHN0cmluZztcclxufVxyXG4iXX0=