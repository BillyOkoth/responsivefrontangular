import { EventEmitter, TemplateRef } from '@angular/core';
import { ViewDimensions } from '../common/view-dimensions.helper';
import { ColorHelper } from '../common/color.helper';
import { BaseChartComponent } from '../common/base-chart.component';
import * as ɵngcc0 from '@angular/core';
export declare class BarHorizontalComponent extends BaseChartComponent {
    legend: boolean;
    legendTitle: string;
    legendPosition: string;
    xAxis: any;
    yAxis: any;
    showXAxisLabel: any;
    showYAxisLabel: any;
    xAxisLabel: any;
    yAxisLabel: any;
    tooltipDisabled: boolean;
    gradient: boolean;
    showGridLines: boolean;
    activeEntries: any[];
    schemeType: string;
    trimXAxisTicks: boolean;
    trimYAxisTicks: boolean;
    rotateXAxisTicks: boolean;
    maxXAxisTickLength: number;
    maxYAxisTickLength: number;
    xAxisTickFormatting: any;
    yAxisTickFormatting: any;
    xAxisTicks: any[];
    yAxisTicks: any[];
    barPadding: number;
    roundDomains: boolean;
    roundEdges: boolean;
    xScaleMax: number;
    xScaleMin: number;
    showDataLabel: boolean;
    dataLabelFormatting: any;
    noBarWhenZero: boolean;
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    tooltipTemplate: TemplateRef<any>;
    dims: ViewDimensions;
    yScale: any;
    xScale: any;
    xDomain: any;
    yDomain: any;
    transform: string;
    colors: ColorHelper;
    margin: number[];
    xAxisHeight: number;
    yAxisWidth: number;
    legendOptions: any;
    dataLabelMaxWidth: any;
    update(): void;
    getXScale(): any;
    getYScale(): any;
    getXDomain(): any[];
    getYDomain(): any[];
    onClick(data: any): void;
    setColors(): void;
    getLegendOptions(): {
        scaleType: string;
        colors: any;
        domain: any[];
        title: any;
        position: string;
    };
    updateYAxisWidth({ width }: {
        width: any;
    }): void;
    updateXAxisHeight({ height }: {
        height: any;
    }): void;
    onDataLabelMaxWidthChanged(event: any): void;
    onActivate(item: any, fromLegend?: boolean): void;
    onDeactivate(item: any, fromLegend?: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BarHorizontalComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BarHorizontalComponent, "ngx-charts-bar-horizontal", never, { "activeEntries": "activeEntries"; "legend": "legend"; "legendTitle": "legendTitle"; "legendPosition": "legendPosition"; "xAxis": "xAxis"; "yAxis": "yAxis"; "showXAxisLabel": "showXAxisLabel"; "showYAxisLabel": "showYAxisLabel"; "xAxisLabel": "xAxisLabel"; "yAxisLabel": "yAxisLabel"; "tooltipDisabled": "tooltipDisabled"; "gradient": "gradient"; "showGridLines": "showGridLines"; "schemeType": "schemeType"; "trimXAxisTicks": "trimXAxisTicks"; "trimYAxisTicks": "trimYAxisTicks"; "rotateXAxisTicks": "rotateXAxisTicks"; "maxXAxisTickLength": "maxXAxisTickLength"; "maxYAxisTickLength": "maxYAxisTickLength"; "xAxisTickFormatting": "xAxisTickFormatting"; "yAxisTickFormatting": "yAxisTickFormatting"; "xAxisTicks": "xAxisTicks"; "yAxisTicks": "yAxisTicks"; "barPadding": "barPadding"; "roundDomains": "roundDomains"; "roundEdges": "roundEdges"; "xScaleMax": "xScaleMax"; "xScaleMin": "xScaleMin"; "showDataLabel": "showDataLabel"; "dataLabelFormatting": "dataLabelFormatting"; "noBarWhenZero": "noBarWhenZero"; }, { "activate": "activate"; "deactivate": "deactivate"; }, ["tooltipTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFyLWhvcml6b250YWwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImJhci1ob3Jpem9udGFsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVmlld0RpbWVuc2lvbnMgfSBmcm9tICcuLi9jb21tb24vdmlldy1kaW1lbnNpb25zLmhlbHBlcic7XHJcbmltcG9ydCB7IENvbG9ySGVscGVyIH0gZnJvbSAnLi4vY29tbW9uL2NvbG9yLmhlbHBlcic7XHJcbmltcG9ydCB7IEJhc2VDaGFydENvbXBvbmVudCB9IGZyb20gJy4uL2NvbW1vbi9iYXNlLWNoYXJ0LmNvbXBvbmVudCc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEJhckhvcml6b250YWxDb21wb25lbnQgZXh0ZW5kcyBCYXNlQ2hhcnRDb21wb25lbnQge1xyXG4gICAgbGVnZW5kOiBib29sZWFuO1xyXG4gICAgbGVnZW5kVGl0bGU6IHN0cmluZztcclxuICAgIGxlZ2VuZFBvc2l0aW9uOiBzdHJpbmc7XHJcbiAgICB4QXhpczogYW55O1xyXG4gICAgeUF4aXM6IGFueTtcclxuICAgIHNob3dYQXhpc0xhYmVsOiBhbnk7XHJcbiAgICBzaG93WUF4aXNMYWJlbDogYW55O1xyXG4gICAgeEF4aXNMYWJlbDogYW55O1xyXG4gICAgeUF4aXNMYWJlbDogYW55O1xyXG4gICAgdG9vbHRpcERpc2FibGVkOiBib29sZWFuO1xyXG4gICAgZ3JhZGllbnQ6IGJvb2xlYW47XHJcbiAgICBzaG93R3JpZExpbmVzOiBib29sZWFuO1xyXG4gICAgYWN0aXZlRW50cmllczogYW55W107XHJcbiAgICBzY2hlbWVUeXBlOiBzdHJpbmc7XHJcbiAgICB0cmltWEF4aXNUaWNrczogYm9vbGVhbjtcclxuICAgIHRyaW1ZQXhpc1RpY2tzOiBib29sZWFuO1xyXG4gICAgcm90YXRlWEF4aXNUaWNrczogYm9vbGVhbjtcclxuICAgIG1heFhBeGlzVGlja0xlbmd0aDogbnVtYmVyO1xyXG4gICAgbWF4WUF4aXNUaWNrTGVuZ3RoOiBudW1iZXI7XHJcbiAgICB4QXhpc1RpY2tGb3JtYXR0aW5nOiBhbnk7XHJcbiAgICB5QXhpc1RpY2tGb3JtYXR0aW5nOiBhbnk7XHJcbiAgICB4QXhpc1RpY2tzOiBhbnlbXTtcclxuICAgIHlBeGlzVGlja3M6IGFueVtdO1xyXG4gICAgYmFyUGFkZGluZzogbnVtYmVyO1xyXG4gICAgcm91bmREb21haW5zOiBib29sZWFuO1xyXG4gICAgcm91bmRFZGdlczogYm9vbGVhbjtcclxuICAgIHhTY2FsZU1heDogbnVtYmVyO1xyXG4gICAgeFNjYWxlTWluOiBudW1iZXI7XHJcbiAgICBzaG93RGF0YUxhYmVsOiBib29sZWFuO1xyXG4gICAgZGF0YUxhYmVsRm9ybWF0dGluZzogYW55O1xyXG4gICAgbm9CYXJXaGVuWmVybzogYm9vbGVhbjtcclxuICAgIGFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIGRlYWN0aXZhdGU6IEV2ZW50RW1pdHRlcjxhbnk+O1xyXG4gICAgdG9vbHRpcFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgZGltczogVmlld0RpbWVuc2lvbnM7XHJcbiAgICB5U2NhbGU6IGFueTtcclxuICAgIHhTY2FsZTogYW55O1xyXG4gICAgeERvbWFpbjogYW55O1xyXG4gICAgeURvbWFpbjogYW55O1xyXG4gICAgdHJhbnNmb3JtOiBzdHJpbmc7XHJcbiAgICBjb2xvcnM6IENvbG9ySGVscGVyO1xyXG4gICAgbWFyZ2luOiBudW1iZXJbXTtcclxuICAgIHhBeGlzSGVpZ2h0OiBudW1iZXI7XHJcbiAgICB5QXhpc1dpZHRoOiBudW1iZXI7XHJcbiAgICBsZWdlbmRPcHRpb25zOiBhbnk7XHJcbiAgICBkYXRhTGFiZWxNYXhXaWR0aDogYW55O1xyXG4gICAgdXBkYXRlKCk6IHZvaWQ7XHJcbiAgICBnZXRYU2NhbGUoKTogYW55O1xyXG4gICAgZ2V0WVNjYWxlKCk6IGFueTtcclxuICAgIGdldFhEb21haW4oKTogYW55W107XHJcbiAgICBnZXRZRG9tYWluKCk6IGFueVtdO1xyXG4gICAgb25DbGljayhkYXRhOiBhbnkpOiB2b2lkO1xyXG4gICAgc2V0Q29sb3JzKCk6IHZvaWQ7XHJcbiAgICBnZXRMZWdlbmRPcHRpb25zKCk6IHtcclxuICAgICAgICBzY2FsZVR5cGU6IHN0cmluZztcclxuICAgICAgICBjb2xvcnM6IGFueTtcclxuICAgICAgICBkb21haW46IGFueVtdO1xyXG4gICAgICAgIHRpdGxlOiBhbnk7XHJcbiAgICAgICAgcG9zaXRpb246IHN0cmluZztcclxuICAgIH07XHJcbiAgICB1cGRhdGVZQXhpc1dpZHRoKHsgd2lkdGggfToge1xyXG4gICAgICAgIHdpZHRoOiBhbnk7XHJcbiAgICB9KTogdm9pZDtcclxuICAgIHVwZGF0ZVhBeGlzSGVpZ2h0KHsgaGVpZ2h0IH06IHtcclxuICAgICAgICBoZWlnaHQ6IGFueTtcclxuICAgIH0pOiB2b2lkO1xyXG4gICAgb25EYXRhTGFiZWxNYXhXaWR0aENoYW5nZWQoZXZlbnQ6IGFueSk6IHZvaWQ7XHJcbiAgICBvbkFjdGl2YXRlKGl0ZW06IGFueSwgZnJvbUxlZ2VuZD86IGJvb2xlYW4pOiB2b2lkO1xyXG4gICAgb25EZWFjdGl2YXRlKGl0ZW06IGFueSwgZnJvbUxlZ2VuZD86IGJvb2xlYW4pOiB2b2lkO1xyXG59XHJcbiJdfQ==