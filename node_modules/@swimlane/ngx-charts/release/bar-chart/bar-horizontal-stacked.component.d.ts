import { EventEmitter, TemplateRef } from '@angular/core';
import { ViewDimensions } from '../common/view-dimensions.helper';
import { ColorHelper } from '../common/color.helper';
import { BaseChartComponent } from '../common/base-chart.component';
import * as ɵngcc0 from '@angular/core';
export declare class BarHorizontalStackedComponent extends BaseChartComponent {
    legend: boolean;
    legendTitle: string;
    legendPosition: string;
    xAxis: any;
    yAxis: any;
    showXAxisLabel: any;
    showYAxisLabel: any;
    xAxisLabel: any;
    yAxisLabel: any;
    tooltipDisabled: boolean;
    gradient: boolean;
    showGridLines: boolean;
    activeEntries: any[];
    schemeType: string;
    trimXAxisTicks: boolean;
    trimYAxisTicks: boolean;
    rotateXAxisTicks: boolean;
    maxXAxisTickLength: number;
    maxYAxisTickLength: number;
    xAxisTickFormatting: any;
    yAxisTickFormatting: any;
    xAxisTicks: any[];
    yAxisTicks: any[];
    barPadding: number;
    roundDomains: boolean;
    xScaleMax: number;
    showDataLabel: boolean;
    dataLabelFormatting: any;
    noBarWhenZero: boolean;
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    tooltipTemplate: TemplateRef<any>;
    dims: ViewDimensions;
    groupDomain: any[];
    innerDomain: any[];
    valueDomain: any[];
    xScale: any;
    yScale: any;
    transform: string;
    colors: ColorHelper;
    margin: number[];
    xAxisHeight: number;
    yAxisWidth: number;
    legendOptions: any;
    dataLabelMaxWidth: any;
    update(): void;
    getGroupDomain(): any[];
    getInnerDomain(): any[];
    getValueDomain(): any[];
    getYScale(): any;
    getXScale(): any;
    groupTransform(group: any): string;
    onClick(data: any, group?: any): void;
    trackBy(index: any, item: any): string;
    setColors(): void;
    getLegendOptions(): {
        scaleType: string;
        colors: any;
        domain: any[];
        title: any;
        position: string;
    };
    updateYAxisWidth({ width }: {
        width: any;
    }): void;
    updateXAxisHeight({ height }: {
        height: any;
    }): void;
    onDataLabelMaxWidthChanged(event: any, groupIndex: any): void;
    onActivate(event: any, group: any, fromLegend?: boolean): void;
    onDeactivate(event: any, group: any, fromLegend?: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BarHorizontalStackedComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BarHorizontalStackedComponent, "ngx-charts-bar-horizontal-stacked", never, { "activeEntries": "activeEntries"; "legend": "legend"; "legendTitle": "legendTitle"; "legendPosition": "legendPosition"; "xAxis": "xAxis"; "yAxis": "yAxis"; "showXAxisLabel": "showXAxisLabel"; "showYAxisLabel": "showYAxisLabel"; "xAxisLabel": "xAxisLabel"; "yAxisLabel": "yAxisLabel"; "tooltipDisabled": "tooltipDisabled"; "gradient": "gradient"; "showGridLines": "showGridLines"; "schemeType": "schemeType"; "trimXAxisTicks": "trimXAxisTicks"; "trimYAxisTicks": "trimYAxisTicks"; "rotateXAxisTicks": "rotateXAxisTicks"; "maxXAxisTickLength": "maxXAxisTickLength"; "maxYAxisTickLength": "maxYAxisTickLength"; "xAxisTickFormatting": "xAxisTickFormatting"; "yAxisTickFormatting": "yAxisTickFormatting"; "xAxisTicks": "xAxisTicks"; "yAxisTicks": "yAxisTicks"; "barPadding": "barPadding"; "roundDomains": "roundDomains"; "xScaleMax": "xScaleMax"; "showDataLabel": "showDataLabel"; "dataLabelFormatting": "dataLabelFormatting"; "noBarWhenZero": "noBarWhenZero"; }, { "activate": "activate"; "deactivate": "deactivate"; }, ["tooltipTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFyLWhvcml6b250YWwtc3RhY2tlZC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiYmFyLWhvcml6b250YWwtc3RhY2tlZC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBWaWV3RGltZW5zaW9ucyB9IGZyb20gJy4uL2NvbW1vbi92aWV3LWRpbWVuc2lvbnMuaGVscGVyJztcclxuaW1wb3J0IHsgQ29sb3JIZWxwZXIgfSBmcm9tICcuLi9jb21tb24vY29sb3IuaGVscGVyJztcclxuaW1wb3J0IHsgQmFzZUNoYXJ0Q29tcG9uZW50IH0gZnJvbSAnLi4vY29tbW9uL2Jhc2UtY2hhcnQuY29tcG9uZW50JztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQmFySG9yaXpvbnRhbFN0YWNrZWRDb21wb25lbnQgZXh0ZW5kcyBCYXNlQ2hhcnRDb21wb25lbnQge1xyXG4gICAgbGVnZW5kOiBib29sZWFuO1xyXG4gICAgbGVnZW5kVGl0bGU6IHN0cmluZztcclxuICAgIGxlZ2VuZFBvc2l0aW9uOiBzdHJpbmc7XHJcbiAgICB4QXhpczogYW55O1xyXG4gICAgeUF4aXM6IGFueTtcclxuICAgIHNob3dYQXhpc0xhYmVsOiBhbnk7XHJcbiAgICBzaG93WUF4aXNMYWJlbDogYW55O1xyXG4gICAgeEF4aXNMYWJlbDogYW55O1xyXG4gICAgeUF4aXNMYWJlbDogYW55O1xyXG4gICAgdG9vbHRpcERpc2FibGVkOiBib29sZWFuO1xyXG4gICAgZ3JhZGllbnQ6IGJvb2xlYW47XHJcbiAgICBzaG93R3JpZExpbmVzOiBib29sZWFuO1xyXG4gICAgYWN0aXZlRW50cmllczogYW55W107XHJcbiAgICBzY2hlbWVUeXBlOiBzdHJpbmc7XHJcbiAgICB0cmltWEF4aXNUaWNrczogYm9vbGVhbjtcclxuICAgIHRyaW1ZQXhpc1RpY2tzOiBib29sZWFuO1xyXG4gICAgcm90YXRlWEF4aXNUaWNrczogYm9vbGVhbjtcclxuICAgIG1heFhBeGlzVGlja0xlbmd0aDogbnVtYmVyO1xyXG4gICAgbWF4WUF4aXNUaWNrTGVuZ3RoOiBudW1iZXI7XHJcbiAgICB4QXhpc1RpY2tGb3JtYXR0aW5nOiBhbnk7XHJcbiAgICB5QXhpc1RpY2tGb3JtYXR0aW5nOiBhbnk7XHJcbiAgICB4QXhpc1RpY2tzOiBhbnlbXTtcclxuICAgIHlBeGlzVGlja3M6IGFueVtdO1xyXG4gICAgYmFyUGFkZGluZzogbnVtYmVyO1xyXG4gICAgcm91bmREb21haW5zOiBib29sZWFuO1xyXG4gICAgeFNjYWxlTWF4OiBudW1iZXI7XHJcbiAgICBzaG93RGF0YUxhYmVsOiBib29sZWFuO1xyXG4gICAgZGF0YUxhYmVsRm9ybWF0dGluZzogYW55O1xyXG4gICAgbm9CYXJXaGVuWmVybzogYm9vbGVhbjtcclxuICAgIGFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIGRlYWN0aXZhdGU6IEV2ZW50RW1pdHRlcjxhbnk+O1xyXG4gICAgdG9vbHRpcFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgZGltczogVmlld0RpbWVuc2lvbnM7XHJcbiAgICBncm91cERvbWFpbjogYW55W107XHJcbiAgICBpbm5lckRvbWFpbjogYW55W107XHJcbiAgICB2YWx1ZURvbWFpbjogYW55W107XHJcbiAgICB4U2NhbGU6IGFueTtcclxuICAgIHlTY2FsZTogYW55O1xyXG4gICAgdHJhbnNmb3JtOiBzdHJpbmc7XHJcbiAgICBjb2xvcnM6IENvbG9ySGVscGVyO1xyXG4gICAgbWFyZ2luOiBudW1iZXJbXTtcclxuICAgIHhBeGlzSGVpZ2h0OiBudW1iZXI7XHJcbiAgICB5QXhpc1dpZHRoOiBudW1iZXI7XHJcbiAgICBsZWdlbmRPcHRpb25zOiBhbnk7XHJcbiAgICBkYXRhTGFiZWxNYXhXaWR0aDogYW55O1xyXG4gICAgdXBkYXRlKCk6IHZvaWQ7XHJcbiAgICBnZXRHcm91cERvbWFpbigpOiBhbnlbXTtcclxuICAgIGdldElubmVyRG9tYWluKCk6IGFueVtdO1xyXG4gICAgZ2V0VmFsdWVEb21haW4oKTogYW55W107XHJcbiAgICBnZXRZU2NhbGUoKTogYW55O1xyXG4gICAgZ2V0WFNjYWxlKCk6IGFueTtcclxuICAgIGdyb3VwVHJhbnNmb3JtKGdyb3VwOiBhbnkpOiBzdHJpbmc7XHJcbiAgICBvbkNsaWNrKGRhdGE6IGFueSwgZ3JvdXA/OiBhbnkpOiB2b2lkO1xyXG4gICAgdHJhY2tCeShpbmRleDogYW55LCBpdGVtOiBhbnkpOiBzdHJpbmc7XHJcbiAgICBzZXRDb2xvcnMoKTogdm9pZDtcclxuICAgIGdldExlZ2VuZE9wdGlvbnMoKToge1xyXG4gICAgICAgIHNjYWxlVHlwZTogc3RyaW5nO1xyXG4gICAgICAgIGNvbG9yczogYW55O1xyXG4gICAgICAgIGRvbWFpbjogYW55W107XHJcbiAgICAgICAgdGl0bGU6IGFueTtcclxuICAgICAgICBwb3NpdGlvbjogc3RyaW5nO1xyXG4gICAgfTtcclxuICAgIHVwZGF0ZVlBeGlzV2lkdGgoeyB3aWR0aCB9OiB7XHJcbiAgICAgICAgd2lkdGg6IGFueTtcclxuICAgIH0pOiB2b2lkO1xyXG4gICAgdXBkYXRlWEF4aXNIZWlnaHQoeyBoZWlnaHQgfToge1xyXG4gICAgICAgIGhlaWdodDogYW55O1xyXG4gICAgfSk6IHZvaWQ7XHJcbiAgICBvbkRhdGFMYWJlbE1heFdpZHRoQ2hhbmdlZChldmVudDogYW55LCBncm91cEluZGV4OiBhbnkpOiB2b2lkO1xyXG4gICAgb25BY3RpdmF0ZShldmVudDogYW55LCBncm91cDogYW55LCBmcm9tTGVnZW5kPzogYm9vbGVhbik6IHZvaWQ7XHJcbiAgICBvbkRlYWN0aXZhdGUoZXZlbnQ6IGFueSwgZ3JvdXA6IGFueSwgZnJvbUxlZ2VuZD86IGJvb2xlYW4pOiB2b2lkO1xyXG59XHJcbiJdfQ==