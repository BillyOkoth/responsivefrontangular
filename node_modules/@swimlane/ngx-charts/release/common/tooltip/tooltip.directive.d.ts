import { EventEmitter, ViewContainerRef, Renderer2, OnDestroy } from '@angular/core';
import { PlacementTypes } from './position';
import { StyleTypes } from './style.type';
import { AlignmentTypes } from './alignment.type';
import { ShowTypes } from './show.type';
import { TooltipService } from './tooltip.service';
import * as ɵngcc0 from '@angular/core';
export declare class TooltipDirective implements OnDestroy {
    private tooltipService;
    private viewContainerRef;
    private renderer;
    tooltipCssClass: string;
    tooltipTitle: string;
    tooltipAppendToBody: boolean;
    tooltipSpacing: number;
    tooltipDisabled: boolean;
    tooltipShowCaret: boolean;
    tooltipPlacement: PlacementTypes;
    tooltipAlignment: AlignmentTypes;
    tooltipType: StyleTypes;
    tooltipCloseOnClickOutside: boolean;
    tooltipCloseOnMouseLeave: boolean;
    tooltipHideTimeout: number;
    tooltipShowTimeout: number;
    tooltipTemplate: any;
    tooltipShowEvent: ShowTypes;
    tooltipContext: any;
    tooltipImmediateExit: boolean;
    show: EventEmitter<{}>;
    hide: EventEmitter<{}>;
    private readonly listensForFocus;
    private readonly listensForHover;
    private component;
    private timeout;
    private mouseLeaveContentEvent;
    private mouseEnterContentEvent;
    private documentClickEvent;
    constructor(tooltipService: TooltipService, viewContainerRef: ViewContainerRef, renderer: Renderer2);
    ngOnDestroy(): void;
    onFocus(): void;
    onBlur(): void;
    onMouseEnter(): void;
    onMouseLeave(target: any): void;
    onMouseClick(): void;
    showTooltip(immediate?: boolean): void;
    addHideListeners(tooltip: any): void;
    hideTooltip(immediate?: boolean): void;
    private createBoundOptions;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TooltipDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<TooltipDirective, "[ngx-tooltip]", never, { "tooltipCssClass": "tooltipCssClass"; "tooltipTitle": "tooltipTitle"; "tooltipAppendToBody": "tooltipAppendToBody"; "tooltipSpacing": "tooltipSpacing"; "tooltipDisabled": "tooltipDisabled"; "tooltipShowCaret": "tooltipShowCaret"; "tooltipPlacement": "tooltipPlacement"; "tooltipAlignment": "tooltipAlignment"; "tooltipType": "tooltipType"; "tooltipCloseOnClickOutside": "tooltipCloseOnClickOutside"; "tooltipCloseOnMouseLeave": "tooltipCloseOnMouseLeave"; "tooltipHideTimeout": "tooltipHideTimeout"; "tooltipShowTimeout": "tooltipShowTimeout"; "tooltipShowEvent": "tooltipShowEvent"; "tooltipImmediateExit": "tooltipImmediateExit"; "tooltipTemplate": "tooltipTemplate"; "tooltipContext": "tooltipContext"; }, { "show": "show"; "hide": "hide"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsidG9vbHRpcC5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIFZpZXdDb250YWluZXJSZWYsIFJlbmRlcmVyMiwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFBsYWNlbWVudFR5cGVzIH0gZnJvbSAnLi9wb3NpdGlvbic7XHJcbmltcG9ydCB7IFN0eWxlVHlwZXMgfSBmcm9tICcuL3N0eWxlLnR5cGUnO1xyXG5pbXBvcnQgeyBBbGlnbm1lbnRUeXBlcyB9IGZyb20gJy4vYWxpZ25tZW50LnR5cGUnO1xyXG5pbXBvcnQgeyBTaG93VHlwZXMgfSBmcm9tICcuL3Nob3cudHlwZSc7XHJcbmltcG9ydCB7IFRvb2x0aXBTZXJ2aWNlIH0gZnJvbSAnLi90b29sdGlwLnNlcnZpY2UnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUb29sdGlwRGlyZWN0aXZlIGltcGxlbWVudHMgT25EZXN0cm95IHtcclxuICAgIHByaXZhdGUgdG9vbHRpcFNlcnZpY2U7XHJcbiAgICBwcml2YXRlIHZpZXdDb250YWluZXJSZWY7XHJcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xyXG4gICAgdG9vbHRpcENzc0NsYXNzOiBzdHJpbmc7XHJcbiAgICB0b29sdGlwVGl0bGU6IHN0cmluZztcclxuICAgIHRvb2x0aXBBcHBlbmRUb0JvZHk6IGJvb2xlYW47XHJcbiAgICB0b29sdGlwU3BhY2luZzogbnVtYmVyO1xyXG4gICAgdG9vbHRpcERpc2FibGVkOiBib29sZWFuO1xyXG4gICAgdG9vbHRpcFNob3dDYXJldDogYm9vbGVhbjtcclxuICAgIHRvb2x0aXBQbGFjZW1lbnQ6IFBsYWNlbWVudFR5cGVzO1xyXG4gICAgdG9vbHRpcEFsaWdubWVudDogQWxpZ25tZW50VHlwZXM7XHJcbiAgICB0b29sdGlwVHlwZTogU3R5bGVUeXBlcztcclxuICAgIHRvb2x0aXBDbG9zZU9uQ2xpY2tPdXRzaWRlOiBib29sZWFuO1xyXG4gICAgdG9vbHRpcENsb3NlT25Nb3VzZUxlYXZlOiBib29sZWFuO1xyXG4gICAgdG9vbHRpcEhpZGVUaW1lb3V0OiBudW1iZXI7XHJcbiAgICB0b29sdGlwU2hvd1RpbWVvdXQ6IG51bWJlcjtcclxuICAgIHRvb2x0aXBUZW1wbGF0ZTogYW55O1xyXG4gICAgdG9vbHRpcFNob3dFdmVudDogU2hvd1R5cGVzO1xyXG4gICAgdG9vbHRpcENvbnRleHQ6IGFueTtcclxuICAgIHRvb2x0aXBJbW1lZGlhdGVFeGl0OiBib29sZWFuO1xyXG4gICAgc2hvdzogRXZlbnRFbWl0dGVyPHt9PjtcclxuICAgIGhpZGU6IEV2ZW50RW1pdHRlcjx7fT47XHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IGxpc3RlbnNGb3JGb2N1cztcclxuICAgIHByaXZhdGUgcmVhZG9ubHkgbGlzdGVuc0ZvckhvdmVyO1xyXG4gICAgcHJpdmF0ZSBjb21wb25lbnQ7XHJcbiAgICBwcml2YXRlIHRpbWVvdXQ7XHJcbiAgICBwcml2YXRlIG1vdXNlTGVhdmVDb250ZW50RXZlbnQ7XHJcbiAgICBwcml2YXRlIG1vdXNlRW50ZXJDb250ZW50RXZlbnQ7XHJcbiAgICBwcml2YXRlIGRvY3VtZW50Q2xpY2tFdmVudDtcclxuICAgIGNvbnN0cnVjdG9yKHRvb2x0aXBTZXJ2aWNlOiBUb29sdGlwU2VydmljZSwgdmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMik7XHJcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xyXG4gICAgb25Gb2N1cygpOiB2b2lkO1xyXG4gICAgb25CbHVyKCk6IHZvaWQ7XHJcbiAgICBvbk1vdXNlRW50ZXIoKTogdm9pZDtcclxuICAgIG9uTW91c2VMZWF2ZSh0YXJnZXQ6IGFueSk6IHZvaWQ7XHJcbiAgICBvbk1vdXNlQ2xpY2soKTogdm9pZDtcclxuICAgIHNob3dUb29sdGlwKGltbWVkaWF0ZT86IGJvb2xlYW4pOiB2b2lkO1xyXG4gICAgYWRkSGlkZUxpc3RlbmVycyh0b29sdGlwOiBhbnkpOiB2b2lkO1xyXG4gICAgaGlkZVRvb2x0aXAoaW1tZWRpYXRlPzogYm9vbGVhbik6IHZvaWQ7XHJcbiAgICBwcml2YXRlIGNyZWF0ZUJvdW5kT3B0aW9ucztcclxufVxyXG4iXX0=