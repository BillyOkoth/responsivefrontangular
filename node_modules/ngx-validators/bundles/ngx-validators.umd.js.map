{"version":3,"file":"ngx-validators.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://ngx-validators/components/abstract-control-util.ts","ng://ngx-validators/components/password/password-validators.ts","ng://ngx-validators/components/email/email-util.ts","ng://ngx-validators/components/email/email-validators.ts","ng://ngx-validators/components/universal/universal-validators.ts","ng://ngx-validators/components/creditcard/creditcard-validators.ts","ng://ngx-validators/components/password/password.directive.ts","ng://ngx-validators/components/email/email.directive.ts","ng://ngx-validators/components/universal/universal.directive.ts","ng://ngx-validators/components/creditcard/creditcard.directive.ts","ng://ngx-validators/components/equal-to/equal-to.directive.ts","ng://ngx-validators/components/validators.module.ts","ng://ngx-validators/components/equal-to/equal-to-validator.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl } from '@angular/forms';\n\nexport class AbstractControlUtil {\n    static isNotPresent(control: AbstractControl): boolean {\n        let value = control.value;\n        if (value === undefined || value === null) {\n            return true;\n        }\n        return value !== '' ? false : true;\n    };\n\n    static addError(control: AbstractControl, errorId: string, value: any) {\n        if (!control.errors) {\n            control.setErrors({ [errorId]: value });\n        } else if (!control.hasError(errorId)) {\n            control.errors[errorId] = value;\n        }\n    }\n\n    static removeError(control: AbstractControl, errorId: string) {\n        if (control.errors && control.hasError(errorId)) {\n            if (Object.keys(control.errors).length > 1) {\n                delete control.errors[errorId];\n            } else {\n                control.setErrors(null);\n            }\n        }\n    }\n}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\nimport { AbstractControlUtil } from './../abstract-control-util';\n\n// tslint:disable-next-line:variable-name\nexport class PasswordValidators {\n\n    public static repeatCharacterRegexRule(repeatCount: number) {\n        const validator = (control: AbstractControl): { [key: string]: any } => {\n            if (AbstractControlUtil.isNotPresent(control)) return undefined;\n            let repeatDec = repeatCount - 1;\n            let pattern = '([^\\\\x00-\\\\x1F])\\\\1{' + repeatDec + '}';\n            if (control.value !== '' && new RegExp(pattern).test(control.value)) {\n                return { 'repeatCharacterRegexRule': { 'repeatCount': repeatCount } };\n            }\n            return undefined;\n        };\n        return validator;\n    };\n\n    public static allowedCharacterRule(allowedChars: string[]): ValidatorFn {\n        const validator = (control: AbstractControl): { [key: string]: any } => {\n            if (AbstractControlUtil.isNotPresent(control)) return undefined;\n            let value: string = control.value;\n            let valid = true;\n            let invalidChars: string[] = [];\n\n            for (let char of value) {\n                if (allowedChars.indexOf(char) === -1) {\n                    valid = false;\n                    if (invalidChars.indexOf(char) === -1) {\n                        invalidChars.push(char);\n                    }\n                }\n            }\n            if (!valid) {\n                return { 'allowedCharacterRule': { 'invalidChars': invalidChars, 'allowedChars': allowedChars } };\n            }\n            return undefined;\n        };\n        return validator;\n    };\n\n    public static alphabeticalCharacterRule(amount: number): ValidatorFn {\n        const validator = (control: AbstractControl): { [key: string]: any } => {\n            if (AbstractControlUtil.isNotPresent(control)) return undefined;\n            let value: string = control.value;\n            if (value.length === 0) {\n                return undefined;\n            }\n            let pattern = /[^A-Za-z]+/g;\n            let stripped = value.replace(pattern, '');\n            if (stripped.length < amount) {\n                return { 'alphabeticalCharacterRule': { 'required': amount, 'actual': stripped.length } };\n            }\n            return undefined;\n        };\n        return validator;\n    };\n\n    public static digitCharacterRule(amount: number): ValidatorFn {\n        const validator = (control: AbstractControl): { [key: string]: any } => {\n            if (AbstractControlUtil.isNotPresent(control)) return undefined;\n            let value: string = control.value;\n            if (value.length === 0) {\n                return undefined;\n            }\n            let pattern = /[^0-9\\.]+/g;\n            let stripped = value.replace(pattern, '');\n            if (stripped.length < amount) {\n                return { 'digitCharacterRule': { 'required': amount, 'actual': stripped.length } };\n            }\n            return undefined;\n        };\n        return validator;\n    };\n\n    public static lowercaseCharacterRule(amount: number): ValidatorFn {\n        const validator = (control: AbstractControl): { [key: string]: any } => {\n            if (AbstractControlUtil.isNotPresent(control)) return undefined;\n            let value: string = control.value;\n            if (value.length === 0) {\n                return undefined;\n            }\n            let pattern = /[^a-z]+/g;\n            let stripped = value.replace(pattern, '');\n            if (stripped.length < amount) {\n                return { 'lowercaseCharacterRule': { 'required': amount, 'actual': stripped.length } };\n            }\n            return undefined;\n        };\n        return validator;\n    };\n\n    public static uppercaseCharacterRule(amount: number): ValidatorFn {\n        const validator = (control: AbstractControl): { [key: string]: any } => {\n            if (AbstractControlUtil.isNotPresent(control)) return undefined;\n            let value: string = control.value;\n            if (value.length === 0) {\n                return undefined;\n            }\n            let pattern = /[^A-Z]+/g;\n            let stripped = value.replace(pattern, '');\n            if (stripped.length < amount) {\n                return { 'uppercaseCharacterRule': { 'required': amount, 'actual': stripped.length } };\n            }\n            return undefined;\n        };\n        return validator;\n    };\n\n    public static specialCharacterRule(amount: number): ValidatorFn {\n        const validator = (control: AbstractControl): { [key: string]: any } => {\n            if (AbstractControlUtil.isNotPresent(control)) return undefined;\n            let value: string = control.value;\n            if (value.length === 0) {\n                return undefined;\n            }\n            let pattern = /[\\w\\s]+/g;\n            let stripped = value.replace(pattern, '');\n            if (stripped.length < amount) {\n                return { 'specialCharacterRule': { 'required': amount, 'actual': stripped.length } };\n            }\n            return undefined;\n        };\n        return validator;\n    };\n\n    public static mismatchedPasswords(passwordControlName?: string, confirmPasswordControlName?: string): ValidatorFn {\n        const validator = (group: AbstractControl): { [key: string]: any } => {\n            let newPasswordValue = group.get(passwordControlName ? passwordControlName : 'newPassword').value;\n            let newPasswordConfirmValue = group.get(confirmPasswordControlName ? confirmPasswordControlName : 'confirmPassword').value;\n            if (newPasswordValue !== newPasswordConfirmValue) {\n                AbstractControlUtil.addError(group.get(confirmPasswordControlName ? confirmPasswordControlName : 'confirmPassword'), 'mismatchedPasswords', true)\n\n                return { 'mismatchedPasswords': true };\n            } else {\n                AbstractControlUtil.removeError(group.get(confirmPasswordControlName ? confirmPasswordControlName : 'confirmPassword'), 'mismatchedPasswords');\n            }\n            return undefined;\n\n        };\n        return validator;\n    };\n\n}\n","import { Injectable } from \"@angular/core\";\n\n/*\n * Code fromMailcheck https://github.com/mailcheck/mailcheck\n * Author\n * Derrick Ko (@derrickko)\n *\n * Released under the MIT License.\n *\n * v 1.1.2\n */\n\nexport interface EmailOptions {\n    domains: string[],\n    secondLevelDomains: string[],\n    topLevelDomains: string[]\n}\n\nexport interface SplittedEmail {\n    topLevelDomain: string,\n    secondLevelDomain: string,\n    domain: string,\n    address: string\n}\n\nexport interface Suggestion {\n    address: string,\n    domain: string,\n    full: string\n}\n\ninterface Offset {\n    c1: number,\n    c2: number,\n    trans: boolean\n}\n\nexport class EmailSuggestion {\n\n    private defaultOptions: EmailOptions = {\n        domains: ['msn.com', 'bellsouth.net',\n            'telus.net', 'comcast.net', 'optusnet.com.au',\n            'earthlink.net', 'qq.com', 'sky.com', 'icloud.com',\n            'mac.com', 'sympatico.ca', 'googlemail.com',\n            'att.net', 'xtra.co.nz', 'web.de',\n            'cox.net', 'gmail.com', 'ymail.com', 'yahoo.com',\n            'aim.com', 'rogers.com', 'verizon.net',\n            'rocketmail.com', 'google.com', 'optonline.net',\n            'sbcglobal.net', 'aol.com', 'me.com', 'btinternet.com',\n            'charter.net', 'shaw.ca'],\n        secondLevelDomains: [\"yahoo\", \"hotmail\", \"mail\", \"live\", \"outlook\", \"gmx\"],\n        topLevelDomains: [\"com\", \"com.au\", \"com.tw\", \"ca\", \"co.nz\", \"co.uk\", \"de\",\n            \"fr\", \"it\", \"ru\", \"net\", \"org\", \"edu\", \"gov\", \"jp\", \"nl\", \"kr\", \"se\", \"eu\",\n            \"ie\", \"co.il\", \"us\", \"at\", \"be\", \"dk\", \"hk\", \"es\", \"gr\", \"ch\", \"no\", \"cz\",\n            \"in\", \"net\", \"net.au\", \"info\", \"biz\", \"mil\", \"co.jp\", \"sg\", \"hu\", \"uk\"]\n    }\n\n    public suggest(email: string, options?: EmailOptions): { [key: string]: Suggestion } {\n        let opt = this.defaultOptions;\n        if (options != undefined) {\n            opt = options;\n        }\n        let emailParts = this.splitEmail(email.toLowerCase());\n\n        if (!emailParts) {\n            return undefined;\n        }\n\n        if (opt.secondLevelDomains && opt.topLevelDomains) {\n            // If the email is a valid 2nd-level + top-level, do not suggest anything.\n            if (opt.secondLevelDomains.indexOf(emailParts.secondLevelDomain) !== -1 && opt.topLevelDomains.indexOf(emailParts.topLevelDomain) !== -1) {\n                return undefined;\n            }\n        }\n\n        let closestDomain = this.findClosestDomain(emailParts.domain, opt.domains, 2);\n        if (closestDomain) {\n            if (closestDomain == emailParts.domain) {\n                // The email address exactly matches one of the supplied domains; do not return a suggestion.\n                return undefined;\n            } else {\n                // The email address closely matches one of the supplied domains; return a suggestion\n                return { suggestion: { address: emailParts.address, domain: closestDomain, full: emailParts.address + \"@\" + closestDomain } };\n            }\n        }\n\n        let closestSecondLevelDomain = this.findClosestDomain(emailParts.secondLevelDomain, opt.secondLevelDomains, 2);\n        let closestTopLevelDomain = this.findClosestDomain(emailParts.topLevelDomain, opt.topLevelDomains, 2);\n\n        if (emailParts.domain) {\n            closestDomain = emailParts.domain;\n            let rtrn = false;\n\n            if (closestSecondLevelDomain && closestSecondLevelDomain != emailParts.secondLevelDomain) {\n                // The email address may have a mispelled second-level domain; return a suggestion\n                closestDomain = closestDomain.replace(emailParts.secondLevelDomain, closestSecondLevelDomain);\n                rtrn = true;\n            }\n\n            if (closestTopLevelDomain && closestTopLevelDomain != emailParts.topLevelDomain && emailParts.secondLevelDomain !== '') {\n                // The email address may have a mispelled top-level domain; return a suggestion\n                closestDomain = closestDomain.replace(new RegExp(emailParts.topLevelDomain + \"$\"), closestTopLevelDomain);\n                rtrn = true;\n            }\n\n            if (rtrn) {\n                return { suggestion: { address: emailParts.address, domain: closestDomain, full: emailParts.address + \"@\" + closestDomain } };\n            }\n        }\n\n        /* The email address exactly matches one of the supplied domains, does not closely\n         * match any domain and does not appear to simply have a mispelled top-level domain,\n         * or is an invalid email address; do not return a suggestion.\n         */\n        return undefined;\n\n    };\n\n    public splitEmail(email: string) {\n\n        let parts = email.trim().split('@');\n\n        if (parts.length < 2) {\n            return undefined;\n        }\n\n        for (var i = 0; i < parts.length; i++) {\n            if (parts[i] === '') {\n                return undefined;\n            }\n        }\n\n        let result = {\n            topLevelDomain: \"\",\n            secondLevelDomain: \"\",\n            domain: parts.pop(),\n            address: ''\n        }\n\n        let domainParts = result.domain.split('.');\n\n        if (domainParts.length === 0) {\n            return undefined;\n        } else if (domainParts.length == 1) {\n            result.topLevelDomain = domainParts[0];\n        } else {\n            // The address has a domain and a top-level domain\n            result.secondLevelDomain = domainParts[0];\n            for (let j = 1; j < domainParts.length; j++) {\n                result.topLevelDomain += domainParts[j] + '.';\n            }\n            result.topLevelDomain = result.topLevelDomain.substring(0, result.topLevelDomain.length - 1);\n        }\n\n        result.address = parts.join('@');\n\n        return result;\n\n    }\n\n    private findClosestDomain(domain: string, domains: string[], threshold: number): string {\n        let dist;\n        let minDist = Infinity;\n        let closestDomain = null;\n\n        if (!domain || !domains) {\n            return undefined;\n        }\n\n        for (let i = 0; i < domains.length; i++) {\n            if (domain === domains[i]) {\n                return domain;\n            }\n            dist = this.sift4Distance(domain, domains[i], 5);\n            if (dist < minDist) {\n                minDist = dist;\n                closestDomain = domains[i];\n            }\n        }\n\n        if (minDist <= threshold && closestDomain !== null) {\n            return closestDomain;\n        } else {\n            return undefined;\n        }\n    }\n\n    private sift4Distance(s1: string, s2: string, maxOffset: number): number {\n        // sift4: https://siderite.blogspot.com/2014/11/super-fast-and-accurate-string-distance.html\n        if (maxOffset === undefined) {\n            maxOffset = 5; //default\n        }\n\n        if (!s1 || !s1.length) {\n            if (!s2) {\n                return 0;\n            }\n            return s2.length;\n        }\n\n        if (!s2 || !s2.length) {\n            return s1.length;\n        }\n\n        let l1 = s1.length;\n        let l2 = s2.length;\n\n        let c1 = 0;  //cursor for string 1\n        let c2 = 0;  //cursor for string 2\n        let lcss = 0;  //largest common subsequence\n        let local_cs = 0; //local common substring\n        let trans = 0;  //number of transpositions ('ab' vs 'ba')\n        let offset_arr: Offset[] = [];  //offset pair array, for computing the transpositions\n\n        while ((c1 < l1) && (c2 < l2)) {\n            if (s1.charAt(c1) == s2.charAt(c2)) {\n                local_cs++;\n                let isTrans = false;\n                //see if current match is a transposition\n                let i = 0;\n                while (i < offset_arr.length) {\n                    let ofs = offset_arr[i];\n                    if (c1 <= ofs.c1 || c2 <= ofs.c2) {\n                        // when two matches cross, the one considered a transposition is the one with the largest difference in offsets\n                        isTrans = Math.abs(c2 - c1) >= Math.abs(ofs.c2 - ofs.c1);\n                        if (isTrans) {\n                            trans++;\n                        } else {\n                            if (!ofs.trans) {\n                                ofs.trans = true;\n                                trans++;\n                            }\n                        }\n                        break;\n                    } else {\n                        if (c1 > ofs.c2 && c2 > ofs.c1) {\n                            offset_arr.splice(i, 1);\n                        } else {\n                            i++;\n                        }\n                    }\n                }\n                offset_arr.push({\n                    c1: c1,\n                    c2: c2,\n                    trans: isTrans\n                });\n            } else {\n                lcss += local_cs;\n                local_cs = 0;\n                if (c1 != c2) {\n                    c1 = c2 = Math.min(c1, c2);  //using min allows the computation of transpositions\n                }\n                //if matching characters are found, remove 1 from both cursors (they get incremented at the end of the loop)\n                //so that we can have only one code block handling matches \n                for (let j = 0; j < maxOffset && (c1 + j < l1 || c2 + j < l2); j++) {\n                    if ((c1 + j < l1) && (s1.charAt(c1 + j) == s2.charAt(c2))) {\n                        c1 += j - 1;\n                        c2--;\n                        break;\n                    }\n                    if ((c2 + j < l2) && (s1.charAt(c1) == s2.charAt(c2 + j))) {\n                        c1--;\n                        c2 += j - 1;\n                        break;\n                    }\n                }\n            }\n            c1++;\n            c2++;\n            // this covers the case where the last match is on the last token in list, so that it can compute transpositions correctly\n            if ((c1 >= l1) || (c2 >= l2)) {\n                lcss += local_cs;\n                local_cs = 0;\n                c1 = c2 = Math.min(c1, c2);\n            }\n        }\n        lcss += local_cs;\n        return Math.round(Math.max(l1, l2) - lcss + trans); //add the cost of transpositions to the final result\n    }\n}","import { AbstractControl, ValidatorFn } from '@angular/forms';\nimport { AbstractControlUtil } from './../abstract-control-util';\nimport { EmailSuggestion, EmailOptions } from './email-util';\n\nexport class EmailValidators {\n    private static emailSuggestion: EmailSuggestion = new EmailSuggestion();\n\n    public static simple(control: AbstractControl): { [key: string]: boolean } {\n        if (AbstractControlUtil.isNotPresent(control)) {\n            return undefined\n        };\n\n        let pattern = /.+@.+\\..+/i;\n        if (pattern.test(control.value)) {\n            return undefined;\n        }\n        return { 'simpleEmailRule': true };\n    };\n\n    // https://www.w3.org/TR/html5/forms.html#valid-e-mail-address\n    public static normal(control: AbstractControl): { [key: string]: boolean } {\n        if (AbstractControlUtil.isNotPresent(control)) {\n            return undefined\n        };\n        // tslint:disable-next-line:max-line-length\n        let pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n        if (pattern.test(control.value)) {\n            return undefined;\n        }\n        return { 'normalEmailRule': true };\n    };\n\n    public static suggest(options?: EmailOptions): ValidatorFn {\n        const validator = (control: AbstractControl): { [key: string]: any } => {\n            if (AbstractControlUtil.isNotPresent(control)) {\n                return undefined\n            };\n            return this.emailSuggestion.suggest(control.value, options)\n        };\n        return validator;\n    };\n\n}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\nimport { AbstractControlUtil } from '../abstract-control-util';\n\nexport class UniversalValidators {\n\n    public static noWhitespace(control: AbstractControl): { [key: string]: boolean } {\n        if (AbstractControlUtil.isNotPresent(control)) return undefined;\n        let pattern = '\\\\s';\n        if (new RegExp(pattern).test(control.value)) {\n            return { 'noWhitespaceRequired': true };\n        }\n        return undefined;\n    };\n\n    public static noEmptyString(control: AbstractControl): { [key: string]: boolean } {\n        if (AbstractControlUtil.isNotPresent(control)) return undefined;\n        if (control.value.trim().length === 0) {\n            return { 'noEmptyString': true };\n        }\n        return undefined;\n    };\n\n    public static isNumber(control: AbstractControl): { [key: string]: boolean } {\n        if (AbstractControlUtil.isNotPresent(control)) return undefined;\n        if (isNaN(control.value)) {\n            return { 'numberRequired': true };\n        }\n        return undefined;\n    };\n\n    public static isInRange(minValue: number, maxValue: number): ValidatorFn {\n        const validator = (control: AbstractControl): { [key: string]: any } => {\n            if (AbstractControlUtil.isNotPresent(control)) return undefined;\n            if (isNaN(control.value)) {\n                return { 'numberRequired': true };\n            }\n            if (+control.value < minValue) {\n                return { 'rangeValueToSmall': { 'requiredMinValue': minValue, 'requiredMaxValue': maxValue, 'actual': control.value } };\n            }\n\n            if (+control.value > maxValue) {\n                return { 'rangeValueToBig': { 'requiredMinValue': minValue, 'requiredMaxValue': maxValue, 'actual': control.value } };\n            } else {\n                return undefined;\n            }\n        };\n        return validator;\n    };\n\n    public static minLength(minLength: number) {\n        const validator = (control: AbstractControl): { [key: string]: any } => {\n            if (AbstractControlUtil.isNotPresent(control)) return undefined;\n            let value: string = control.value;\n            if (value.length >= minLength) {\n                return undefined;\n            }\n            return { 'minLength': { 'requiredMinLength': minLength, 'actualLength': value.length } };\n        };\n        return validator;\n    };\n\n    public static maxLength(maxLength: number) {\n        const validator = (control: AbstractControl): { [key: string]: any } => {\n            if (AbstractControlUtil.isNotPresent(control)) return undefined;\n            let value: string = control.value;\n            if (maxLength >= value.length) {\n                return undefined;\n            }\n            return { 'maxLength': { 'requiredMaxLength': maxLength, 'actualLength': value.length } };\n        };\n        return validator;\n    };\n\n    public static min(min: number) {\n        const validator = (control: AbstractControl): { [key: string]: any } => {\n            if (AbstractControlUtil.isNotPresent(control)) return undefined;\n            let value: string = control.value;\n            if (isNaN(control.value)) {\n                return { 'numberRequired': true };\n            }\n            if (+value >= min) {\n                return undefined;\n            }\n            return { 'min': { 'required': min, 'actual': control.value } };\n        };\n        return validator;\n    };\n\n    public static max(max: number) {\n        const validator = (control: AbstractControl): { [key: string]: any } => {\n            if (AbstractControlUtil.isNotPresent(control)) return undefined;\n            let value: string = control.value;\n            if (isNaN(control.value)) {\n                return { 'numberRequired': true };\n            }\n            if (max >= +value) {\n                return undefined;\n            }\n            return { 'max': { 'required': max, 'actual': control.value } };\n        };\n        return validator;\n    };\n\n}\n","import { AbstractControl } from '@angular/forms';\nimport { AbstractControlUtil } from './../abstract-control-util';\n\nconst visaRegex = '^(?:4[0-9]{12})(?:[0-9]{3})?$';\nconst americanExpressRegex = '^(?:3[47][0-9]{13})$';\nconst maestroRegex = '^(?:(?:5[0678]\\\\d\\\\d|6304|6390|67\\\\d\\\\d)\\\\d{8,15})$';\nconst jcbRegex = '^(?:(?:2131|1800|35\\\\d{3})\\\\d{11})$';\nconst discoverRegex = '^(?:6(?:011|5[0-9]{2})(?:[0-9]{12}))$';\nconst dinersclubRegex = '^(?:3(?:0[0-5]|[68][0-9])[0-9]{11})$';\nconst mastercardRegex = '^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$';\n\nexport class CreditCardValidators {\n\n    public static isCreditCard(control: AbstractControl): { [key: string]: boolean } {\n\n        if (AbstractControlUtil.isNotPresent(control)) return undefined;\n        if (new RegExp(americanExpressRegex + '|' +\n            visaRegex + '|' +\n            maestroRegex + '|' +\n            jcbRegex + '|' +\n            discoverRegex + '|' +\n            mastercardRegex + '|' +\n            dinersclubRegex\n        ).test(control.value)) {\n            return undefined;\n        }\n        return { 'creditcard': true };\n    };\n\n    public static americanExpress(control: AbstractControl): { [key: string]: boolean } {\n\n        if (AbstractControlUtil.isNotPresent(control)) return undefined;\n        if (new RegExp(americanExpressRegex).test(control.value)) {\n            return undefined;\n        }\n        return { 'americanExpress': true };\n    };\n\n    public static dinersclub(control: AbstractControl): { [key: string]: boolean } {\n\n        if (AbstractControlUtil.isNotPresent(control)) return undefined;\n        if (new RegExp(dinersclubRegex).test(control.value)) {\n            return undefined;\n        }\n        return { 'dinersclub': true };\n    };\n\n    public static discover(control: AbstractControl): { [key: string]: boolean } {\n\n        if (AbstractControlUtil.isNotPresent(control)) return undefined;\n        if (new RegExp(discoverRegex).test(control.value)) {\n            return undefined;\n        }\n        return { 'discover': true };\n    };\n    public static jcb(control: AbstractControl): { [key: string]: boolean } {\n\n        if (AbstractControlUtil.isNotPresent(control)) return undefined;\n        if (new RegExp(jcbRegex).test(control.value)) {\n            return undefined;\n        }\n        return { 'jcb': true };\n    };\n    public static maestro(control: AbstractControl): { [key: string]: boolean } {\n\n        if (AbstractControlUtil.isNotPresent(control)) return undefined;\n        if (new RegExp(maestroRegex).test(control.value)) {\n            return undefined;\n        }\n        return { 'maestro': true };\n    };\n\n    public static mastercard(control: AbstractControl): { [key: string]: boolean } {\n\n        if (AbstractControlUtil.isNotPresent(control)) return undefined;\n        if (new RegExp(mastercardRegex).test(control.value)) {\n            return undefined;\n        }\n        return { 'mastercard': true };\n    };\n\n    public static visa(control: AbstractControl): { [key: string]: boolean } {\n\n        if (AbstractControlUtil.isNotPresent(control)) return undefined;\n        if (new RegExp(visaRegex).test(control.value)) {\n            return undefined;\n        }\n        return { 'visa': true };\n    };\n}\n","import { Directive, Input, forwardRef, OnInit } from '@angular/core';\nimport { NG_VALIDATORS, Validator, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { PasswordValidators } from './password-validators';\n\n@Directive({\n    selector: '[password][formControlName],[password][formControl],[password][ngModel]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        // tslint:disable-next-line:no-forward-ref\n        useExisting: forwardRef(() => PasswordValidatorDirective),\n        multi: true\n    }]\n})\nexport class PasswordValidatorDirective implements Validator, OnInit {\n    @Input() repeatCharacter: number = 4;\n    @Input() alphabeticalCharacter: number = 1;\n    @Input() digitCharacter: number = 1;\n    @Input() lowercaseCharacter: number = 1;\n    @Input() uppercaseCharacter: number = 1;\n\n    private repeatCharacterValidator: ValidatorFn;\n    private alphabeticalCharacterValidator: ValidatorFn;\n    private digitCharacterValidator: ValidatorFn;\n    private lowercaseCharacterValidator: ValidatorFn;\n    private uppercaseCharacterValidator: ValidatorFn;\n\n    ngOnInit() {\n        this.repeatCharacterValidator = PasswordValidators.repeatCharacterRegexRule(this.repeatCharacter);\n        this.alphabeticalCharacterValidator = PasswordValidators.alphabeticalCharacterRule(this.alphabeticalCharacter);\n        this.digitCharacterValidator = PasswordValidators.digitCharacterRule(this.digitCharacter);\n        this.lowercaseCharacterValidator = PasswordValidators.lowercaseCharacterRule(this.lowercaseCharacter);\n        this.uppercaseCharacterValidator = PasswordValidators.uppercaseCharacterRule(this.uppercaseCharacter);\n\n    }\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        let compose: ValidatorFn = Validators.compose([this.repeatCharacterValidator,\n        this.digitCharacterValidator, this.alphabeticalCharacterValidator,\n        this.lowercaseCharacterValidator, this.uppercaseCharacterValidator]);\n        return compose(c);\n    }\n}","import { EmailSuggestion, EmailOptions } from './email-util';\nimport { Directive, Input, forwardRef, OnInit } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { EmailValidators } from './email-validators';\n\n@Directive({\n    selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        // tslint:disable-next-line:no-forward-ref\n        useExisting: forwardRef(() => EmailValidatorDirective),\n        multi: true\n    }]\n})\nexport class EmailValidatorDirective implements Validator, OnInit {\n    @Input() email: string = 'normal';\n\n    private validator: ValidatorFn;\n\n    ngOnInit() {\n        switch (this.email) {\n            case 'simple':\n                this.validator = EmailValidators.simple;\n                break;\n            case 'normal':\n                this.validator = EmailValidators.normal;\n                break;\n            default:\n                this.validator = EmailValidators.normal;\n                break;\n        }\n\n    }\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        return this.validator(c);\n    }\n}\n\n@Directive({\n    selector: '[emailSuggest][formControlName],[emailSuggest][formControl],[emailSuggest][ngModel]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        // tslint:disable-next-line:no-forward-ref\n        useExisting: forwardRef(() => EmailSuggestValidatorDirective),\n        multi: true\n    }]\n})\nexport class EmailSuggestValidatorDirective implements Validator, OnInit {\n    @Input() emailSuggest: EmailOptions;\n\n    private validator: ValidatorFn;\n\n    ngOnInit() {\n        this.validator = EmailValidators.suggest(this.emailSuggest);\n    }\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        return this.validator(c);\n    }\n}\n","import { Directive, forwardRef, Input, OnInit } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn } from '@angular/forms';\n\nimport { UniversalValidators } from './universal-validators';\n\n@Directive({\n    selector: '[noWhitespace][formControlName],[noWhitespace][formControl],[noWhitespace][ngModel]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        // tslint:disable-next-line:no-forward-ref\n        useExisting: forwardRef(() => WhiteSpaceValidatorDirective),\n        multi: true\n    }]\n})\nexport class WhiteSpaceValidatorDirective implements Validator, OnInit {\n    private validator: ValidatorFn;\n\n    ngOnInit() {\n        this.validator = UniversalValidators.noWhitespace;\n    }\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        return this.validator(c);\n    }\n}\n\n@Directive({\n    selector: '[noEmptyString][formControlName],[noEmptyString][formControl],[noEmptyString][ngModel]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        // tslint:disable-next-line:no-forward-ref\n        useExisting: forwardRef(() => EmptyStringValidatorDirective),\n        multi: true\n    }]\n})\nexport class EmptyStringValidatorDirective implements Validator, OnInit {\n    private validator: ValidatorFn;\n\n    ngOnInit() {\n        this.validator = UniversalValidators.noEmptyString;\n    }\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        return this.validator(c);\n    }\n}\n\n@Directive({\n    selector: '[isNumber][formControlName],[isNumber][formControl],[isNumber][ngModel]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        // tslint:disable-next-line:no-forward-ref\n        useExisting: forwardRef(() => IsNumberValidatorDirective),\n        multi: true\n    }]\n})\nexport class IsNumberValidatorDirective implements Validator, OnInit {\n    private validator: ValidatorFn;\n\n    ngOnInit() {\n        this.validator = UniversalValidators.isNumber;\n    }\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        return this.validator(c);\n    }\n}\n\n@Directive({\n    selector: '[isInRange][formControlName],[isInRange][formControl],[isInRange][ngModel]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        // tslint:disable-next-line:no-forward-ref\n        useExisting: forwardRef(() => IsInRangeValidatorDirective),\n        multi: true\n    }]\n})\nexport class IsInRangeValidatorDirective implements Validator, OnInit {\n    @Input() minValue: number;\n    @Input() maxValue: number;\n\n    private validator: ValidatorFn;\n\n    ngOnInit() {\n        this.validator = UniversalValidators.isInRange(this.minValue, this.maxValue);\n    }\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        return this.validator(c);\n    }\n}\n\n@Directive({\n    selector: 'input[type=text][max][formControlName],input[type=text][max][formControl],input[type=text][max][ngModel]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        // tslint:disable-next-line:no-forward-ref\n        useExisting: forwardRef(() => MaxValidatorDirective),\n        multi: true\n    }]\n})\nexport class MaxValidatorDirective implements Validator, OnInit {\n    @Input() max: number;\n\n    private validator: ValidatorFn;\n\n    ngOnInit() {\n        this.validator = UniversalValidators.max(this.max);\n    }\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        return this.validator(c);\n    }\n}\n\n@Directive({\n    selector: 'input[type=text][min][formControlName],input[type=text][min][formControl],input[type=text][min][ngModel]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        // tslint:disable-next-line:no-forward-ref\n        useExisting: forwardRef(() => MinValidatorDirective),\n        multi: true\n    }]\n})\nexport class MinValidatorDirective implements Validator, OnInit {\n    @Input() min: number;\n\n    private validator: ValidatorFn;\n\n    ngOnInit() {\n        this.validator = UniversalValidators.min(this.min);\n    }\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        return this.validator(c);\n    }\n}\n","import { Directive, Input, forwardRef, OnInit } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { CreditCardValidators } from './creditcard-validators';\n\n@Directive({\n    selector: '[creditCard][formControlName],[creditCard][formControl],[creditCard][ngModel]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        // tslint:disable-next-line:no-forward-ref\n        useExisting: forwardRef(() => CreditCardValidatorDirective),\n        multi: true\n    }]\n})\n\nexport class CreditCardValidatorDirective implements Validator, OnInit {\n    @Input() creditCard: string = 'all';\n\n    private validator: ValidatorFn;\n\n    ngOnInit() {\n        switch (this.creditCard) {\n            case 'all':\n                this.validator = CreditCardValidators.isCreditCard;\n                break;\n            case 'americanExpress':\n                this.validator = CreditCardValidators.americanExpress;\n                break;\n            case 'dinersclub':\n                this.validator = CreditCardValidators.dinersclub;\n                break;\n            case 'discover':\n                this.validator = CreditCardValidators.discover;\n                break;\n            case 'jcb':\n                this.validator = CreditCardValidators.jcb;\n                break;\n            case 'maestro':\n                this.validator = CreditCardValidators.maestro;\n                break;\n            case 'mastercard':\n                this.validator = CreditCardValidators.mastercard;\n                break;\n            case 'visa':\n                this.validator = CreditCardValidators.visa;\n                break;\n            default:\n                this.validator = CreditCardValidators.isCreditCard;\n                break;\n        }\n\n    }\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        return this.validator(c);\n    }\n}\n","import { Directive, forwardRef, Input, OnDestroy } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\n@Directive({\n  selector: '[equalTo][ngModel], [equalTo][formControlName], [equalTo][formControl]',\n  providers: [{\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line:no-forward-ref\n    useExisting: forwardRef(() => EqualToDirective),\n    multi: true\n  }]\n})\nexport class EqualToDirective implements Validator, OnDestroy {\n\n  @Input() equalTo: string | AbstractControl;\n\n  private subscription: Subscription;\n\n  validate(c: AbstractControl): ValidationErrors | null {\n    const otherControl = typeof this.equalTo === 'string' ? c.parent.get(this.equalTo) : this.equalTo;\n    if (!this.subscription) {\n      this.subscription = otherControl.valueChanges\n        .pipe(delay(1)).subscribe(() => {\n          c.updateValueAndValidity()\n        });\n    }\n    return c.value !== otherControl.value ? {notEqualTo: true} : null;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {\n  EmptyStringValidatorDirective,\n  IsInRangeValidatorDirective,\n  IsNumberValidatorDirective,\n  MaxValidatorDirective,\n  MinValidatorDirective,\n  WhiteSpaceValidatorDirective\n} from './universal/universal.directive';\nimport { NgModule } from '@angular/core';\n\nimport { CreditCardValidatorDirective } from './creditcard/creditcard.directive';\nimport { EmailValidatorDirective, EmailSuggestValidatorDirective } from './email/email.directive';\nimport { PasswordValidatorDirective } from './password/password.directive';\nimport { EqualToDirective } from './equal-to/equal-to.directive';\n\n@NgModule({\n  declarations: [\n    CreditCardValidatorDirective,\n    EmailValidatorDirective,\n    EmailSuggestValidatorDirective,\n    PasswordValidatorDirective,\n    IsInRangeValidatorDirective,\n    IsNumberValidatorDirective,\n    MaxValidatorDirective,\n    MinValidatorDirective,\n    WhiteSpaceValidatorDirective,\n    EmptyStringValidatorDirective,\n    EqualToDirective\n  ],\n  exports: [\n    CreditCardValidatorDirective,\n    EmailValidatorDirective,\n    EmailSuggestValidatorDirective,\n    PasswordValidatorDirective,\n    IsInRangeValidatorDirective,\n    IsNumberValidatorDirective,\n    MaxValidatorDirective,\n    MinValidatorDirective,\n    WhiteSpaceValidatorDirective,\n    EmptyStringValidatorDirective,\n    EqualToDirective\n  ]\n})\nexport class ValidatorsModule { }\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\nimport { AbstractControlUtil } from '../abstract-control-util';\n\nexport class EqualToValidator {\n  static equalTo(c1Name: string, c2Name: string): ValidatorFn {\n    const validator = (parent: AbstractControl): any => {\n      const c1 =parent.get(c1Name);\n      const c2 = parent.get(c2Name);\n\n      if (c1.value === c2.value) {\n        AbstractControlUtil.removeError(c2, 'notEqualTo');\n      } else {\n        AbstractControlUtil.addError(c2, 'notEqualTo', true);\n      }\n    };\n    return validator;\n  }\n}\n"],"names":["tslib_1.__values","Validators","Directive","NG_VALIDATORS","forwardRef","Input","delay","NgModule"],"mappings":"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"}
