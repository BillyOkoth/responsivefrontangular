import { OnInit } from '@angular/core';
import { AbstractControl, Validator } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
export declare class WhiteSpaceValidatorDirective implements Validator, OnInit {
    private validator;
    ngOnInit(): void;
    validate(c: AbstractControl): {
        [key: string]: any;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<WhiteSpaceValidatorDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<WhiteSpaceValidatorDirective, "[noWhitespace][formControlName],[noWhitespace][formControl],[noWhitespace][ngModel]", never, {}, {}, never>;
}
export declare class EmptyStringValidatorDirective implements Validator, OnInit {
    private validator;
    ngOnInit(): void;
    validate(c: AbstractControl): {
        [key: string]: any;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<EmptyStringValidatorDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<EmptyStringValidatorDirective, "[noEmptyString][formControlName],[noEmptyString][formControl],[noEmptyString][ngModel]", never, {}, {}, never>;
}
export declare class IsNumberValidatorDirective implements Validator, OnInit {
    private validator;
    ngOnInit(): void;
    validate(c: AbstractControl): {
        [key: string]: any;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IsNumberValidatorDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IsNumberValidatorDirective, "[isNumber][formControlName],[isNumber][formControl],[isNumber][ngModel]", never, {}, {}, never>;
}
export declare class IsInRangeValidatorDirective implements Validator, OnInit {
    minValue: number;
    maxValue: number;
    private validator;
    ngOnInit(): void;
    validate(c: AbstractControl): {
        [key: string]: any;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IsInRangeValidatorDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IsInRangeValidatorDirective, "[isInRange][formControlName],[isInRange][formControl],[isInRange][ngModel]", never, { "minValue": "minValue"; "maxValue": "maxValue"; }, {}, never>;
}
export declare class MaxValidatorDirective implements Validator, OnInit {
    max: number;
    private validator;
    ngOnInit(): void;
    validate(c: AbstractControl): {
        [key: string]: any;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MaxValidatorDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MaxValidatorDirective, "input[type=text][max][formControlName],input[type=text][max][formControl],input[type=text][max][ngModel]", never, { "max": "max"; }, {}, never>;
}
export declare class MinValidatorDirective implements Validator, OnInit {
    min: number;
    private validator;
    ngOnInit(): void;
    validate(c: AbstractControl): {
        [key: string]: any;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MinValidatorDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MinValidatorDirective, "input[type=text][min][formControlName],input[type=text][min][formControl],input[type=text][min][ngModel]", never, { "min": "min"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pdmVyc2FsLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJ1bml2ZXJzYWwuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sLCBWYWxpZGF0b3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBXaGl0ZVNwYWNlVmFsaWRhdG9yRGlyZWN0aXZlIGltcGxlbWVudHMgVmFsaWRhdG9yLCBPbkluaXQge1xuICAgIHByaXZhdGUgdmFsaWRhdG9yO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgdmFsaWRhdGUoYzogQWJzdHJhY3RDb250cm9sKToge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBhbnk7XG4gICAgfTtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEVtcHR5U3RyaW5nVmFsaWRhdG9yRGlyZWN0aXZlIGltcGxlbWVudHMgVmFsaWRhdG9yLCBPbkluaXQge1xuICAgIHByaXZhdGUgdmFsaWRhdG9yO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgdmFsaWRhdGUoYzogQWJzdHJhY3RDb250cm9sKToge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBhbnk7XG4gICAgfTtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElzTnVtYmVyVmFsaWRhdG9yRGlyZWN0aXZlIGltcGxlbWVudHMgVmFsaWRhdG9yLCBPbkluaXQge1xuICAgIHByaXZhdGUgdmFsaWRhdG9yO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgdmFsaWRhdGUoYzogQWJzdHJhY3RDb250cm9sKToge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBhbnk7XG4gICAgfTtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElzSW5SYW5nZVZhbGlkYXRvckRpcmVjdGl2ZSBpbXBsZW1lbnRzIFZhbGlkYXRvciwgT25Jbml0IHtcbiAgICBtaW5WYWx1ZTogbnVtYmVyO1xuICAgIG1heFZhbHVlOiBudW1iZXI7XG4gICAgcHJpdmF0ZSB2YWxpZGF0b3I7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICB2YWxpZGF0ZShjOiBBYnN0cmFjdENvbnRyb2wpOiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IGFueTtcbiAgICB9O1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTWF4VmFsaWRhdG9yRGlyZWN0aXZlIGltcGxlbWVudHMgVmFsaWRhdG9yLCBPbkluaXQge1xuICAgIG1heDogbnVtYmVyO1xuICAgIHByaXZhdGUgdmFsaWRhdG9yO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgdmFsaWRhdGUoYzogQWJzdHJhY3RDb250cm9sKToge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBhbnk7XG4gICAgfTtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1pblZhbGlkYXRvckRpcmVjdGl2ZSBpbXBsZW1lbnRzIFZhbGlkYXRvciwgT25Jbml0IHtcbiAgICBtaW46IG51bWJlcjtcbiAgICBwcml2YXRlIHZhbGlkYXRvcjtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIHZhbGlkYXRlKGM6IEFic3RyYWN0Q29udHJvbCk6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogYW55O1xuICAgIH07XG59XG4iXX0=