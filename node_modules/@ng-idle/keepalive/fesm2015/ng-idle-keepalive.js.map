{"version":3,"file":"ng-idle-keepalive.js","sources":["ng://@ng-idle/keepalive/lib/keepalive.ts","ng://@ng-idle/keepalive/lib/module.ts"],"sourcesContent":["import { EventEmitter, Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { KeepaliveSvc } from '@ng-idle/core';\n\n/**\n * An example of an injectable service.\n */\n@Injectable()\nexport class Keepalive extends KeepaliveSvc implements OnDestroy {\n  private pingRequest: HttpRequest<any>;\n  private pingInterval: number = 10 * 60;\n  private pingHandle: any;\n\n  /*\n   * An event emitted when the service is pinging.\n   */\n  public onPing: EventEmitter<any> = new EventEmitter();\n\n  /*\n   * An event emitted when the service has pinged an HTTP endpoint and received a response.\n   */\n  public onPingResponse: EventEmitter<HttpResponse<any>> = new EventEmitter<\n    HttpResponse<any>\n  >();\n\n  /*\n   * Initializes a new instance of Keepalive\n   * @param http - The HTTP service.\n   */\n  constructor(private http: HttpClient, private zone: NgZone) {\n    super();\n  }\n\n  /*\n   * Sets the string or Request that should be used when pinging.\n   * @param url - The URL or Request object to use when pinging.\n   * @return The current Request used when pinging.\n   */\n  request<T>(url?: string | HttpRequest<T>): HttpRequest<T> {\n    if (typeof url === 'string') {\n      this.pingRequest = new HttpRequest<T>('GET', url);\n    } else if (url instanceof HttpRequest) {\n      this.pingRequest = url;\n    } else if (url === null) {\n      this.pingRequest = null;\n    }\n\n    return this.pingRequest;\n  }\n\n  /*\n   * Sets the interval (in seconds) at which the ping operation will occur when start() is called.\n   * @param seconds - The ping interval in seconds.\n   * @return The current interval value.\n   */\n  interval(seconds?: number): number {\n    if (!isNaN(seconds) && seconds > 0) {\n      this.pingInterval = seconds;\n    } else if (!isNaN(seconds) && seconds <= 0) {\n      throw new Error('Interval value must be greater than zero.');\n    }\n\n    return this.pingInterval;\n  }\n\n  /*\n   * Immediately performs the ping operation. If a request has been set, an HTTP\n   * request will be made and the response will be emitted via the\n   * onPingResponse event.\n   */\n  ping(): void {\n    this.onPing.emit(null);\n    if (this.pingRequest) {\n      this.http.request(this.pingRequest).subscribe(\n        (response: HttpResponse<any>) => {\n          this.onPingResponse.emit(response);\n        },\n        (error: HttpResponse<any>) => {\n          this.onPingResponse.emit(error);\n        }\n      );\n    }\n  }\n\n  /*\n   * Starts pinging on an interval.\n   */\n  start(): void {\n    this.stop();\n\n    this.zone.runOutsideAngular(() => {\n      this.pingHandle = setInterval(() => {\n        this.zone.run(() => {\n          this.ping();\n        });\n      }, this.pingInterval * 1000);\n    });\n  }\n\n  /*\n   * Stops pinging on an interval.\n   */\n  stop(): void {\n    if (this.hasPingHandle()) {\n      clearInterval(this.pingHandle);\n      this.pingHandle = null;\n    }\n  }\n\n  /*\n   * Performs any cleanup tasks when Angular destroys the instance.\n   */\n  ngOnDestroy(): void {\n    this.stop();\n  }\n\n  /*\n   * Returns whether or not the service will ping automatically at the specified interval.\n   * @return True if the service will ping at the specified interval; otherwise, false.\n   */\n  isRunning(): boolean {\n    return this.hasPingHandle();\n  }\n\n  private hasPingHandle(): boolean {\n    return this.pingHandle !== null && typeof this.pingHandle !== 'undefined';\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { KeepaliveSvc, NgIdleModule } from '@ng-idle/core';\n\nimport { Keepalive } from './keepalive';\n\n@NgModule({ imports: [NgIdleModule.forRoot()] })\nexport class NgIdleKeepaliveModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgIdleKeepaliveModule,\n      providers: [Keepalive, { provide: KeepaliveSvc, useExisting: Keepalive }]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}