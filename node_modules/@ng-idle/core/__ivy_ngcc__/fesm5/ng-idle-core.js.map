{"version":3,"file":"ng-idle-core.js","sources":["ng:/@ng-idle/core/lib/idleexpiry.ts","ng:/@ng-idle/core/lib/interrupt.ts","ng:/@ng-idle/core/lib/keepalivesvc.ts","ng:/@ng-idle/core/lib/alternativestorage.ts","ng:/@ng-idle/core/lib/localstorage.ts","ng:/@ng-idle/core/lib/localstorageexpiry.ts","ng:/@ng-idle/core/lib/idle.ts","ng:/@ng-idle/core/lib/interruptargs.ts","ng:/@ng-idle/core/lib/interruptsource.ts","ng:/@ng-idle/core/lib/eventtargetinterruptsource.ts","ng:/@ng-idle/core/lib/documentinterruptsource.ts","ng:/@ng-idle/core/lib/windowinterruptsource.ts","ng:/@ng-idle/core/lib/storageinterruptsource.ts","ng:/@ng-idle/core/lib/simpleexpiry.ts","ng:/@ng-idle/core/lib/module.ts","ng:/@ng-idle/core/lib/defaultinterruptsources.ts"],"names":["tslib_1.__extends","tslib_1.__values"],"mappings":";;;;;;;;;;;;;;;;AAGA;AAAQ;AAIP;AAAI;AAAI;AACL;AAAI;AACW,IAFjB;AACM,QAAJ,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;AAC9B,QAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC7B,KAAG;AACH;AAEC;AACE;AACE;AAEJ;AAAQ;AAAO;AAEJ;AACS;AAAiC;AAAU;AAC1D;AAEgB;AAGhB;AAAQ,IATZ,uBAAE;AAAM;AAEJ;AACS;AAAiC;AAAU;AAC1D;AAEgB;AAGhB;AAAQ,IATN,UAAG,KAAW;AAAI,QAChB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;AAC1B,YAAM,IAAI,CAAC,KAAK,EAAE;AAClB,gBAAQ,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;AACjE,aAAO;AACP,YACM,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AAC3B,SAAK;AACL,QACI,OAAO,IAAI,CAAC,OAAO,CAAC;AACxB,KAAG;AAEH;AACE;AACF;AACE;AAAiC;AAElC;AAAO;AAGH;AACM;AACH;AAAU;AAAQ;AAEZ;AAAmB;AAC7B,IADF,2BAAM;AAAM;AACG;AACc;AAGJ;AAGxB;AACG;AACN;AAAmB;AAAQ,IAVzB,UAAO,KAAe;AAAI,QACxB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;AAC1B,YAAM,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC/B,SAAK;AACL,QACI,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5B,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAO;AAEZ;AAIE;AAAU;AAAQ;AAAmB;AACnC,IAPL,wBAAG;AAAM;AACmB;AAK7B;AAAU;AAAQ;AAAmB;AACnC,IAPD;AACF;AACI,QAAA,OAAO,IAAI,IAAI,EAAE,CAAC;AACtB,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAO;AAEV;AAGL;AAAU;AAAQ;AAAmB;AAAQ,IAL3C,8BAAS;AAAM;AAEV;AAGL;AAAU;AAAQ;AAAmB;AAAQ,IAL7C;AAAc;AACA,YAAN,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE;AAC9B,QAAI,OAAO,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;AAClD,KAAG;AACF,IAAD,iBAAC;AACA,CADA;AACG;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAG;AAA+D;AC3DtO;AAAO;AAGQ;AAAI;AAGd,IAHH,mBAAmB,MAAuB;AAAI,QAA3B,WAAM,GAAN,MAAM,CAAiB;AAAC,KAAG;AAChD;AAEC;AACE;AACE;AACE;AAAO;AACY;AAIhB;AAAU;AAAQ;AAElB;AACL;AAAQ,IARX,6BAAS;AAAM;AACY;AAIhB;AAAU;AAAQ;AAElB;AACL;AAAQ,IARd,UAAU,EAAiC;AAAI,QAC7C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;AACrD,KAAG;AAEH;AACE;AACE;AACE;AAAO;AACa;AAClB;AAAQ;AAIZ;AAAQ,IANV,+BAAW;AAAM;AAEf;AAAU;AACb;AAGS;AAAQ,IANhB;AAAc,QACZ,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;AAC3B,QAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;AACpB,KAAG;AAEH;AACE;AACE;AACE;AAAO;AAKO;AAAU;AAAQ;AACtC;AACE,IAPA,0BAAM;AAAM;AAKO;AAAU;AAAQ;AACtC;AACE,IAPD;AAAc,QACZ,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AACzB,KAAG;AAEH;AACE;AACE;AACE;AAAO;AAIW;AAAU;AAAQ;AAAmB;AAAQ,IAJnE,yBAAK;AAAM;AAIW;AAAU;AAAQ;AAAmB;AAAQ,IAJnE;AAAc,QACZ,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AACzB,KAAG;AACF,IAAD,gBAAC;AACA,CADA,IAAA;AACD;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAI;AAAa;AC3CjL;AAAS;AAAa;AAAI;AAEnB,IAFP;AAA0B,KAIzB;AACD,IADA,mBAAC;AACA,CADA;AACG;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAG;AAAoG;AAAiB;AAAuB;ACAnT;AAAO;AAIS;AAAiB;AAAuB;AAAI;AAEnD,IANT;AAAgC,QACtB,eAAU,GAAQ,EAAE,CAAC;AAC/B,KA2DC;AACD,IAxDE,sBAAI,sCAAM;AAAI;AACN;AAMJ;AACN;AAAgB;AAMkC;AAC9C;AAAY;AAEZ;AAAY,QAjBd;AAAc,YACZ,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;AAC/C,SAAG;AAEH;AACqB;AAEpB,OALE;AACH;AAEC;AACE;AACE;AAAO;AAKT;AAAU;AAAQ;AAEd;AAAQ,IAPb,kCAAK;AAAM;AAKT;AAAU;AAAQ;AAEd;AAAQ,IAPd;AAAc,QACZ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACzB,KAAG;AAEH;AACE;AACE;AACE;AACE;AAEJ;AAAQ;AAAO;AACR;AAAS;AACS;AAI7B;AAEI;AAAQ;AAAsB;AAEzB;AAAQ,IAVf,oCAAO;AAAM;AACR;AAAS;AACS;AAGzB;AAGA;AAAQ;AAAsB;AAEzB;AAAQ,IAVX,UAAQ,GAAW;AAAI,QACrB,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,WAAW,EAAE;AACrD,YAAM,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AAClC,SAAK;AACL,QAAI,OAAO,IAAI,CAAC;AAChB,KAAG;AAEH;AACE;AACE;AACE;AACE;AAEJ;AAAQ;AAAO;AACK;AAAS;AAMhC;AAAsC;AAAU;AAAQ;AAExC;AACf;AAAQ,IAVR,gCAAG;AAAM;AACK;AAAS;AAIS;AAEH;AAAU;AAAQ;AAExC;AAAmB;AAC1B,IAVA,UAAI,KAAa;AAAI,QACnB,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;AACvD,KAAG;AAEH;AACE;AACE;AACE;AAEJ;AAAQ;AAAO;AACM;AAAS;AAIc;AAAU;AAAQ;AAE5D;AAAmB;AAAQ,IAP7B,uCAAU;AAAM;AACM;AAAS;AAIc;AAAU;AAAQ;AAE5D;AAAmB;AAAQ,IAP9B,UAAW,GAAW;AAAI,QACxB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;AACrC,KAAG;AAEH;AACE;AACE;AACE;AACE;AAEJ;AAAQ;AAAO;AAIJ;AACb;AAEc;AAA+D;AAAU;AAAQ;AAAsB;AAAwB;AAAmB;AAAQ,IAPxK,oCAAO;AAAM;AAIJ;AAAS;AAGR;AAA+D;AAAU;AAAQ;AAAsB;AAAwB;AAAmB;AAAQ,IAPpK,UAAQ,GAAW,EAAE,KAAa;AAAI,QACpC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACjC,KAAG;AAEH,IAEA,yBAAC;AACA,CADA,IAAA;AACD;AAAC;AAAI;AAAkC;AAAqH;ACnE5J;AAAG;AAAoC;AAMvC;AAEM,IAEJ;AACQ,QAAN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AACrC,KAAG;AACH;AAEC;AACE;AACE;AACE;AAEJ;AAAQ;AAAO;AAGwB;AAIjC;AAAiB;AAOK;AAC5B;AAAQ;AAAgB;AAEnB;AAAQ,IAjBN,iCAAU;AAAM;AAIrB;AAGY;AAAiB;AAQjC;AAAU;AAAQ;AAChB;AACa;AAAQ,IAjBtB;AAAc,QACZ,IAAI;AACR;AAA6B,gBAAjB,OAAO,GAAG,YAAY;AAClC,YAAM,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;AAC5C,YAAM,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAC3C,YAAM,OAAO,OAAO,CAAC;AACrB,SAAK;AAAC,QAAA,OAAO,GAAG,EAAE;AAClB,YAAM,OAAO,IAAI,kBAAkB,EAAE,CAAC;AACtC,SAAK;AACL,KAAG;AAEH;AACE;AACE;AACE;AACE;AAEJ;AAAQ;AAAO;AACF;AAAS;AAInB;AAEN;AAAU;AAAQ;AACnB;AACa;AAAQ,IATnB,8BAAO;AAAM;AACF;AAAS;AAInB;AACD;AACK;AAAQ;AAAsB;AAE5B;AAAQ,IATf,UAAQ,GAAW;AAAI,QACrB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC;AAClD,KAAG;AAEH;AACE;AACE;AACE;AAEJ;AAAQ;AAAO;AACO;AAAS;AAIZ;AAAU;AAE/B;AAAsB;AAAmB;AACpC,IARH,iCAAU;AAAM;AACO;AAAS;AAIZ;AAAU;AAE/B;AAAsB;AAAmB;AACpC,IARJ,UAAW,GAAW;AAAI,QACxB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC;AAC9C,KAAG;AAEH;AACE;AACE;AACE;AACE;AAEJ;AAAQ;AAAO;AACP;AAAS;AAIZ;AAAqD;AAE3D;AAAQ;AAAsB;AACrB;AAAmB;AAAQ,IARrC,8BAAO;AAAM;AACP;AAAS;AAIZ;AAAqD;AACtD;AACG;AAAsB;AACrB;AAAmB;AAAQ,IARjC,UAAQ,GAAW,EAAE,IAAY;AAAI,QACnC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;AACjD,KAAG;AAEH;AACE;AACE;AACE;AACE;AAEJ;AAAQ;AAAO;AAIa;AAAS;AAAgD;AAAqD;AAAU;AAAQ;AAAmB;AAAQ,IAJzL,+BAAQ;AAAM;AAIa;AAAS;AAAgD;AAAqD;AAAU;AAAQ;AAAmB;AAAQ,IAJtL;AAAc,QACZ,OAAO,IAAI,CAAC,OAAO,CAAC;AACxB,KAAG,CA7DG;AAAC;yBADN,UAAU,nCAET;;;;;gDAGc;AAAC,IA0DjB,mBAAC;AACA,CAhED;AAAK;AAAC;AAAI;AAER;AAOsB;AAAI;AAAG;AAAqD;AAC7E;ACRP;AAC8C,IAANA,sCAAU;AAAC,IAGjD,4BAAoB,YAA0B;AAChD,QADE,YACE,iBAAO,SACR;AACH,QAHsB,kBAAY,GAAZ,YAAY,CAAc;AAAC,QAFvC,cAAQ,GAAG,MAAM,CAAC;AAC5B;AACqB,KAElB;AACH;AAEC;AACE;AACE;AACE;AAEJ;AAAQ;AAAO;AAEG;AAOlB;AAMM;AACkB;AACzB;AACE;AACD;AAAmB;AAEtB,IArBE,iCAAI;AAAM;AAEG;AAMU;AAOtB;AACkB;AAAU;AAC3B;AACmB;AACP;AAAQ,IAnBtB,UAAK,KAAY;AAAI,QACnB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;AAC1B,YAAM,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC5B,SAAK;AACL,QAAI,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;AAC5B,KAAG;AAEH;AAAQ;AAAyB;AAClB;AAAQ,IADrB,mCAAM;AAAO;AACZ;AAAmB;AACpB,IAFA,UAAO,KAAe;AAAI,QACxB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;AAC1B,YAAM,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC5B,SAAK;AACL,QAAI,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;AAC5B,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAO;AACG;AAIG;AACf;AAAQ;AAAmB;AAEhC,IARC,wCAAW;AAAM;AACG;AAKtB;AAAU;AAAQ;AACf;AACE,IARH;AAAc,QACZ,OAAO,IAAI,CAAC,QAAQ,CAAC;AACzB,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAO;AACN;AAEJ;AAGD;AAAQ;AACR;AAAmB;AAAQ,IAP7B,wCAAW;AAAM;AACN;AAGV;AAEK;AAAQ;AACR;AAAmB;AAAQ,IAPjC,UAAY,GAAW;AAAI,QACzB,IAAI,GAAG,EAAE;AACb,YAAM,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;AAC1B,SAAK;AACL,KAAG;AAEH;AAAQ;AAAgB;AACX;AAAQ,IADX,sCAAS;AAAO;AACd;AAAmB;AAAQ,IADrC;AAAc;AACL,YAAD,MAAM,GAAW,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC/E,QAAI,IAAI,MAAM,EAAE;AAChB,YAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;AAC5C,SAAK;AAAC,aAAK;AACX,YAAM,OAAO,IAAI,CAAC;AAClB,SAAK;AACL,KAAG;AAEH;AAAQ;AAAgB;AACX;AACE;AAAQ,IAFb,sCAAS;AAAO;AACnB;AACO;AACd;AAAQ,IAHN,UAAkB,KAAW;AAC/B,QAAI,IAAI,KAAK,EAAE;AACf,YAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CACvB,IAAI,CAAC,QAAQ,GAAG,SAAS,EACzB,KAAK,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAC3B,CAAC;AACR,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,CAAC;AAC9D,SAAK;AACL,KAAG;AAEH;AAAQ;AAAgB;AACd;AAAQ,IADR,sCAAS;AAAO;AACjB;AAAmB;AAAQ,IADlC;AAAc;AACR,YAAE,MAAM,GAAW,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC/E,QAAI,IAAI,MAAM,EAAE;AAChB,YAAM,OAAO,MAAM,KAAK,MAAM,CAAC;AAC/B,SAAK;AAAC,aAAK;AACX,YAAM,OAAO,KAAK,CAAC;AACnB,SAAK;AACL,KAAG;AAEH;AAAQ;AAAgB;AACd;AACE;AAAQ,IAFV,sCAAS;AAAO;AACtB;AACO;AAAmB;AAAQ,IAFpC,UAAkB,KAAc;AAClC,QAAI,IAAI,KAAK,EAAE;AACf,YAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,SAAS,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC7E,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,SAAS,EAAE,OAAO,CAAC,CAAC;AACpE,SAAK;AACL,KAAG,CAhFG;AAAC;+BADN,UAAU,zCACmB;AAGpB,gBAVD,YAAY;AAAG;;;;;sEAAS;AAAC,IAwFlC,yBAAC;AACA,CADA,CAjFuC,UAAU;AACjD;AAAC;AAAI;AAEI;AAK0C;AACpD;AAAsB;AAAmB;AAAO;AAAmD;AAAQ,ICIzG,WAAQ;AACV;AACE;AACE;AACE,IAAJ,OAAI;AACN;AACE;AACE;AACE,IAAJ,UAAO;AACR;AAEA;AAC0C;AAGxC;AACG;AAAI;AACY;AAHtB;AAC0B,IAqBxB,cACU,MAAkB,EAClB,IAAY,EACR,YAA2B;AACxC,QAHS,WAAM,GAAN,MAAM,CAAY;AAAC,QACnB,SAAI,GAAJ,IAAI,CAAQ;AAAC,QAtBf,SAAI,GAAW,EAAE,GAAG,EAAE,CAAC;AACjC;AAAsB,QAAZ,eAAU,GAAG,EAAE,CAAC;AAC1B;AAAsB,QAAZ,eAAU,GAAe,UAAU,CAAC,IAAI,CAAC;AACnD,QAAU,eAAU,GAAqB,IAAI,KAAK,EAAE,CAAC;AACrD,QAAU,YAAO,GAAG,KAAK,CAAC;AAC1B,QAIU,qBAAgB,GAAG,KAAK,CAAC;AACnC,QAES,gBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;AAC7D,QAAS,cAAS,GAAsB,IAAI,YAAY,EAAE,CAAC;AAC3D,QAAS,qBAAgB,GAAyB,IAAI,YAAY,EAAU,CAAC;AAC7E,QAAS,cAAS,GAAyB,IAAI,YAAY,EAAU,CAAC;AACtE,QAAS,gBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;AAC7D,QAQI,IAAI,YAAY,EAAE;AACtB,YAAM,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACvC,YAAM,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACnC,SAAK;AACL,QAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC1B,KAAG;AACH;AAEC;AACE;AACE;AAEJ;AAAQ;AAAO;AACW;AAGtB;AACe;AAAU;AAAQ;AAAsB;AAAmB;AAC9E,IANC,0BAAW;AAAM;AACW;AAGtB;AACe;AAAU;AAAQ;AAAsB;AAAmB;AAC9E,IANF,UAAY,GAAW;AAAI,QACzB,IAAI,IAAI,CAAC,MAAM,YAAY,kBAAkB,EAAE;AACnD,YAAM,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACnC,SAAK;AAAC,aAAK;AACX,YAAM,MAAM,IAAI,KAAK,CACb,6EAA6E,CAC9E,CAAC;AACR,SAAK;AACL,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAO;AAKb;AAAmE;AAC7D;AAAQ;AAAmB;AAAQ,IANzC,kCAAmB;AAAM;AAKb;AACJ;AAAU;AAAQ;AAAmB;AAAQ,IANrD;AAAc,QACZ,OAAO,IAAI,CAAC,gBAAgB,CAAC;AACjC,KAAG;AAEH;AACE;AACE;AACE;AAEJ;AAAQ;AAAO;AAEJ;AAC+C;AACrD;AAGN;AAAQ;AAAwB;AAG9B;AACG,IAXJ,kCAAmB;AAAM;AAG3B;AAAsE;AAIrE;AAAU;AAAQ;AAAwB;AAInC;AAAQ,IAXd,UAAoB,KAAc;AAAI,QACpC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AAC5B,YAAM,MAAM,IAAI,KAAK,CACb,gFAAgF,CACjF,CAAC;AACR,SAAK;AACL,QACI,QAAQ,IAAI,CAAC,gBAAgB,GAAG,KAAK,EAAE;AAC3C,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAO;AAId;AAEa;AAAU;AAAQ;AAAmB;AAAQ,IANzD,yBAAU;AAAM;AAId;AAEa;AAAU;AAAQ;AAAmB;AAAQ,IAN5D;AAAc,QACZ,OAAO,IAAI,CAAC,UAAU,CAAC;AAC3B,KAAG;AAEH;AACE;AACE;AACE;AAEJ;AAAQ;AAAO;AACjB;AAEuC;AAGtC;AAAU;AAAQ;AAA0B;AAAmB;AAAQ,IANtE,yBAAU;AAAM;AACjB;AAEuC;AAGtC;AAAU;AAAQ;AAA0B;AAAmB;AAAQ,IANvE,UAAW,OAAyB;AAAI,QACtC,IAAI,OAAO,KAAK,KAAK,EAAE;AAC3B,YAAM,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;AAC1B,SAAK;AAAC,aAAK,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,EAAE;AAC5D,YAAM,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;AAChC,SAAK;AAAC,aAAK;AACX,YAAM,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;AAC7E,SAAK;AACL,QACI,OAAO,IAAI,CAAC,UAAU,CAAC;AAC3B,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAO;AAKb;AACkB;AAAU;AAAQ;AAC9B;AAAQ,IAPd,sBAAO;AAAM;AAKb;AACkB;AAAU;AAAQ;AAC9B;AAAQ,IAPd;AAAc,QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;AACrB,KAAG;AAEH;AACE;AACE;AACE;AAEJ;AAAQ;AAAO;AACP;AAC6B;AAGpB;AAAU;AAC1B;AAGgB;AAAmB;AACnC,IAVD,sBAAO;AAAM;AACP;AAC6B;AAGpB;AAAU;AAC1B;AAGgB;AAAmB;AACnC,IAVC,UAAQ,OAAe;AAAI,QACzB,IAAI,OAAO,IAAI,CAAC,EAAE;AACtB,YAAM,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;AACxD,SAAK;AACL,QACI,QAAQ,IAAI,CAAC,IAAI,GAAG,OAAO,EAAE;AACjC,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAO;AAEb;AAE+B;AAAU;AACzC;AAAmB;AAAQ,IAL3B,4BAAa;AAAM;AAIlB;AAAoC;AACvC;AAAQ;AAAmB;AAAQ,IALjC;AAAc,QACZ,OAAO,IAAI,CAAC,UAAU,CAAC;AAC3B,KAAG;AAEH;AAAQ;AAAwB;AAC9B;AAAQ,IADR,4BAAa;AAAO;AAAwB;AAC9B;AAAQ,IADtB,UAAc,KAAiB;AAAI,QACjC,QAAQ,IAAI,CAAC,UAAU,GAAG,KAAK,EAAE;AACrC,KAAG;AAEH;AACE;AACE;AACE;AAEJ;AAAQ;AAAO;AAChB;AAEgB;AAGjB;AAAU;AAAQ;AACf;AAAmB;AAAQ,IAP5B,4BAAa;AAAM;AAChB;AAEgB;AAGjB;AAAU;AAAQ;AACf;AAAmB;AAAQ,IAPhC,UAAc,OAA+B;AAAI;AAChD,QAAC,IAAI,CAAC,eAAe,EAAE,CAAC;AAC3B;AAGA,YAFU,IAAI,GAAG,IAAI;AACrB;AACa,YAAT,KAAqB,IAAA,YAAAC,SAAA,OAAO,CAAA,gCAAA,qDAAE;AAClC,gBADS,IAAM,MAAM,oBAAA;AAAE;AACH,oBAAR,GAAG,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC;AACvC,gBAAM,GAAG,CAAC,SAAS;AAAM;AACZ;AAA+B;AAG3C,gBAJmB,UAAC,IAAmB;AAAI,oBACpC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACnD,iBAAO,EAAC,CAAC;AACT,gBACM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAChC,aAAK;AACL;AACS;AAIY;AACnB;AAAkB;AAOlB;AAAc;AAAkD;AACjE,QAbG,OAAO,IAAI,CAAC,UAAU,CAAC;AAC3B,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAO;AACG;AAIG;AAAU;AAAQ;AAAmB;AAAQ,IALhE,4BAAa;AAAM;AACG;AAIG;AAAU;AAAQ;AAAmB;AAAQ,IALtE;AAAc,QACZ,OAAO,IAAI,CAAC,UAAU,CAAC;AAC3B,KAAG;AAEH;AACE;AACE;AACE;AAAO;AAGT;AAAU;AAAQ;AAGb;AAAQ,IANf,8BAAe;AAAM;AAGT;AAAU;AAGxB;AAAmB;AAAQ,IANzB;AAAc;AACP;AAAc,YAAnB,KAAkB,IAAA,KAAAA,SAAA,IAAI,CAAC,UAAU,CAAA,gBAAA,4BAAE;AACvC,gBADS,IAAM,GAAG,WAAA;AAAE,gBACd,GAAG,CAAC,KAAK,EAAE,CAAC;AAClB,gBAAM,GAAG,CAAC,WAAW,EAAE,CAAC;AACxB,aAAK;AACL;AACS;AAIQ;AAAkB;AAAkB;AACV;AAAc;AAGzC;AACf,QATG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;AAC/B,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAO;AAKuB;AACO;AAAU;AAAQ;AAEzD;AAAQ,IARZ,wBAAS;AAAM;AAKuB;AACO;AAAU;AAAQ;AAEzD;AAAQ,IARd;AAAc,QACZ,OAAO,IAAI,CAAC,OAAO,CAAC;AACxB,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAO;AAKG;AAGP;AAAU;AAAQ;AACvB;AAAQ,IATZ,uBAAQ;AAAM;AAKG;AAGP;AAAU;AAAQ;AACvB;AAAQ,IATb;AAAc,QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;AACvB,KAAG;AAEH;AACE;AACE;AACE;AAAO;AACG;AAAU;AAAQ;AACZ;AAAmB;AAEtC,IAJD,oBAAK;AAAM;AACG;AAAU;AAAQ;AACZ;AAAmB;AAEtC,IAJD,UAAM,UAAoB;AAAI,QAA9B,iBAmCC;AACH,QAnCI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;AACzC,QAAI,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;AAC5C;AACwB,YAAd,OAAO,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU;AAC1D,QAAI,IAAI,CAAC,UAAU,EAAE;AACrB;AAA6B,gBAAjB,KAAK,GAAG,IAAI,IAAI,CACpB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,IAAI,IAAI,CAC3D;AACP,YAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,SAAK;AACL,QACI,IAAI,IAAI,CAAC,MAAM,EAAE;AACrB,YAAM,IAAI,CAAC,WAAW,EAAE,CAAC;AACzB,SAAK;AACL,QAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACvB,YAAM,IAAI,CAAC,cAAc,EAAE,CAAC;AAC5B,YAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAClC,SAAK;AACL,QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACxB;AACwB,YAAd,OAAO;AAAQ;AACL;AAChB,QAFgB;AACd,YAAA,KAAI,CAAC,IAAI,CAAC,GAAG;AAAM;AACD;AAAgB,YADpB;AACd;AAAiC,oBAAzB,IAAI,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC;AAChD,gBAAQ,IAAI,IAAI,GAAG,CAAC,EAAE;AACtB,oBAAU,KAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;AAC/C,oBAAU,KAAI,CAAC,4BAA4B,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAC3D,iBAAS;AAAC,qBAAK;AACf,oBAAU,KAAI,CAAC,WAAW,EAAE,CAAC;AAC7B,iBAAS;AACT,aAAO,EAAC,CAAC;AACT,SAAK,CAAA;AACL,QACI,IAAI,CAAC,4BAA4B,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;AACjE,KAAG;AAEH;AACE;AACE;AACE;AAAO;AACP;AAAU;AAAQ;AACd;AAA4B;AACtC;AACA,IAJE,2CAA4B;AAAM;AACP;AAAU;AAChC;AAA0B;AAC7B;AAIC;AAAQ,IAPX,UAA6B,OAAmB,EAAE,SAAiB;AAAI,QAAvE,iBAIC;AACH,QAJI,IAAI,CAAC,IAAI,CAAC,iBAAiB;AAAM;AACjB;AAAY,QADA;AAC1B,YAAA,KAAI,CAAC,UAAU,GAAG,WAAW,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AACxD,SAAK,EAAC,CAAC;AACP,KAAG;AAEH;AACE;AACE;AACE;AAAO;AAGJ;AAAU;AAAQ;AAEhB;AAAQ,IALjB,mBAAI;AAAM;AAGJ;AAAU;AAAQ;AAEhB;AAAQ,IALhB;AAAc,QACZ,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,QACI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;AACjC,QACI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;AACzC,QAAI,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;AAC5C,QACI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC1B,QAAI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACzB,QACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3B,KAAG;AAEH;AACE;AACE;AACE;AAAO;AAGJ;AAAU;AAAQ;AAEhB;AAAQ,IALjB,sBAAO;AAAM;AAGJ;AAAU;AAAQ;AAEhB;AAAQ,IALnB;AAAc,QACZ,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,QACI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;AACjC,QACI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;AACzC,QAAI,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;AAC5C,QACI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACzB,QAAI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACzB,QAAI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AACvB,QACI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9B,KAAG;AAEH;AACE;AACE;AACE;AAEJ;AAAQ;AAAO;AACJ;AAIgC;AAInC;AAAU;AAAQ;AAGvB;AACK;AAAmB;AAAQ,IAbnC,wBAAS;AAAM;AACJ;AAIgC;AAInC;AAAU;AAAQ;AAGvB;AACK;AAAmB;AAAQ,IAbnC,UAAU,KAAe,EAAE,SAAe;AAAI,QAC5C,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACvB,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE;AACpD,YAAM,IAAI,CAAC,OAAO,EAAE,CAAC;AACrB,YAAM,OAAO;AACb,SAAK;AACL,QAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACrC,QACI,IACE,KAAK,KAAK,IAAI;AACpB,YAAM,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,IAAI;AACzC,aAAO,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EACjE;AACN,YAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACxB,SAAK;AACL,KAAG;AAEH;AAAQ;AAAgB;AACpB;AAAmB;AACjB,IAFI,wBAAS;AAAO;AAAgB;AACpB;AACN;AAAQ,IAFtB,UAAkB,KAAc;AAAI,QAClC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACxB,QAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC9B,KAAG;AAEH;AAAQ;AAAgB;AACb;AAAQ,IADT,0BAAW;AAAO;AAChB;AAAmB;AAE3B,IAHF;AAAc,QAAd,iBAqBC;AACH,QArBI,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC,QACI,IAAI,IAAI,CAAC,MAAM,EAAE;AACrB,YAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,YAAM,IAAI,CAAC,aAAa,EAAE,CAAC;AAC3B,YACM,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;AAC/B,gBAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;AACzC,gBAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;AAC3B,gBAAQ,IAAI,CAAC,4BAA4B;AAAM;AACnB;AAChB,gBAF8B;AACpC,oBAAI,KAAI,CAAC,iBAAiB,EAAE,CAAC;AACnC,iBAAS,GAAE,IAAI,CAAC,CAAC;AACjB,aAAO;AACP,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAClC,YAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChC,YAAM,IAAI,CAAC,cAAc,EAAE,CAAC;AAC5B,SAAK;AACL,QACI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;AACzC,KAAG;AAEH;AAAQ;AAAgB;AACX;AACA;AAET;AAAQ,IAJF,2CAA4B;AACjC;AAAgB;AAErB;AACsB;AACrB;AAAQ,IALP,UACE,UAAsB,EACtB,SAAiB;AAClB,QAHD,iBASC;AACH,QANI,IAAI,CAAC,IAAI,CAAC,iBAAiB;AAAM;AACjB;AAAY,QADA;AAC1B,YAAA,KAAI,CAAC,aAAa,GAAG,WAAW;AAAM;AAE1C;AAAgB,YAFqB;AACjC,gBAAE,UAAU,EAAE,CAAC;AACrB,aAAO,GAAE,SAAS,CAAC,CAAC;AACpB,SAAK,EAAC,CAAC;AACP,KAAG;AAEH;AAAQ;AAAgB;AAAyB;AACjC;AAAQ,IADd,+BAAgB;AAAO;AAAgB;AAC3B;AAAmB;AACvC,IAFA,UAAyB,MAAe;AAAI;AAC/B;AAAc,YAAzB,KAAwB,IAAA,KAAAA,SAAA,IAAI,CAAC,UAAU,CAAA,gBAAA,4BAAE;AAC7C,gBADS,IAAM,SAAS,WAAA;AAAE,gBACpB,IAAI,MAAM,EAAE;AAClB,oBAAQ,SAAS,CAAC,MAAM,EAAE,CAAC;AAC3B,iBAAO;AAAC,qBAAK;AACb,oBAAQ,SAAS,CAAC,KAAK,EAAE,CAAC;AAC1B,iBAAO;AACP,aAAK;AACL;AAEK;AACD;AAAkB;AAAkB;AAEtB;AAAc;AAGf;AAAU,KARxB;AAEH;AAAQ;AAAgB;AAA0B;AAChC;AAAQ,IADhB,4BAAa;AAAO;AAAgB;AACzB;AAAmB;AACjC,IAFL,UAAsB,OAAe;AAAI;AAC1B,YAAP,GAAG,GAAS,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;AACvC;AAAyB,YAAf,IAAI,GAAS,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,GAAG;AAChD,QAAI,OAAO,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,OAAO,GAAG,IAAI,CAAC;AAC3D,KAAG;AAEH;AAAQ;AAAgB;AACnB;AAAQ,IADH,gCAAiB;AAAO;AACtB;AACP;AAAQ,IAFX;AAAc,QAAd,iBAIC;AACH,QAJI,IAAI,CAAC,IAAI,CAAC,GAAG;AAAM;AACH;AACd,QAFY;AACZ,YAAA,KAAI,CAAC,WAAW,EAAE,CAAC;AACzB,SAAK,EAAC,CAAC;AACP,KAAG;AAEH;AAAQ;AAAgB;AACb;AAAQ,IADT,0BAAW;AAAO;AAChB;AAAmB;AAAQ,IADrC;AAAc;AACP,YAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC;AACpD,QAAI,IAAI,IAAI,GAAG,CAAC,EAAE;AAClB,YAAM,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;AAC9C,YAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC3B,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACtB,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,EAAE;AAC7B,YAAM,IAAI,CAAC,OAAO,EAAE,CAAC;AACrB,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC/C,QAAI,IAAI,CAAC,SAAS,EAAE,CAAC;AACrB,KAAG;AAEH;AAAQ;AAAgB;AAA6B;AACrC;AAAQ,IADd,gCAAiB;AAAO;AAAgB;AAC3B;AAClB;AAAQ,IAFX,UAA0B,UAAkB;AAAI;AAC/B,YAAT,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;AACnC,QAAI,IAAI,MAAM,KAAK,IAAI,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AAC1D,YAAM,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AACtC,YAAM,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;AAC9B,SAAK;AACL,KAAG;AAEH;AAAQ;AAAgB;AAChB;AAAQ,IADN,6BAAc;AAAO;AACnB;AAAmB;AAAQ,IADrC;AAAc,QACZ,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;AACtD,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,IAAI,CAAC,OAAO,EAAE;AACtB,YAAM,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;AAC/B,SAAK;AACL,QACI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;AAC9B,KAAG;AAEH;AAAQ;AAAgB;AACf;AAAQ,IADP,4BAAa;AAAO;AAClB;AAAmB;AAAQ,IADrC;AAAc,QACZ,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;AACtD,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;AAC7B,KAAG;AAEH;AACE;AACE;AACE;AAAO;AAGZ;AAEI;AAAQ;AAAmB;AAAQ,IALtC,0BAAW;AAAM;AAKlB;AAAU;AAAQ;AAAmB;AAAQ,IAL5C;AAAc,QACZ,IAAI,CAAC,IAAI,EAAE,CAAC;AAChB,QAAI,IAAI,CAAC,eAAe,EAAE,CAAC;AAC3B,KAAG,CA5ZG;AAAC;iBADN,UAAU,3BACmB;AACQ,gBA9B7B,UAAU;AAAI,gBALrB,MAAM;AACN,gBAQO,YAAY,uBAiDhB,QAAQ;AAAM;;;;;;;kCAAS;AAAC,IAqY7B,WAAC;AACA,CA/ZD;AAAK;AAAC;AAAI;AACoB;AAGb;AAAI;AAAG;AACK;ACpC7B;AAAQ;AAEa;AAAI;AAElB,IAHL,uBACS,MAAuB,EACvB,SAAc,EACd,KAAa;AACrB,QADQ,sBAAA,EAAA,aAAa;AACrB,QAHQ,WAAM,GAAN,MAAM,CAAiB;AAAC,QACxB,cAAS,GAAT,SAAS,CAAK;AAAC,QACf,UAAK,GAAL,KAAK,CAAQ;AACxB,KAAM;AACN,IAAA,oBAAC;AACA,CADA;AACG;AAAC;AAAI;AAAkC;AAAqH;ACZhK;AAAG;AAEY;AAAI;AAAI;AAAa;AAOpC;AAAQ;AAGJ;AAAI;AAAI;AAAa;AAAI;AACvB,IAGJ,yBACY,QAA4C,EAC5C,QAA4C;AACvD,QAFW,aAAQ,GAAR,QAAQ,CAAoC;AAAC,QAC7C,aAAQ,GAAR,QAAQ,CAAoC;AAC1D,QATE,eAAU,GAAG,KAAK,CAAC;AACrB,QACS,gBAAW,GAAgC,IAAI,YAAY,EAE/D,CAAC;AACN,KAIM;AACN;AAEC;AACE;AACE;AAAO;AACgD;AAAU;AAAQ;AAAmB;AAAQ,IADvG,gCAAM;AAAM;AACgD;AAAU;AAAQ;AAAmB;AAAQ,IADzG;AAAc,QAAd,iBAcC;AACH;AAKkB;AAOA;AAAyH,QAvBvI,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,KAAK,IAAI,EAAE;AACpD,YAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG;AAAM;AACzB;AAGL,YAJyB,cAAM,OAAA,KAAI,CAAC,MAAM,EAAE,GAAA,EAAC,CAAC;AACnD,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC3C,YAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC1B,SAAK;AACL,QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAC3B,KAAG;AAEH;AACE;AACE;AACE;AAAO;AAEM;AACjB;AAEC;AAAmB;AACrB,IANC,gCAAM;AAAM;AAEM;AACjB;AAEC;AAAmB;AACrB,IANA;AAAc,QACZ,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC1C,YAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC1B,SAAK;AACL,QACI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC5B,KAAG;AACF,IAAD,sBAAC;AACA,CADA;AACG;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAiB,IC7B/K,oBAAoB,GAAG,GAAG;AAChC;AACE;AAC+E;AAEjF;AAAQ;AACgB;AAAI;AAC2B,IAFPD,8CAAe;AAAC,IAM9D,oCACY,MAAW,EACX,MAAc,EACxB,OAA8C;AAC/C,QAJD,YAKE,kBAAM,IAAI,EAAE,IAAI,CAAC,SAqClB;AACH,QA1Cc,YAAM,GAAN,MAAM,CAAK;AAAC,QACZ,YAAM,GAAN,MAAM,CAAQ;AAAC,QANnB,uBAAiB,GAAiB,IAAI,YAAY,EAAE,CAAC;AAC/D,QAUI,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AACrC,YAAM,OAAO,GAAG,EAAE,aAAa,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;AAC3D,SAAK;AACL,QACI,OAAO,GAAG,OAAO,IAAI;AACzB,YAAM,aAAa,EAAE,oBAAoB;AACzC,YAAM,OAAO,EAAE,KAAK;AACpB,SAAK,CAAC;AACN,QACI,IAAI,OAAO,CAAC,aAAa,KAAK,SAAS,IAAI,OAAO,CAAC,aAAa,KAAK,IAAI,EAAE;AAC/E,YAAM,OAAO,CAAC,aAAa,GAAG,oBAAoB,CAAC;AACnD,SAAK;AACL,QACI,KAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;AAC/C,QAAI,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;AACrC;AACwB,YAAd,IAAI,GAAG,KAAI,CAAC,OAAO,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAI;AACxD;AAAyB,YAAf,UAAU,GAAG,MAAM;AAC7B,aAAO,KAAK,CAAC,GAAG,CAAC;AACjB,aAAO,GAAG;AAAM;AAAgC;AAC3C;AAAY,QADN,UAAA,SAAS,IAAI,OAAA,SAAS,CAAM,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,GAAA,EAAC;AAChE,QAAI,KAAI,CAAC,QAAQ,GAAG,KAAK,wBAAI,UAAU,EAAC,CAAC;AACzC,QAAI,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAChC,MAAM;AAAM;AAAgC;AAExC;AAAY,QAFT,UAAA,SAAS,IAAI,OAAA,CAAC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAA,EAAC,CAClD,CAAC;AACN,QAAI,IAAI,KAAI,CAAC,aAAa,GAAG,CAAC,EAAE;AAChC,YAAM,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC;AAC3E,SAAK;AACL;AACwB,YAAd,OAAO;AAAQ;AACR;AAAuB;AAAY,QADhC,UAAC,SAAc;AAAI,YACjC,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,KAAI,EAAE,SAAS,CAAC,CAAC;AAC/D,SAD+D,CAAA;AAC/D,QACI,KAAI,CAAC,QAAQ;AAAQ;AACH;AAAY,QADd;AACZ,YAAF,QAAC,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC;AAChE,SADiE,CAAA,CAAC;AAClE,QACI,KAAI,CAAC,QAAQ;AAAQ;AAAuB;AAAY,QAAxC,cAAM,OAAA,KAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,GAAA,CAAA,CAAC;AAC/D;AAGY,KAHT;AACH;AAEC;AACE;AACE;AAEJ;AAAQ;AAAO;AAKmB;AAElC;AAE+C;AAAU;AAAQ;AAG7D;AAAwB;AAAmB;AAAQ,IAZ5C,gDAAW;AAAM;AAM1B;AAEK;AACqD;AAAU;AAGvE;AAAkB;AAAwB;AAAmB;AAAQ,IAZnE,UAAsB,KAAU;AAAI,QAClC,OAAO,KAAK,CAAC;AACjB,KAAG;AAEH,IAIE,sBAAI,+CAAO;AAAI;AAAY;AACI;AAGjC;AAAY;AAAiB;AAAmD;AAAkD;AAAY,QAJ5I;AAAc,YACZ,OAAO,EAAE,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;AACxE,SAAG;AACF;AACwB;AAA2B,OAFjD;AACH,IAAA,iCAAC;AACA,CAnED,CAAgD,eAAe;AAC9D;AAAC;AAAI;AACH;AAEkB;AAAI;AAAG;AAK3B;AC5BD;AAAQ;AACE;AAAI;AAA6D,IAD9BA,2CAA0B;AAAC,IACtE,iCAAY,MAAc,EAAE,OAA8C;AAC5E,eAAI,kBAAM,QAAQ,CAAC,eAAe,EAAE,MAAM,EAAE,OAAO,CAAC;AAGjD,KAFA;AACH;AAEC;AACE;AACE;AAEJ;AAAQ;AAAO;AACmB;AAG9B;AAEwB;AAAU;AACvC;AAAwB;AAAmB;AACxC,IARD,6CAAW;AAAM;AAEjB;AAEM;AAEwB;AAAU;AACvC;AAAwB;AAAmB;AACxC,IARJ,UAAY,KAAU;AAAI;AACG,QAC3B,IACE,KAAK,CAAC,IAAI,KAAK,WAAW;AAChC;AACM,aAAC,CAAC,KAAK,CAAC,aAAa;AAC3B,gBAAQ,KAAK,CAAC,aAAa,CAAC,SAAS,KAAK,CAAC;AAC3C,gBAAQ,KAAK,CAAC,aAAa,CAAC,SAAS,KAAK,CAAC;AAC3C;AACQ,iBAAC,CAAC,KAAK,CAAC,SAAS,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EACzE;AACN,YAAM,OAAO,IAAI,CAAC;AAClB,SAAK;AACL,QACI,OAAO,KAAK,CAAC;AACjB,KAAG;AACF,IAAD,8BAAC;AACA,CA3BD,CAA6C,0BAA0B;AACtE;AAAC;AAAI;AAAkC;AAK3B;AAAI;AAAG;AACP;ACPb;AAAQ;AAA6C;AAAI;AACb,IADDA,yCAA0B;AAAC,IACpE,+BAAY,MAAc,EAAE,OAA8C;AAC5E,eAAI,kBAAM,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;AAGhC,KAFC;AACH,IAAA,4BAAC;AACA,CALD,CAA2C,0BAA0B;AACpE;AAAC;AAAI;AAAkC;AAIL;AAAI;AAAG;AAAuD;ACRjG;AAAQ;AAAuD;AAAI;AAE7C,IAFsBA,0CAAqB;AAAC,IAChE,gCAAY,aAAmB;AACjC,QADc,8BAAA,EAAA,mBAAmB;AACjC,eAAI,kBAAM,SAAS,EAAE,aAAa,CAAC;AAGhC,KAFA;AACH;AAEC;AACE;AACE;AAEJ;AAAQ;AAAO;AAEC;AAEZ;AAOG;AAAU;AAAQ;AAAwB;AAAmB;AAAQ,IAX3E,4CAAW;AAAM;AAGlB;AACO;AAOG;AAAU;AAAQ;AAAwB;AAAmB;AAAQ,IAX9E,UAAY,KAAmB;AAAI,QACjC,IACE,KAAK,CAAC,GAAG;AACf,YAAM,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;AACxC,YAAM,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EACjC;AACN,YAAM,OAAO,KAAK,CAAC;AACnB,SAAK;AACL,QAAI,OAAO,IAAI,CAAC;AAChB,KAAG;AACF,IAAD,6BAAC;AACA,CArBD,CAA4C,qBAAqB;AAChE;AAAC;AAAI;AACH;AAKkB;AAAI;AAAG;AACU;AAAuB;ACP7D;AAAQ;AACU;AAEZ;AAAI;AAKS,IAReA,gCAAU;AAAC,IAG3C;AACQ,QADR,YACE,iBAAO,SACR;AACH,QALU,eAAS,GAAS,IAAI,CAAC;AACjC;AAEG,KACA;AACH;AAEC;AACE;AACE;AAEJ;AAAQ;AAAO;AAEb;AAMU;AAA2C;AAAU;AAAQ;AAAyB;AAAmB;AAAQ,IAR5H,2BAAI;AAAM;AACe;AAOlB;AAA2C;AAAU;AAAQ;AAAyB;AAAmB;AAAQ,IARxH,UAAK,KAAY;AAAI,QACnB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;AAC1B,YAAM,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC7B,SAAK;AACL,QACI,OAAO,IAAI,CAAC,SAAS,CAAC;AAC1B,KAAG;AACF,IAAD,mBAAC;AACA,CApBD,CAAkC,UAAU;AAC3C;AAAC;AAAI;AAED;AAMoC;ACfzC;AAAgD,IAOhD;AACc,KAab;AACD;AAAQ;AAAmB;AAAQ,IAX1B,oBAAO;AAAO;AACvB;AAAQ,IADN;AAAc,QACZ,OAAO;AACX,YAAM,QAAQ,EAAE,YAAY;AAC5B,YAAM,SAAS,EAAE;AACjB,gBAAQ,kBAAkB;AAC1B,gBAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,kBAAkB,EAAE;AAChE,gBAAQ,IAAI;AACZ,aAAO;AACP,SAAK,CAAC;AACN,KAAG;gDAbF,QAAQ,SAAC;kBACR,SAAS,EAAE,CAAC,YAAY,CAAC,kBAC1B;;;;;;gDACQ;AAAC,IAWV,mBAAC;AACA,CAfD;AAAK;AAAC;AAAI;AAGT;AAII;ACdL;AAAI;AAAuB;AAAe;AAI1C,SAAgB,6BAA6B,CAC3C,OAAqC;AACpC,IACD,OAAO;AACT,QAAI,IAAI,uBAAuB,CACzB,mFAAmF,EACnF,OAAO,CACR;AACL,QAAI,IAAI,sBAAsB,EAAE;AAChC,KAAG,CAAC;AACJ,CAAC;AACD;AACA,IAAa,wBAAwB,GAAU,6BAA6B,EAAE;AAC9E;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAC;AAAkT","sourcesContent":["/*\n * Represents a base class for types that provide expiry detection for the Idle service.\n */\nexport abstract class IdleExpiry {\n  protected idValue: any;\n  protected idlingValue: boolean;\n\n  constructor() {\n    this.idValue = new Date();\n    this.idlingValue = false;\n  }\n\n  /*\n   * Gets or sets a unique ID for the window\n   * @param id - The id.\n   * @return The current id.\n   */\n  id(value?: any): any {\n    if (value !== void 0) {\n      if (!value) {\n        throw new Error('A value must be specified for the ID.');\n      }\n\n      this.idValue = value;\n    }\n\n    return this.idValue;\n  }\n\n  /*\n   * Gets or sets the last expiry date.\n   * @param value - The value to set.\n   * @return The last expiry value.\n   */\n  abstract last(value?: Date): Date;\n\n  /*\n   * Gets or sets the idling value.\n   * @param value - The value to set.\n   * @return The idling value.\n   */\n  idling(value?: boolean): boolean {\n    if (value !== void 0) {\n      this.idlingValue = value;\n    }\n\n    return this.idlingValue;\n  }\n\n  /*\n   * Returns the current Date.\n   * @return The current Date.\n   */\n  now(): Date {\n    /* istanbul ignore next */\n    return new Date();\n  }\n\n  /*\n   * Returns whether or not it is expired.\n   * @return True if expired; otherwise, false.\n   */\n  isExpired(): boolean {\n    const expiry = this.last();\n    return expiry != null && expiry <= this.now();\n  }\n}\n","import { Subscription } from 'rxjs';\n\nimport { InterruptArgs } from './interruptargs';\nimport { InterruptSource } from './interruptsource';\n\n/*\n * A class for managing an interrupt from an interrupt source.\n */\nexport class Interrupt {\n  private sub: Subscription;\n\n  constructor(public source: InterruptSource) {}\n\n  /*\n   * Subscribes to the interrupt using the specified function.\n   * @param fn - The subscription function.\n   */\n  subscribe(fn: (args: InterruptArgs) => void): void {\n    this.sub = this.source.onInterrupt.subscribe(fn);\n  }\n\n  /*\n   * Unsubscribes the interrupt.\n   */\n  unsubscribe(): void {\n    this.sub.unsubscribe();\n    this.sub = null;\n  }\n\n  /*\n   * Keeps the subscription but resumes interrupt events.\n   */\n  resume(): void {\n    this.source.attach();\n  }\n\n  /*\n   * Keeps the subscription but pauses interrupt events.\n   */\n  pause(): void {\n    this.source.detach();\n  }\n}\n","export abstract class KeepaliveSvc {\n  abstract start(): void;\n  abstract stop(): void;\n  abstract ping(): void;\n}\n","/*\n * Represents an alternative storage for browser that doesn't support localstorage. (i.e. Safari in\n * private mode)\n * @implements Storage\n */\nexport class AlternativeStorage implements Storage {\n  private storageMap: any = {};\n\n  /*\n   * Returns an integer representing the number of data items stored in the storageMap object.\n   */\n  get length() {\n    return Object.keys(this.storageMap).length;\n  }\n\n  /*\n   * Remove all keys out of the storage.\n   */\n  clear(): void {\n    this.storageMap = {};\n  }\n\n  /*\n   * Return the key's value\n   *\n   * @param key - name of the key to retrieve the value of.\n   * @return The key's value\n   */\n  getItem(key: string): string | null {\n    if (typeof this.storageMap[key] !== 'undefined') {\n      return this.storageMap[key];\n    }\n    return null;\n  }\n\n  /*\n   * Return the nth key in the storage\n   *\n   * @param index - the number of the key you want to get the name of.\n   * @return The name of the key.\n   */\n  key(index: number): string | null {\n    return Object.keys(this.storageMap)[index] || null;\n  }\n\n  /*\n   * Remove a key from the storage.\n   *\n   * @param key - the name of the key you want to remove.\n   */\n  removeItem(key: string): void {\n    this.storageMap[key] = undefined;\n  }\n\n  /*\n   * Add a key to the storage, or update a key's value if it already exists.\n   *\n   * @param key - the name of the key.\n   * @param value - the value you want to give to the key.\n   */\n  setItem(key: string, value: string): void {\n    this.storageMap[key] = value;\n  }\n\n  [key: string]: any;\n  [index: number]: string;\n}\n","import { Injectable } from '@angular/core';\nimport { AlternativeStorage } from './alternativestorage';\n\n/*\n * Represents a localStorage store.\n */\n@Injectable()\nexport class LocalStorage {\n  private storage: Storage;\n\n  constructor() {\n    this.storage = this.getStorage();\n  }\n\n  /*\n   * Safari, in Private Browsing Mode, looks like it supports localStorage but all calls to setItem\n   * throw QuotaExceededError. We're going to detect this and just silently drop any calls to\n   * setItem\n   * to avoid the entire page breaking, without having to do a check at each usage of Storage.\n   */\n  private getStorage(): Storage {\n    try {\n      const storage = localStorage;\n      storage.setItem('ng2IdleStorage', '');\n      storage.removeItem('ng2IdleStorage');\n      return storage;\n    } catch (err) {\n      return new AlternativeStorage();\n    }\n  }\n\n  /*\n   * Gets an item in the storage.\n   *\n   * @param value - The value to get.\n   * @return The current value.\n   */\n  getItem(key: string): string | null {\n    return this.storage.getItem('ng2Idle.' + key);\n  }\n\n  /*\n   * Removes an item in the storage.\n   *\n   * @param value - The value to remove.\n   */\n  removeItem(key: string): void {\n    this.storage.removeItem('ng2Idle.' + key);\n  }\n\n  /*\n   * Sets an item in the storage.\n   *\n   * @param key - The key to set the value.\n   * @param value - The value to set to the key.\n   */\n  setItem(key: string, data: string): void {\n    this.storage.setItem('ng2Idle.' + key, data);\n  }\n\n  /*\n   * Represents the storage, commonly use for testing purposes.\n   *\n   * @param key - The key to set the value.\n   * @param value - The value to set to the key.\n   */\n  _wrapped(): Storage {\n    return this.storage;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IdleExpiry } from './idleexpiry';\nimport { LocalStorage } from './localstorage';\n\n/*\n * Represents a localStorage store of expiry values.\n * @extends IdleExpiry\n */\n@Injectable()\nexport class LocalStorageExpiry extends IdleExpiry {\n  private idleName = 'main';\n\n  constructor(private localStorage: LocalStorage) {\n    super();\n  }\n\n  /*\n   * Gets or sets the last expiry date in localStorage.\n   * If localStorage doesn't work correctly (i.e. Safari in private mode), we store the expiry value in memory.\n   * @param value - The expiry value to set; omit to only return the value.\n   * @return The current expiry value.\n   */\n  last(value?: Date): Date {\n    if (value !== void 0) {\n      this.setExpiry(value);\n    }\n    return this.getExpiry();\n  }\n\n  idling(value?: boolean): boolean {\n    if (value !== void 0) {\n      this.setIdling(value);\n    }\n    return this.getIdling();\n  }\n\n  /*\n   * Gets the idle name.\n   * @return The name of the idle.\n   */\n  getIdleName(): string {\n    return this.idleName;\n  }\n\n  /*\n   * Sets the idle name.\n   * @param The name of the idle.\n   */\n  setIdleName(key: string): void {\n    if (key) {\n      this.idleName = key;\n    }\n  }\n\n  private getExpiry(): Date {\n    const expiry: string = this.localStorage.getItem(this.idleName + '.expiry');\n    if (expiry) {\n      return new Date(parseInt(expiry, 10));\n    } else {\n      return null;\n    }\n  }\n\n  private setExpiry(value: Date) {\n    if (value) {\n      this.localStorage.setItem(\n        this.idleName + '.expiry',\n        value.getTime().toString()\n      );\n    } else {\n      this.localStorage.removeItem(this.idleName + '.expiry');\n    }\n  }\n\n  private getIdling(): boolean {\n    const idling: string = this.localStorage.getItem(this.idleName + '.idling');\n    if (idling) {\n      return idling === 'true';\n    } else {\n      return false;\n    }\n  }\n\n  private setIdling(value: boolean) {\n    if (value) {\n      this.localStorage.setItem(this.idleName + '.idling', value.toString());\n    } else {\n      this.localStorage.setItem(this.idleName + '.idling', 'false');\n    }\n  }\n}\n","import {\n  EventEmitter,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  Optional\n} from '@angular/core';\n\nimport { IdleExpiry } from './idleexpiry';\nimport { Interrupt } from './interrupt';\nimport { InterruptArgs } from './interruptargs';\nimport { InterruptSource } from './interruptsource';\nimport { KeepaliveSvc } from './keepalivesvc';\nimport { LocalStorageExpiry } from './localstorageexpiry';\n\n/*\n * Indicates the desired auto resume behavior.\n */\nexport enum AutoResume {\n  /*\n   * Auto resume functionality will be disabled.\n   */\n  disabled,\n  /*\n   * Can resume automatically even if they are idle.\n   */\n  idle,\n  /*\n   * Can only resume automatically if they are not yet idle.\n   */\n  notIdle\n}\n\n/**\n * A service for detecting and responding to user idleness.\n */\n@Injectable()\nexport class Idle implements OnDestroy {\n  private idle: number = 20 * 60; // in seconds\n  private timeoutVal = 30; // in seconds\n  private autoResume: AutoResume = AutoResume.idle;\n  private interrupts: Array<Interrupt> = new Array();\n  private running = false;\n  private idling: boolean;\n  private idleHandle: any;\n  private timeoutHandle: any;\n  private countdown: number;\n  private keepaliveEnabled = false;\n  private keepaliveSvc: KeepaliveSvc;\n\n  public onIdleStart: EventEmitter<any> = new EventEmitter();\n  public onIdleEnd: EventEmitter<any> = new EventEmitter();\n  public onTimeoutWarning: EventEmitter<number> = new EventEmitter<number>();\n  public onTimeout: EventEmitter<number> = new EventEmitter<number>();\n  public onInterrupt: EventEmitter<any> = new EventEmitter();\n\n  [key: string]: any;\n\n  constructor(\n    private expiry: IdleExpiry,\n    private zone: NgZone,\n    @Optional() keepaliveSvc?: KeepaliveSvc\n  ) {\n    if (keepaliveSvc) {\n      this.keepaliveSvc = keepaliveSvc;\n      this.keepaliveEnabled = true;\n    }\n    this.setIdling(false);\n  }\n\n  /*\n   * Sets the idle name for localStorage.\n   * Important to set if multiple instances of Idle with LocalStorageExpiry\n   * @param The name of the idle.\n   */\n  setIdleName(key: string): void {\n    if (this.expiry instanceof LocalStorageExpiry) {\n      this.expiry.setIdleName(key);\n    } else {\n      throw new Error(\n        'Cannot set expiry key name because no LocalStorageExpiry has been provided.'\n      );\n    }\n  }\n\n  /*\n   * Returns whether or not keepalive integration is enabled.\n   * @return True if integration is enabled; otherwise, false.\n   */\n  getKeepaliveEnabled(): boolean {\n    return this.keepaliveEnabled;\n  }\n\n  /*\n   * Sets and returns whether or not keepalive integration is enabled.\n   * @param True if the integration is enabled; otherwise, false.\n   * @return The current value.\n   */\n  setKeepaliveEnabled(value: boolean): boolean {\n    if (!this.keepaliveSvc) {\n      throw new Error(\n        'Cannot enable keepalive integration because no KeepaliveSvc has been provided.'\n      );\n    }\n\n    return (this.keepaliveEnabled = value);\n  }\n\n  /*\n   * Returns the current timeout value.\n   * @return The timeout value in seconds.\n   */\n  getTimeout(): number {\n    return this.timeoutVal;\n  }\n\n  /*\n   * Sets the timeout value.\n   * @param seconds - The timeout value in seconds. 0 or false to disable timeout feature.\n   * @return The current value. If disabled, the value will be 0.\n   */\n  setTimeout(seconds: number | boolean): number {\n    if (seconds === false) {\n      this.timeoutVal = 0;\n    } else if (typeof seconds === 'number' && seconds >= 0) {\n      this.timeoutVal = seconds;\n    } else {\n      throw new Error(\"'seconds' can only be 'false' or a positive number.\");\n    }\n\n    return this.timeoutVal;\n  }\n\n  /*\n   * Returns the current idle value.\n   * @return The idle value in seconds.\n   */\n  getIdle(): number {\n    return this.idle;\n  }\n\n  /*\n   * Sets the idle value.\n   * @param seconds - The idle value in seconds.\n   * @return The idle value in seconds.\n   */\n  setIdle(seconds: number): number {\n    if (seconds <= 0) {\n      throw new Error(\"'seconds' must be greater zero\");\n    }\n\n    return (this.idle = seconds);\n  }\n\n  /*\n   * Returns the current autoresume value.\n   * @return The current value.\n   */\n  getAutoResume(): AutoResume {\n    return this.autoResume;\n  }\n\n  setAutoResume(value: AutoResume): AutoResume {\n    return (this.autoResume = value);\n  }\n\n  /*\n   * Sets interrupts from the specified sources.\n   * @param sources - Interrupt sources.\n   * @return The resulting interrupts.\n   */\n  setInterrupts(sources: Array<InterruptSource>): Array<Interrupt> {\n    this.clearInterrupts();\n\n    const self = this;\n\n    for (const source of sources) {\n      const sub = new Interrupt(source);\n      sub.subscribe((args: InterruptArgs) => {\n        self.interrupt(args.force, args.innerArgs);\n      });\n\n      this.interrupts.push(sub);\n    }\n\n    return this.interrupts;\n  }\n\n  /*\n   * Returns the current interrupts.\n   * @return The current interrupts.\n   */\n  getInterrupts(): Array<Interrupt> {\n    return this.interrupts;\n  }\n\n  /*\n   * Pauses, unsubscribes, and clears the current interrupt subscriptions.\n   */\n  clearInterrupts(): void {\n    for (const sub of this.interrupts) {\n      sub.pause();\n      sub.unsubscribe();\n    }\n\n    this.interrupts.length = 0;\n  }\n\n  /*\n   * Returns whether or not the service is running i.e. watching for idleness.\n   * @return True if service is watching; otherwise, false.\n   */\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  /*\n   * Returns whether or not the user is considered idle.\n   * @return True if the user is in the idle state; otherwise, false.\n   */\n  isIdling(): boolean {\n    return this.idling;\n  }\n\n  /*\n   * Starts watching for inactivity.\n   */\n  watch(skipExpiry?: boolean): void {\n    this.safeClearInterval('idleHandle');\n    this.safeClearInterval('timeoutHandle');\n\n    const timeout = !this.timeoutVal ? 0 : this.timeoutVal;\n    if (!skipExpiry) {\n      const value = new Date(\n        this.expiry.now().getTime() + (this.idle + timeout) * 1000\n      );\n      this.expiry.last(value);\n    }\n\n    if (this.idling) {\n      this.toggleState();\n    }\n    if (!this.running) {\n      this.startKeepalive();\n      this.toggleInterrupts(true);\n    }\n\n    this.running = true;\n\n    const watchFn = () => {\n      this.zone.run(() => {\n        const diff = this.getExpiryDiff(timeout);\n        if (diff > 0) {\n          this.safeClearInterval('idleHandle');\n          this.setIdleIntervalOutsideOfZone(watchFn, diff);\n        } else {\n          this.toggleState();\n        }\n      });\n    };\n\n    this.setIdleIntervalOutsideOfZone(watchFn, this.idle * 1000);\n  }\n\n  /*\n   * Allows protractor tests to call waitForAngular without hanging\n   */\n  setIdleIntervalOutsideOfZone(watchFn: () => void, frequency: number): void {\n    this.zone.runOutsideAngular(() => {\n      this.idleHandle = setInterval(watchFn, frequency);\n    });\n  }\n\n  /*\n   * Stops watching for inactivity.\n   */\n  stop(): void {\n    this.stopKeepalive();\n\n    this.toggleInterrupts(false);\n\n    this.safeClearInterval('idleHandle');\n    this.safeClearInterval('timeoutHandle');\n\n    this.setIdling(false);\n    this.running = false;\n\n    this.expiry.last(null);\n  }\n\n  /*\n   * Forces a timeout event and state.\n   */\n  timeout(): void {\n    this.stopKeepalive();\n\n    this.toggleInterrupts(false);\n\n    this.safeClearInterval('idleHandle');\n    this.safeClearInterval('timeoutHandle');\n\n    this.setIdling(true);\n    this.running = false;\n    this.countdown = 0;\n\n    this.onTimeout.emit(null);\n  }\n\n  /*\n   * Signals that user activity has occurred.\n   * @param force - Forces watch to be called, unless they are timed out.\n   * @param eventArgs - Optional source event arguments.\n   */\n  interrupt(force?: boolean, eventArgs?: any): void {\n    if (!this.running) {\n      return;\n    }\n\n    if (this.timeoutVal && this.expiry.isExpired()) {\n      this.timeout();\n      return;\n    }\n    this.onInterrupt.emit(eventArgs);\n\n    if (\n      force === true ||\n      this.autoResume === AutoResume.idle ||\n      (this.autoResume === AutoResume.notIdle && !this.expiry.idling())\n    ) {\n      this.watch(force);\n    }\n  }\n\n  private setIdling(value: boolean): void {\n    this.idling = value;\n    this.expiry.idling(value);\n  }\n\n  private toggleState(): void {\n    this.setIdling(!this.idling);\n\n    if (this.idling) {\n      this.onIdleStart.emit(null);\n      this.stopKeepalive();\n\n      if (this.timeoutVal > 0) {\n        this.countdown = this.timeoutVal;\n        this.doCountdown();\n        this.setTimoutIntervalOutsideZone(() => {\n          this.doCountdownInZone();\n        }, 1000);\n      }\n    } else {\n      this.toggleInterrupts(true);\n      this.onIdleEnd.emit(null);\n      this.startKeepalive();\n    }\n\n    this.safeClearInterval('idleHandle');\n  }\n\n  private setTimoutIntervalOutsideZone(\n    intervalFn: () => void,\n    frequency: number\n  ) {\n    this.zone.runOutsideAngular(() => {\n      this.timeoutHandle = setInterval(() => {\n        intervalFn();\n      }, frequency);\n    });\n  }\n\n  private toggleInterrupts(resume: boolean): void {\n    for (const interrupt of this.interrupts) {\n      if (resume) {\n        interrupt.resume();\n      } else {\n        interrupt.pause();\n      }\n    }\n  }\n\n  private getExpiryDiff(timeout: number): number {\n    const now: Date = this.expiry.now();\n    const last: Date = this.expiry.last() || now;\n    return last.getTime() - now.getTime() - timeout * 1000;\n  }\n\n  private doCountdownInZone(): void {\n    this.zone.run(() => {\n      this.doCountdown();\n    });\n  }\n\n  private doCountdown(): void {\n    const diff = this.getExpiryDiff(this.timeoutVal);\n    if (diff > 0) {\n      this.safeClearInterval('timeoutHandle');\n      this.interrupt(true);\n      return;\n    }\n\n    if (!this.idling) {\n      return;\n    }\n\n    if (this.countdown <= 0) {\n      this.timeout();\n      return;\n    }\n\n    this.onTimeoutWarning.emit(this.countdown);\n    this.countdown--;\n  }\n\n  private safeClearInterval(handleName: string): void {\n    const handle = this[handleName];\n    if (handle !== null && typeof handle !== 'undefined') {\n      clearInterval(this[handleName]);\n      this[handleName] = null;\n    }\n  }\n\n  private startKeepalive(): void {\n    if (!this.keepaliveSvc || !this.keepaliveEnabled) {\n      return;\n    }\n\n    if (this.running) {\n      this.keepaliveSvc.ping();\n    }\n\n    this.keepaliveSvc.start();\n  }\n\n  private stopKeepalive(): void {\n    if (!this.keepaliveSvc || !this.keepaliveEnabled) {\n      return;\n    }\n\n    this.keepaliveSvc.stop();\n  }\n\n  /*\n   * Called by Angular when destroying the instance.\n   */\n  ngOnDestroy(): void {\n    this.stop();\n    this.clearInterrupts();\n  }\n}\n","import { InterruptSource } from './interruptsource';\n\n/*\n * A class for expressing arguments to interrupt events.\n */\nexport class InterruptArgs {\n  constructor(\n    public source: InterruptSource,\n    public innerArgs: any,\n    public force = false\n  ) {}\n}\n","import { EventEmitter } from '@angular/core';\n\nimport { InterruptArgs } from './interruptargs';\n\ndeclare const Zone: any;\n\n/*\n * A base for classes that act as a source for interrupts.\n */\nexport abstract class InterruptSource {\n  isAttached = false;\n\n  public onInterrupt: EventEmitter<InterruptArgs> = new EventEmitter<\n    InterruptArgs\n  >();\n\n  constructor(\n    protected attachFn?: (source: InterruptSource) => void,\n    protected detachFn?: (source: InterruptSource) => void\n  ) {}\n\n  /*\n   * Attaches to the specified events on the specified source.\n   */\n  attach(): void {\n    // If the current zone is the 'angular' zone (a.k.a. NgZone) then re-enter this method in its parent zone\n    // The parent zone is usually the '<root>' zone but it can also be 'long-stack-trace-zone' in debug mode\n    // In tests, the current zone is typically a 'ProxyZone' created by async/fakeAsync (from @angular/core/testing)\n    if (Zone.current.get('isAngularZone') === true) {\n      Zone.current.parent.run(() => this.attach());\n      return;\n    }\n\n    if (!this.isAttached && this.attachFn) {\n      this.attachFn(this);\n    }\n\n    this.isAttached = true;\n  }\n\n  /*\n   * Detaches from the specified events on the specified source.\n   */\n  detach(): void {\n    if (this.isAttached && this.detachFn) {\n      this.detachFn(this);\n    }\n\n    this.isAttached = false;\n  }\n}\n","import { Observable, Subscription, fromEvent, merge } from 'rxjs';\nimport { filter, throttleTime } from 'rxjs/operators';\n\nimport { InterruptArgs } from './interruptargs';\nimport { InterruptSource } from './interruptsource';\n\n/**\n * Options for EventTargetInterruptSource\n */\nexport interface EventTargetInterruptOptions {\n  /**\n   * The number of milliseconds to throttle the events coming from the target.\n   */\n  throttleDelay?: number;\n\n  /**\n   * Whether or not to use passive event listeners.\n   * Note: you need to detect if the browser supports passive listeners, and only set this to true if it does.\n   */\n  passive?: boolean;\n}\n\nconst defaultThrottleDelay = 500;\n\n/*\n * An interrupt source on an EventTarget object, such as a Window or HTMLElement.\n */\nexport class EventTargetInterruptSource extends InterruptSource {\n  private eventSrc: Observable<any>;\n  private eventSubscription: Subscription = new Subscription();\n  protected throttleDelay: number;\n  protected passive: boolean;\n\n  constructor(\n    protected target: any,\n    protected events: string,\n    options?: number | EventTargetInterruptOptions\n  ) {\n    super(null, null);\n\n    if (typeof options === 'number') {\n      options = { throttleDelay: options, passive: false };\n    }\n\n    options = options || {\n      throttleDelay: defaultThrottleDelay,\n      passive: false\n    };\n\n    if (options.throttleDelay === undefined || options.throttleDelay === null) {\n      options.throttleDelay = defaultThrottleDelay;\n    }\n\n    this.throttleDelay = options.throttleDelay;\n    this.passive = !!options.passive;\n\n    const opts = this.passive ? { passive: true } : null;\n    const fromEvents = events\n      .split(' ')\n      .map(eventName => fromEvent<any>(target, eventName, opts));\n    this.eventSrc = merge(...fromEvents);\n    this.eventSrc = this.eventSrc.pipe(\n      filter(innerArgs => !this.filterEvent(innerArgs))\n    );\n    if (this.throttleDelay > 0) {\n      this.eventSrc = this.eventSrc.pipe(throttleTime(this.throttleDelay));\n    }\n\n    const handler = (innerArgs: any) =>\n      this.onInterrupt.emit(new InterruptArgs(this, innerArgs));\n\n    this.attachFn = () =>\n      (this.eventSubscription = this.eventSrc.subscribe(handler));\n\n    this.detachFn = () => this.eventSubscription.unsubscribe();\n  }\n\n  /*\n   * Checks to see if the event should be filtered. Always returns false unless overriden.\n   * @param event - The original event object.\n   * @return True if the event should be filtered (don't cause an interrupt); otherwise, false.\n   */\n  protected filterEvent(event: any): boolean {\n    return false;\n  }\n\n  /**\n   * Returns the current options being used.\n   * @return The current option values.\n   */\n  get options(): EventTargetInterruptOptions {\n    return { throttleDelay: this.throttleDelay, passive: this.passive };\n  }\n}\n","import {\n  EventTargetInterruptOptions,\n  EventTargetInterruptSource\n} from './eventtargetinterruptsource';\n\n/*\n * An interrupt source that uses events on the document element (html tag).\n */\nexport class DocumentInterruptSource extends EventTargetInterruptSource {\n  constructor(events: string, options?: number | EventTargetInterruptOptions) {\n    super(document.documentElement, events, options);\n  }\n\n  /*\n   * Checks to see if the event should be filtered.\n   * @param event - The original event object.\n   * @return True if the event should be filtered (don't cause an interrupt); otherwise, false.\n   */\n  filterEvent(event: any): boolean {\n    // some browser bad input hacks\n    if (\n      event.type === 'mousemove' &&\n      // fix for Chrome destop notifications\n      ((event.originalEvent &&\n        event.originalEvent.movementX === 0 &&\n        event.originalEvent.movementY === 0) ||\n        // fix for webkit fake mousemove\n        ((event.movementX !== void 0 && !event.movementX) || !event.movementY))\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n}\n","import {\n  EventTargetInterruptOptions,\n  EventTargetInterruptSource\n} from './eventtargetinterruptsource';\n\n/*\n * An interrupt source on the Window object.\n */\nexport class WindowInterruptSource extends EventTargetInterruptSource {\n  constructor(events: string, options?: number | EventTargetInterruptOptions) {\n    super(window, events, options);\n  }\n}\n","import { WindowInterruptSource } from './windowinterruptsource';\n\n/*\n * An interrupt source on the storage event of Window.\n */\nexport class StorageInterruptSource extends WindowInterruptSource {\n  constructor(throttleDelay = 500) {\n    super('storage', throttleDelay);\n  }\n\n  /*\n   * Checks to see if the event should be filtered.\n   * @param event - The original event object.\n   * @return True if the event should be filtered (don't cause an interrupt); otherwise, false.\n   */\n  filterEvent(event: StorageEvent): boolean {\n    if (\n      event.key &&\n      event.key.indexOf('ng2Idle.') >= 0 &&\n      event.key.indexOf('.expiry') >= 0\n    ) {\n      return false;\n    }\n    return true;\n  }\n}\n","import { IdleExpiry } from './idleexpiry';\n\n/*\n * Represents a simple in-memory store of expiry values.\n * @extends IdleExpiry\n */\nexport class SimpleExpiry extends IdleExpiry {\n  private lastValue: Date = null;\n\n  constructor() {\n    super();\n  }\n\n  /*\n   * Gets or sets the last expiry date.\n   * @param value - The expiry value to set; omit to only return the value.\n   * @return The current expiry value.\n   */\n  last(value?: Date): Date {\n    if (value !== void 0) {\n      this.lastValue = value;\n    }\n\n    return this.lastValue;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { Idle } from './idle';\nimport { IdleExpiry } from './idleexpiry';\nimport { LocalStorageExpiry } from './localstorageexpiry';\nimport { LocalStorage } from './localstorage';\n\n@NgModule({\n  providers: [LocalStorage]\n})\nexport class NgIdleModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgIdleModule,\n      providers: [\n        LocalStorageExpiry,\n        { provide: IdleExpiry, useExisting: LocalStorageExpiry },\n        Idle\n      ]\n    };\n  }\n}\n","import { DocumentInterruptSource } from './documentinterruptsource';\nimport { EventTargetInterruptOptions } from './eventtargetinterruptsource';\nimport { StorageInterruptSource } from './storageinterruptsource';\n\nexport function createDefaultInterruptSources(\n  options?: EventTargetInterruptOptions\n) {\n  return [\n    new DocumentInterruptSource(\n      'mousemove keydown DOMMouseScroll mousewheel mousedown touchstart touchmove scroll',\n      options\n    ),\n    new StorageInterruptSource()\n  ];\n}\n\nexport const DEFAULT_INTERRUPTSOURCES: any[] = createDefaultInterruptSources();\n"]}